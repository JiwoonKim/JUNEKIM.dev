{"data":{"markdownRemark":{"html":"<h3>클래스 만들기</h3>\n<p>어떻게 실제에 근접하고 효율적인 객체들을 모듈화하는가</p>\n<h4># 클래스-인스턴스 관계 vs 상속관계 vs 포함관계</h4>\n<ul>\n<li>\n<p>클래스-인스턴스 관계: 같은 구조를 가진 것을 <strong>여러 종류 만들어야 할 때</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Pokemon</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> id<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> String name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>상속관계: 슈퍼클래스를 <strong>연장</strong> 하는데 의미가 있음: person -> trainer (+ battleOther()), professor (+ )</li>\n</ul>","frontmatter":{"title":"[OOP] 08. 게임 설계하기","date":"2019-10-10","tags":["Java","객체지향프로그래밍"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/CS_Fundamentals/OOP/8/"}}