{"data":{"markdownRemark":{"html":"<h3>다형성 (Polymorphism)</h3>\n<p>동일한 이름의 다양한 형태의 객체를 만들 수 있는 것</p>\n<h4>메소드 오버로딩 (Method Overloading)</h4>\n<p>한 클래스 내에서 이름이 같은 두 개 이상의 메소드 작성\n 메소드의 인자 개수 또는 타입이 달라야 한다.\n 메소드의 리턴 타입만 달라서는 안된다. (컴파일 에러)</p>\n<p>생성자\nthis() 같은 클래스의\n다른 생성자\n호출 시 사용\n 생성자 내에서만\n사용 가능 (다른\n메소드에서는\n사용 불가)\n 반드시 생성자\n코드의 제일\n처음에 수행</p>","frontmatter":{"title":"[OOP] 05. 다형성","date":"2019-09-25","tags":["Java","객체지향프로그래밍"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/CS_Fundamentals/OOP/5/"}}