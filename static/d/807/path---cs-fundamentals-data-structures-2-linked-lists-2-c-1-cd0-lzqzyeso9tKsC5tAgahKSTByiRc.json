{"data":{"markdownRemark":{"html":"<blockquote>\n<p>자료구조 중 배열과 상호보완적인 관계를 가지는 링크드 리스트 소개</p>\n</blockquote>\n<h3>링크드 리스트 (Linked Lists)</h3>\n<p>동일한 데이터 타입의 노드들이 연속적으로 서로 연결된 자료구조 (sequence of nodes linked together like a chain)</p>\n<p><strong>노드(node)</strong>: 데이터 (data) + 포인터 (pointer)</p>\n<p><strong>링크드 리스트(linked list)</strong>: 헤드 포인터 (head pointer)가 가르키는 노드를 시작으로 서로 연결된 노드들</p>\n<ul>\n<li>배열과 달리 연속적인 메모리 공간이 필요하지 않고, 필요에 따라 <strong>자유롭게 크기를 늘리거나 줄일 수 있다</strong>.</li>\n<li>또한, 맨앞 또는 맨뒤에 삽입/삭제해도 노드들을 옮겨야 할 필요가 없기 때문에 <strong>양끝에서의 빠른 삽입 또는 삭제</strong> 가 최대 장점이다 (시간복잡도 <strong>O(1)</strong> 만에 가능)</li>\n<li>그러나 배열과 달리 인덱스가 없어 임의 접근이 불가능하여, <strong>탐색 및 접근이 느린 것</strong> 이 최대 단점이다 (일일이 노드들을 확인해야 되기 때문에 <strong>O(n)</strong> 이 걸린다) </li>\n</ul>\n<h3>링크드 리스트의 종류</h3>\n<h4>(1) 단순 링크드 리스트 (Singly Linked List)</h4>\n<p>한 방향으로만 이어지는 링크드 리스트 (반대로 돌아갈 수 있는 방법이 없음)</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// 노드 정의                                    // 단순 링크드 리스트 정의</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Node</span> <span class=\"token punctuation\">{</span>                                   <span class=\"token keyword\">class</span> <span class=\"token class-name\">SinglyLinkedList</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span><span class=\"token operator\">:</span>                         <span class=\"token operator\">|</span>              <span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">int</span> data<span class=\"token punctuation\">;</span>                    <span class=\"token operator\">|</span>                  Node<span class=\"token operator\">*</span> head<span class=\"token punctuation\">;</span>\n        Node<span class=\"token operator\">*</span> next<span class=\"token punctuation\">;</span>                  <span class=\"token operator\">|</span>              <span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">public</span><span class=\"token operator\">:</span>                          <span class=\"token operator\">|</span>                  <span class=\"token function\">SinglyLinkedList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">Node</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>             <span class=\"token operator\">|</span>                      <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>head <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>data <span class=\"token operator\">=</span> data<span class=\"token punctuation\">;</span>       <span class=\"token operator\">|</span>              <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>next <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>    <span class=\"token operator\">|</span>          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>                            <span class=\"token operator\">|</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>                                   </code></pre></div>\n<h4>(2) 이중 연결 리스트 (Doubly Linked List)</h4>","frontmatter":{"title":"[자료구조] 02. 링크드 리스트","date":"2019-06-07","tags":["자료구조","Cpp"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/CS_Fundamentals/Data_Structures/2_linked_lists/"}}