{"data":{"markdownRemark":{"html":"<h4>입출력 포맷 문자열</h4>\n<ul>\n<li>scanf와 printf는 <code>포맷 문자열</code>을 통해서 입력과 출력을 받음.\n| 자료형 | 포맷 문자열 |   |\n:-------:|:-----------:|:---|\n| char | %c |   |\n| string| %s |   |\n| int | %d | 16진수는 %x , 8진수는 %o 사용|\n| long long | %lld|   |\n| float | %f |   |\n| double | %lf |   |</li>\n<li>cf) %i는 10진수, 8진수, 16진수 등 int가 표현된 형태를 따름.</li>\n</ul>\n<h4>공백과 줄바꿈 무시</h4>\n<ul>\n<li>scanf와 printf에는 공백이나 줄바꿈을 포함하지 않기에 manually 포함시켜야 할 수도 있음.</li>\n<li>\n<p>fgets()를 사용하여 한 줄 전체를 읽어드릴 수 있음 (단, 줄바꿈도 같이 읽음).</p>\n<pre><code class=\"language-c\">scanf(\"%c\", &#x26;x); \n// %c의 경우 공백과 줄바꿈(\\n)을 ASCII 코드 값으로 읽을 수도 있기에 주의!\n</code></pre>\n</li>\n</ul>\n<h4>포함과 불포함 포맷 문자열</h4>\n<ul>\n<li>%[]을 사용할 경우 대괄호에 포함된 문자만 입력받음.</li>\n<li>\n<p>%[^]을 사용할 경우 대괄호에 포함되지 않은 문자 전까지만 입력 받음.</p>\n<pre><code class=\"language-c\">scanf(\"%[abc]\", &#x26;x); // abcdef라는 문자열이 있을 때 x = abc가 됨.\nscanf(\"%[^def]\", &#x26;x); // abcdef라는 문자열이 있을 때 x = abc가 됨.\n</code></pre>\n</li>\n</ul>\n<h4>길이 제한 포맷 문자열</h4>\n<ul>\n<li>\n<p>%숫자를 사용하여 문자열의 길이를 제한할 수 있음.</p>\n<pre><code class=\"language-c\">scanf(\"%2d\", &#x26;x); // 길이가 2인 10진수 읽기\nscanf(\"%10s\", &#x26;s); // 길이가 10인 문자열 읽기\n</code></pre>\n</li>\n</ul>\n<h4>무시하고 넘어가기</h4>\n<ul>\n<li>\n<p>%*자료형 사용하면 입력은 받지만 저장하지 않고 넘어가는 경우에 유용.</p>\n<pre><code class=\"language-c\">scanf(\"%d %*d %d\", &#x26;x, &#x26;y); // 중간의 정수는 그냥 넘어가고 앞 뒤만 저장\n</code></pre>\n</li>\n</ul>","frontmatter":{"path":"/algorithm/baekjoon_STL/c_basic","title":"[백준] 프로그래밍 대회에서 사용하는 C 언어","date":"2018-01-24","tags":["백준","C","강의노트"]}}},"pageContext":{}}