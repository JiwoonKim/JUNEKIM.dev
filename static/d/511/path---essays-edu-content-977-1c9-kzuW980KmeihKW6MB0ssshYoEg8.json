{"data":{"markdownRemark":{"html":"<blockquote>\n<p>가까운 미래에 만들고자 하는 개발 관련 컨텐츠에 대한 스케치</p>\n</blockquote>\n<h3>디자인</h3>\n<p>가능하면 educative.io + joelglovier.com의 방향으로</p>\n<ul>\n<li>\n<p>컬러 아이디어</p>\n<ul>\n<li>회색 배경 사용: <a href=\"http://www.dontfeartheinternet.com/\">예시</a></li>\n<li>각 기술을 대표하는 색깔 지정: <a href=\"http://www.evolutionoftheweb.com/\">예시</a></li>\n<li><a href=\"https://30-seconds.github.io/30-seconds-of-css/\">great code block color scheme</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=ptBZdXl4P6c\">리아유 video</a>: each chapter(language) has specific color background throughout the series</li>\n</ul>\n</li>\n<li>\n<p>레이아웃 디자인</p>\n<ul>\n<li>educative.io</li>\n<li>심플하게: <a href=\"https://internetingishard.com/\">예시</a></li>\n<li>깔끔 &#x26; 그림: <a href=\"https://joelglovier.com/writing/sitemaps-for-jekyll-sites\">예시</a></li>\n</ul>\n</li>\n</ul>\n<h4>캐릭터</h4>\n<p>마스코트가 있으면 좋겠다</p>\n<ul>\n<li>binary information 표현시, 바둑돌 캐릭터 (white &#x26; black)으로 표현하면 어떨까? 그냥 바둑돌에 눈만 띡띡 찍은 캐릭터 생각중</li>\n</ul>\n<h3>운영방식</h3>\n<h4>섹션 (sections)</h4>\n<ul>\n<li>\n<p>전반적으로, 두 큰 섹션으로 나눌 수 있으면 좋겠다.</p>\n<ul>\n<li>basic: 생활코딩처럼 기본적으로 알면 좋을 것들</li>\n<li>under the hood: 좀 더 자세히 들어가는 nerdy bits으로 추가적으로 설명하는 부분으로</li>\n</ul>\n</li>\n<li>음, 다만 저런 방식으로 페이지를 나누면 UI가 별로일 것 같으니, 한 페이지에 놓고 under the hood 부분은 숨겨놓고 버튼 누르면 열리는 형식은 어떨까?</li>\n</ul>\n<h4>교육 방식</h4>\n<p>기존의 학교에서 하는 나열식 강의보다는 (문제 제시 -> 문제를 풀기 위해 필요한 정보/학습 -> 문제풀기)의 방식이 좋을 것 같다</p>\n<ul>\n<li>문제 = 주제를 관통하는 큰 문제 / 프로젝트</li>\n<li>이러한 문제 중심의 교육 방식을 통해 이론과 실전 사이의 괴리를 좁히고 지금 당장 irrelevant한 또는 불필요한 지식을 과감하게 버리려고 한다. </li>\n<li>필요한 정보를 그때그때 학습할 수 있게</li>\n</ul>\n<h4>시간</h4>\n<blockquote>\n<p>개인적으로는 긴 것이 나는 더 좋은데 다른 사람들은 어떻게 생각하느지가 궁금하다 (설문조사를 하는 것이 좋을듯)</p>\n</blockquote>\n<ul>\n<li>짧은 것 여러개(?) like 생활코딩</li>\n<li>긴 것(?) like CS50</li>\n</ul>\n<h4>레퍼런스 강의</h4>\n<p>오픈튜토리얼을 보면 다른 강의의 컨텐츠를 나의 강의의 부품으로 가져올 수 있는 기능이 있는데 단순히 강의 링크를 거는 것보다 훨씬 좋은 것 같다</p>\n<ul>\n<li>어떻게, 오픈튜토리얼 강의를 가져오면서 나만의 플랫폼에서 컨텐츠를 만들 수 있는 방법은 없을까?</li>\n</ul>\n<h4>커뮤니티 형성하기</h4>\n<p>커뮤니티가 있으면 완주율이 높아진다</p>\n<ul>\n<li>ex. 생활코딩 공동공부 (엑셀)</li>\n</ul>\n<h3>콘텐츠</h3>\n<h4>프론트엔드 포커스</h4>\n<p>너무 많은 비유는 주의할 것</p>\n<ul>\n<li>client-server relationship은 레스토랑 비유</li>\n<li>tcp/ip는 우편 비유</li>\n<li>html, css, js: 구조, 디자인, 인터랙션</li>\n</ul>\n<h4>Build things from scratch</h4>\n<p>전자공학 base (?)</p>\n<ul>\n<li>로봇 만들기</li>\n<li>하드웨어 + 소프트웨어</li>\n</ul>\n<h4>오픈소스 프로젝트 참여하기</h4>\n<p>초보자들도 오픈소스를 두려워하지 않고 도전할 수 있도록 하는 오픈소스 프로젝트를 만들고 싶다</p>\n<ul>\n<li>issue 등록, 협업 (git/github 사용), 테스팅 &#x26; ci/cd 등 전체적인 프로덕트 생산까지의 과정을 배울 수 있게끔</li>\n<li>\n<p>같이 튜토리얼을 위한 프로젝트 만들기(?)</p>\n<ul>\n<li>ex. freecodecamp curriculum extension</li>\n</ul>\n</li>\n</ul>\n<h4>Freedom</h4>\n<ul>\n<li>internet built as a distributed system (to survive even through nuclear attacks, but still...) instead of centralized system -> think of the implication and effect of that</li>\n<li>how about 정보 독점? do certain big giant groups (like google) monopolize personal information? if so, what are the implications?</li>\n<li>the advent of personal computers (PCs): before, there was a fear about the computer becoming a medium for the 'big brother', but like the ad for macintosh computer in 1989, it proved differently. how has pc's turned out to be?</li>\n</ul>\n<h4>Women &#x26; Tech</h4>\n<ul>\n<li>grace hopper</li>\n<li>computers = 원래 시작은 여성의 전유물이었다는...</li>\n</ul>","frontmatter":{"title":"Ideas for education content made by myself","date":"2019-02-25","tags":["에세이","컨텐츠","교육"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/Essays/edu_content/"}}