{"data":{"markdownRemark":{"html":"<h3>문제 1: 소수 만들기</h3>\n<p>주어진 숫자들 중 3개의 수를 더했을 때 소수가 되는 경우의 개수 구하기\n(중복된 숫자는 주어지지 않음)</p>\n<ul>\n<li>ex. [1, 2, 3, 4] -> (1,2,4 = 7) => 결과: 1</li>\n<li>ex. [1, 2, 7, 6, 4] -> (1,2,4 = 7), (1,4,6 = 11), (2,4,7 = 13), (4,6,7 = 17)</li>\n</ul>\n<h4>내가 푼 방법</h4>\n<p>시간복잡도 O(n^3 * √n), 공간복잡도 O(1)</p>\n<ol>\n<li>주어진 숫자들에서 차례대로 3 숫자의 조합의 합을 구하기</li>\n<li>그 합이 소수인지 체크</li>\n</ol>\n<h4>내가 작성한 코드</h4>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// 도우미 함수: 소수인지 체크</span>\n<span class=\"token keyword\">bool</span> <span class=\"token function\">isPrime</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">*</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 주어진 숫자들의 세 합이 소수인 경우의 개수 구하기</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> size <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 배열에서 각기 다른 세 개의 숫자를 골라</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> size<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> size<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k <span class=\"token operator\">=</span> j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> size<span class=\"token punctuation\">;</span> k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token comment\">// 세 숫자의 합이 소수인지 체크</span>\n                <span class=\"token keyword\">int</span> sum <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> nums<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isPrime</span><span class=\"token punctuation\">(</span>sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// 총 소수 개수 리턴</span>\n    <span class=\"token keyword\">return</span> count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>문제 2: 소수 찾기</h3>\n<p>주어진 한 자리 숫자들을 가지고 만들 수 있는 모든 순열 중 소수의 개수 구하기 (단, 숫자들을 문자열의 형태로 주어짐)  </p>\n<ul>\n<li>ex. \"17\" -> [7, 17, 71] => 결과: 3</li>\n<li>ex. \"011\" -> [11, 101] => 결과: 2</li>\n</ul>\n<h4>내가 푼 방법</h4>\n<p>시간복잡도 O(n!)</p>\n<ul>\n<li>\n<p>주어진 숫자들을 가지고 만들 수 있는 모든 순열 수 구하기</p>\n<ul>\n<li>중복된 숫자들이 가능하기 때문에 중복된 순열 수들 제외</li>\n</ul>\n</li>\n<li>모든 조합 수들을 일일이 소수인지 체크</li>\n</ul>\n<h4>내가 작성한 코드</h4>\n<p>코드 다 작성도 못하고 끝났기 때문에 다시 찬찬히 생각한 코드를 대신 남김</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">int</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>string nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 모든 순열 만들어보기 </span>\n    <span class=\"token keyword\">do</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token function\">next_permutation</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> count<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>결과 및 후기</h3>\n<p>두 번째 문제 코드를 다 작성하지 못하여 <strong>불합격</strong> 했다.</p>\n<ul>\n<li>소수와 조합 등 수학에 대한 전반적인 이해가 많이 부족했다</li>\n<li>\n<p>순열을 구해야 하는 문제이기 때문에 시간복잡도를 너무 많이 신경 써 허둥지둥했다</p>\n<ul>\n<li>순열은 결국에는 모두 구해야 하기 때문에 시간복잡도가 기하급수적으로 커지는 것은 어쩔 수 없는 건가 보다...</li>\n<li>순열 또는 조합을 구해야 하는 문제에서는 그걸 구하는 시간복잡도는 크게 신경 쓰지 말도록 하자ㅠㅜ</li>\n</ul>\n</li>\n</ul>\n<h3>What I learned</h3>\n<ul>\n<li>\n<p>소수와 순열 등 수학에 대한 전반적인 이해가 많이 부족했다</p>\n<ul>\n<li><code class=\"language-text\">소수 체크</code>: 주어진 숫자가 소수인지 체크하는 방법, 에라토스테네스의 체로 주어진 범위에서 소수 모두 구하기</li>\n<li>순열 구하기: 중복순열을 제외한 모든 경우의 수를 구하는 방법</li>\n</ul>\n</li>\n<li>순열과 조합 문제에서는 그걸 구하는 시간복잡도는 신경 쓰지 말자</li>\n</ul>","frontmatter":{"title":"[프로그래머스] 스킬 체크 Level 2 - 도전 2","date":"2019-08-19","tags":["알고리즘","코딩 테스트"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/Coding_Comps/Programmers/skillCheck2_try_2/"}}