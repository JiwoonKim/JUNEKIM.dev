{"data":{"markdownRemark":{"html":"<blockquote>\n<p>Understanding React, Props, and State</p>\n</blockquote>\n<h3>React</h3>\n<p>javascript library that allows us to <strong>write declarative views</strong> that <strong>react to the changes in data</strong></p>\n<ul>\n<li>\n<p>write what you want and the library will take care of the DOM manipulation</p>\n<ul>\n<li>reconcillation = process by which React syncs changes in app state to the DOM</li>\n<li>reconstructs the virtual DOM and compares with the actual DOM for changes</li>\n</ul>\n</li>\n<li>allows us to abstract problems into smaller components</li>\n</ul>\n<h4>Declarative Programming</h4>\n<p>easier to read and easier to maintain</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// example of adding title to slide</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">SLIDE</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    title<span class=\"token punctuation\">:</span> <span class=\"token string\">'React is declarative'</span><span class=\"token punctuation\">,</span>\n    bullets<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">'Imperative vs. Declarative'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'The browser APIs are not fun to work with'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'React allows us to write what we want, and takes care of the rest'</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// imperative                                       // declarative</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">createSlide</span><span class=\"token punctuation\">(</span>slide<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>                    <span class=\"token operator\">|</span>  <span class=\"token keyword\">function</span> <span class=\"token function\">createSlide</span><span class=\"token punctuation\">(</span>slide<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> slide <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">|</span>      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">const</span> title <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'h1'</span><span class=\"token punctuation\">)</span>   <span class=\"token operator\">|</span>        <span class=\"token operator\">&lt;</span>Slide<span class=\"token operator\">></span>\n    title<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token constant\">SLIDE</span><span class=\"token punctuation\">.</span>title                <span class=\"token operator\">|</span>            <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token constant\">SLIDE</span><span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n    <span class=\"token keyword\">return</span> slide                                 <span class=\"token operator\">|</span>            <span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">></span>\n<span class=\"token punctuation\">}</span>                                                <span class=\"token operator\">|</span>              <span class=\"token punctuation\">{</span><span class=\"token constant\">SLIDE</span><span class=\"token punctuation\">.</span>bullets<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>bullet <span class=\"token operator\">=></span> <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>bullet<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                                                 <span class=\"token operator\">|</span>            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span>\n                                                 <span class=\"token operator\">|</span>        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Slide<span class=\"token operator\">></span>\n                                                 <span class=\"token operator\">|</span>      <span class=\"token punctuation\">)</span>\n                                                 <span class=\"token operator\">|</span>  <span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>imperative language: outlines the specific series of steps to get what you want</li>\n<li>declarative language: just delcares what you want</li>\n</ul>\n<h4>Componentized</h4>\n<p>breaking a complex problem into discrete components</p>\n<ul>\n<li>components are <strong>just functions returning a node for React to render</strong> (ex. &#x3C; div />)</li>\n<li><strong>can reuse</strong> these componenets: great for consistency, iteration speed, easy to customize components</li>\n</ul>\n<h3>Props</h3>\n<p>short for <strong>properties</strong>, objects passed to a component</p>\n<ul>\n<li>changes in these props cause recomputation of the node (a.k.a re-render)</li>\n</ul>\n<h3>State</h3>\n<p>internally-managed configuration for a component</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// create state for component</span>\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n            count<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">/** update state of component\n     *  (remember to bind method to component)\n     */</span>\n    <span class=\"token function\">increaseCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">:</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// render the component</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n                </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n                </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">increaseCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Increase</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">let</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>App</span> <span class=\"token attr-name\">count</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">this.state</code> = class property on the component instance</li>\n<li>\n<p>can only be updated by invoking <code class=\"language-text\">this.setState()</code> implemented by React.component</p>\n<ul>\n<li>the calls are batched and run aynchronously</li>\n<li>changes in state also cause re-renders</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"Mobile50 lecture 2 - React, Props, State","date":"2019-09-03","tags":["CS50","Mobile50","React"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/CS50/mobile50/lecture_2/"}}