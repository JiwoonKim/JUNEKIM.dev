{"data":{"markdownRemark":{"html":"<blockquote>\n<p>C와 C++의 문자열 정리</p>\n</blockquote>\n<h3>문자열 (String)</h3>\n<ul>\n<li>C 문자열: <code class=\"language-text\">char c[]</code>로 선언을 한다.</li>\n<li>\n<p>C++ 문자열: <code class=\"language-text\">string s</code>로 선언을 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">char</span> c<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"c string\"</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// C 문자열</span>\nstring s <span class=\"token operator\">=</span> <span class=\"token string\">\"c++ string\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// C++ 문자열 (NULL전까지만 할당)</span>\nstring s <span class=\"token operator\">=</span> c<span class=\"token punctuation\">;</span>            <span class=\"token comment\">// C 문자열을 담을 수도 있음 </span>\nstring <span class=\"token function\">s</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'#'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// \"#####\"</span></code></pre></div>\n</li>\n</ul>\n<h4>문자열 입출력</h4>\n<ul>\n<li><code class=\"language-text\">cin</code>와 <code class=\"language-text\">cout</code>, 그리고 <code class=\"language-text\">getline(cin, str)</code>사용이 편리하다.</li>\n<li>\n<p>printf를 사용해야 하는 경우, <code class=\"language-text\">str.c_str()</code>을 통해 C 문자열로 변환 후 출력해야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">include <span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span>\nstring str <span class=\"token operator\">=</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h4>문자열 연산</h4>\n<ul>\n<li>\n<p>비교: </p>\n<ul>\n<li><code class=\"language-text\">==</code>와 <code class=\"language-text\">!=</code>로 같은지 확인할 수 있다.</li>\n<li><code class=\"language-text\">&gt;</code> 또는 <code class=\"language-text\">&lt;</code>로 사전순으로 앞서는지 뒤에 서는지 알아볼 수 있다.</li>\n</ul>\n</li>\n<li>추가: <code class=\"language-text\">+=</code>와 <code class=\"language-text\">append</code> 또는 <code class=\"language-text\">insert</code>를 통해 뒤에 문자열을 추가할 수 있다.</li>\n<li>\n<p>크기: <code class=\"language-text\">length</code>를 통해 크기를 알아보고, <code class=\"language-text\">empty</code>를 통해 빈 문자열인지 확인해본다. (단, size는 unsigned 형태이기 때문에 size() - 1와 같은 표현이 불가능함))</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">include <span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span>\nstring str <span class=\"token operator\">=</span> <span class=\"token string\">\"h\"</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// h</span>\nstr <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token string\">\"ello\"</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// hello</span>\nstr<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"world\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// hello world</span>\nstr<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// hello world! (10번째 index에 추가)</span></code></pre></div>\n</li>\n</ul>\n<h4>문자열 &#x3C;-> 숫자</h4>\n<ul>\n<li>\n<p>문자열 -> 숫자: <code class=\"language-text\">stoi()</code>, <code class=\"language-text\">stol</code>, <code class=\"language-text\">stof</code>, <code class=\"language-text\">stod</code>를 이용한다.</p>\n<ul>\n<li>0 ~ 9 한 자리수 문자열을 숫자로 변환시에는 <code class=\"language-text\">c - &#39;0&#39;</code> 도 사용 가능하다.</li>\n</ul>\n</li>\n<li>\n<p>숫자 -> 문자열: <code class=\"language-text\">to_string()</code>를 이용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">string str <span class=\"token operator\">=</span> <span class=\"token string\">\"10\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> <span class=\"token function\">stoi</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 10 (기본으로 10진법으로 바꿈)</span>\nnum <span class=\"token operator\">=</span> <span class=\"token function\">stoi</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2 (2진법으로 숫자를 읽어 바꿈)</span>\nnum <span class=\"token operator\">=</span> <span class=\"token function\">stoi</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 16 (16진법으로 숫자를 읽어 바꿈)</span>\n<span class=\"token comment\">// 숫자와 혼합된 스트링 변환하기</span>\nstr <span class=\"token operator\">=</span> <span class=\"token string\">\"21 Guns\"</span><span class=\"token punctuation\">;</span>\nnum <span class=\"token operator\">=</span> <span class=\"token function\">stoi</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 21 (숫자가 있는 부분까지만 읽어 바꿈)</span></code></pre></div>\n</li>\n</ul>\n<h4>문자열 파싱 (string parsing)</h4>\n<ul>\n<li>\n<p><code class=\"language-text\">istringstream</code>을 사용하여 string을 표준 입출력처럼 사용할 수가 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stringstream></span></span>\n<span class=\"token comment\">// 일단 입력된 값을 스트링 형태로 저장</span>\nstring str<span class=\"token punctuation\">;</span>\nstring line<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>cin <span class=\"token operator\">>></span> line<span class=\"token punctuation\">)</span> s <span class=\"token operator\">+</span><span class=\"token operator\">=</span> line<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 스트림을 사용하여 문자열 파싱</span>\n<span class=\"token keyword\">int</span> num<span class=\"token punctuation\">;</span>\nistringstream <span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 문자열 스트림을 생성</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getline</span><span class=\"token punctuation\">(</span>sin<span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">,</span> <span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// 문자열 스트림의 문자열을 ,로 구분하여 num에 저장</span></code></pre></div>\n</li>\n</ul>","frontmatter":{"path":"/baekjoon/STL/STL_string","title":"[백준] STL 04. 문자열","date":"2019-01-28","tags":["백준","C++","STL"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}