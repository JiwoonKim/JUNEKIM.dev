{"data":{"markdownRemark":{"html":"<blockquote>\n<p>understanding Responsive Design</p>\n</blockquote>\n<ul>\n<li><a href=\"https://internetingishard.com/\">reference</a></li>\n<li><a href=\"https://developers.google.com/web/fundamentals/design-and-ux/responsive/patterns?hl=en\">responsive web design patters</a></li>\n</ul>\n<h3>Responsive Design</h3>\n<p>the idea that your website should display equally well in everything from widescreen monitors to mobile phones</p>\n<ul>\n<li>\n<p>accomplished via css <code class=\"language-text\">@media</code> (media queries)</p>\n<ul>\n<li>way to conditionally apply CSS rules</li>\n</ul>\n</li>\n<li><strong>media type</strong>: <code class=\"language-text\">only screen</code>, <code class=\"language-text\">print</code></li>\n<li><strong>media features</strong>: <code class=\"language-text\">min-width</code>, <code class=\"language-text\">max-width</code></li>\n</ul>\n<h4>Layout Concepts</h4>\n<p>generally, <em>mobile and tablet versions are fluid</em> while the <em>desktop version is fixed-width</em></p>\n<ul>\n<li>\n<p><strong>Fluid Layout</strong>: stretches and shrinks to fill the width of the screen</p>\n<ul>\n<li>can <strong>target a range</strong> of screen widths; not a company's device</li>\n<li>so <strong>the exact pixel values (breakpoints) don't actually matter</strong></li>\n</ul>\n</li>\n<li><strong>Fixed-width Layout</strong>: same width regardless of screen dimensions</li>\n</ul>\n<h4>Mobile-first Development</h4>\n<p>it's always a good idea to <strong>start w/ the mobile layout and work the way up to desktop version</strong> so that you can maximize the amount of css you can reuse across layours</p>\n<ul>\n<li>\n<p><strong>define base styles outsite media queries</strong> (and above them)</p>\n<ul>\n<li>override them when implementing other specific layouts</li>\n</ul>\n</li>\n<li>use <code class=\"language-text\">flex-wrap</code> property for container to easily implement other layouts</li>\n</ul>\n<h4>Tablet Layout</h4>\n<p>again, it doesn't matter what the exact width of the screen is (the layout will fluidly respond to any width in the range)</p>\n<ul>\n<li>\n<p>use <code class=\"language-text\">@media</code> with <code class=\"language-text\">min-width</code> and <code class=\"language-text\">max-width</code></p>\n<ul>\n<li>generally <em>(min-width: 401px) and (max-width 960px)</em> work</li>\n</ul>\n</li>\n<li>\n<p><strong>adjust widths of the items within flex container</strong></p>\n<ul>\n<li>percentage works well</li>\n<li>flex-wrap will take care of the rest</li>\n</ul>\n</li>\n<li><strong>adjust the orders of the items</strong>: flexbox's <code class=\"language-text\">order</code> property</li>\n</ul>\n<h4>Desktop Layout</h4>\n<ul>\n<li>\n<p>use <code class=\"language-text\">@media</code> with <code class=\"language-text\">min-width</code></p>\n<ul>\n<li>generally (min-width: 961px) works well</li>\n</ul>\n</li>\n<li>give it a <strong>fixed width</strong> and center it with <strong>auto-margins</strong> so that the web page doesn't expand endlessly</li>\n<li>\n<p><strong>adjust widths of the items within flex container</strong></p>\n<ul>\n<li>percentage works well</li>\n<li>flex-wrap will take care of the rest</li>\n</ul>\n</li>\n<li><strong>adjust the orders of the items</strong>: flexbox's <code class=\"language-text\">order</code> property</li>\n</ul>\n<h4>Disabling Viewport Zooming</h4>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>viewport<span class=\"token punctuation\">'</span></span>\n    <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>width=device-width, initial-scale=1.0, maximum-scale=1.0<span class=\"token punctuation\">'</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<ul>\n<li>bcuz mobile devices zoom out to fit the entire desktop layout into the small screen by default (prevents mobile layouts to be implemented)</li>\n</ul>\n<h3>Responsive Images</h3>\n<p><strong>display different images</strong> based on the <strong>user's device</strong></p>\n<ul>\n<li>\n<p><strong>problem</strong>: </p>\n<ul>\n<li>\n<p>images have inherent dimensions</p>\n<ul>\n<li><strong>cannot stretch</strong> beyond the width or length</li>\n</ul>\n</li>\n<li><strong>retina screen</strong> displays require <strong>high resolution/large images</strong></li>\n<li>sending high-resolution images to <strong>standard displays and smaller devices is unnecessary data and a bad user experience</strong></li>\n</ul>\n</li>\n<li>\n<p><strong>things to consider</strong>:</p>\n<ol>\n<li>the <strong>device's dimension</strong></li>\n<li>the <strong>image's dimension</strong></li>\n<li>device's <strong>screen resolution</strong></li>\n</ol>\n</li>\n</ul>\n<h4>Make Images Responsive</h4>\n<ul>\n<li>\n<p><strong>use SVG</strong> (vector-based images)</p>\n<ul>\n<li>\n<p>can avoid the screen resolution problem</p>\n<ul>\n<li>bcuz browsers automatically scale up SVGs for retina devices</li>\n</ul>\n</li>\n<li>\n<p><strong>need to shrink image for fluid tablet and mobile layouts</strong></p>\n<ul>\n<li>set the <code class=\"language-text\">width: 100%</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Raster Images</strong> (PNG, GIF, JPG) <strong>w/ Image Optimization</strong></p>\n<ol>\n<li>use <strong>high resolution image</strong> w/ <code class=\"language-text\">srcset</code></li>\n<li></li>\n</ol>\n</li>\n</ul>\n<h3>Web Typography</h3>","frontmatter":{"path":"/frontend/9","title":"Frontend Focus 09 - Responsive Design & Web Typography","date":"2018-03-08","tags":["웹개발","프론트엔드","디자인","responsive design","타이포그라피"]}}},"pageContext":{}}