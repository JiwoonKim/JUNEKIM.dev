{"data":{"markdownRemark":{"html":"<blockquote>\n<p>C++ 언어로 프로그래밍할 때 필요한 치트키들을 정리.\n개인적인 자주 사용하는 문법을 반영하여 만든 치트키입니다.</p>\n</blockquote>\n<h3>입출력</h3>\n<ul>\n<li>기본적으로 <code>scanf</code>와 <code>printf</code>이 가장 빠르다.</li>\n<li><code>ios_base::sync_with_stdio(false);</code>를 <code>cin</code>과 <code>cout</code> 사용 전에 명시하면 비슷한 빠르기로 실행가능 (하지만 그래도 scanf와 printf가 더 빠름)</li>\n<li>\n<p>입력:</p>\n<ul>\n<li><code>getline(cin, s)</code>를 사용하면 '\\n' 기준으로 한 줄씩 읽을 수 있다 (단, cin 사용 후에 getline을 사용하려면 <code>cin.ignore</code>로 먼저 istream에 있는 '\\n'을 flush해주어야 함) </li>\n</ul>\n</li>\n<li>\n<p>출력:</p>\n<ul>\n<li><code>cout &#x3C;&#x3C; \"\\n\"</code>가 endl 보다 빠르다.</li>\n<li>printf 사용시 c++ string class를 </li>\n</ul>\n</li>\n</ul>\n<h4>테스트 케이스</h4>\n<ul>\n<li>\n<p>모든 테스트 케이스를 입력받은 후에 출력할 필요 없이, 하나 입력받고 하나 출력하는 방식으로 진행해도 된다. (테스트 개수가 주어지지 않을 때 유용)</p>\n<ol>\n<li>\n<p>테스트 케이스의 개수가 주어지는 경우, `while(t--)을 사용할 것</p>\n<pre><code class=\"language-c++\">int t; cin >> t;\nwhile (t--) { ... } // t의 개수가 0 (false)일 때까지 진행\n</code></pre>\n</li>\n<li>\n<p>테스트 케이스의 개수가 주어지지 않는 경우, 입력을 EOF까지 받으면 된다.</p>\n<pre><code class=\"language-c++\">int a, b;\nwhile (scanf(\"%d %d\\n\", &#x26;a, &#x26;b) == 2)  { ... } // 입력 개수가 일치할 경우 동안 진행\n</code></pre>\n<pre><code class=\"language-c++\">while (cin >> a >> b)  { ... } // 입력 개수가 주어질 때까지 진행\n</code></pre>\n<pre><code class=\"language-c++\">string s;\nwhile (getline(cin, s)) { ... } // 마찬가지 with getline\n</code></pre>\n</li>\n</ol>\n</li>\n</ul>\n<h4>Input 형태</h4>\n<ul>\n<li>\n<p>Input이 인접한 형태로 주어졌을 때 (ex. 12345), <code>scanf 길이 제한</code>을 사용하여 입력받기.</p>\n<pre><code class=\"language-c++\">scanf(\"%1d\", &#x26;x); // 12345에서 1자리씩 읽기\nscanf(\"%10s\", s); // 문자열 길이 10씩 읽기\n</code></pre>\n</li>\n</ul>\n<h3>런타임 에러 피하기 프로토콜</h3>\n<ul>\n<li>자료형: 숫자가 너무 커지는 경우, int보다는 long이나 long long이 적절하다 (런타임에러 피하기)</li>\n<li>\n<p>벡터 삭제: <code>erase</code>를 사용할 경우, iterator 값이 그 다음 값으로 자동으로 증가하니 주의!</p>\n<ul>\n<li>만일, 원형으로 이어진다고 가정할 경우, <code>it++; if (it == v.end()) it = v.begin();</code> 와 <code>if (it == v.begin()) it = v.end(); it--</code>를 사용하면 좋다. 백준 문제 중 풍선 터뜨리기(2346번) 문제 참고하기!</li>\n</ul>\n</li>\n</ul>","frontmatter":{"path":"/cheatkeys/cpp","title":"[C++] 치트키 정리","date":"2018-01-14","tags":["C++","치트키"]}}},"pageContext":{}}