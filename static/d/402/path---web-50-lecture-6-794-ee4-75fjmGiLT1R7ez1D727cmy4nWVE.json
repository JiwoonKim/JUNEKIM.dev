{"data":{"markdownRemark":{"html":"<blockquote>\n<p>Harvard's Web Programming with Python and Javascript lecture 6 정리</p>\n</blockquote>\n<ul>\n<li>Single Page Apps</li>\n<li>HTML5 History API</li>\n<li>Window &#x26; Document</li>\n<li>JavaScript Templating</li>\n<li>CSS Animation</li>\n<li>SVG Animation</li>\n</ul>\n<h3>Single Page Apps</h3>\n<p>an application which pulls information from the server whenever needed (via Ajax, etc.) onto a <strong>single page</strong></p>\n<ul>\n<li>instead of rendering multiple pages,</li>\n<li>\n<p>server sends information(data) on a single page</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// if link is clicked, call load_page function</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DOMContentLoaded'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">load_page</span><span class=\"token punctuation\">(</span><span class=\"token string\">'first'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.nav-link'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>link <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        link<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">load_page</span><span class=\"token punctuation\">(</span>link<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">.</span>page<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// define function for sending an Ajax call</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">load_page</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    request<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token string\">`/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    request<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>responseText<span class=\"token punctuation\">;</span>\n        document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#body'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> response<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    request<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># Server</span>\ntexts <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"text 1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"text 2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"text3\"</span><span class=\"token punctuation\">]</span>\n@app<span class=\"token punctuation\">.</span>route<span class=\"token punctuation\">(</span><span class=\"token string\">\"/first\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> texts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n@app<span class=\"token punctuation\">.</span>route<span class=\"token punctuation\">(</span><span class=\"token string\">\"/second\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">second</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> texts<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n@app<span class=\"token punctuation\">.</span>route<span class=\"token punctuation\">(</span><span class=\"token string\">\"/third\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">third</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> texts<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></code></pre></div>\n</li>\n<li><em>장점</em> : <strong>reload 필요 X</strong> (page refresh 필요 X)</li>\n<li>\n<p><em>단점</em> : <strong>url이 바뀌지 X</strong> (eliminates URL's functionality)</p>\n<ul>\n<li>user may <strong>not know which page they are on</strong></li>\n<li>so <strong>use HTML5 History API</strong> to show url &#x26; not need to reload</li>\n</ul>\n</li>\n</ul>\n<h3>HTML5 History API</h3>\n<p>enables manipulation a a <strong>browser's history and URL</strong> even if the page is still being implemented <strong>w/ single-page design</strong></p>\n<ul>\n<li>implemented by the client <strong>pushing</strong> a new URL state whenever a new page is accessed</li>\n<li>implement w/ <strong>Stack behavior</strong> (use history like stack)</li>\n<li>\n<p>use <code class=\"language-text\">pushState</code> and <code class=\"language-text\">onpopstate</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// just an aesthetic property to reflect the current page</span>\ndocument<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// use with stack behavior (data / title of page / url)</span>\nhistory<span class=\"token punctuation\">.</span><span class=\"token function\">pushState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'title'</span><span class=\"token punctuation\">:</span> name<span class=\"token punctuation\">,</span> <span class=\"token string\">'text'</span><span class=\"token punctuation\">:</span> response<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span>\n<span class=\"token comment\">// 뒤로가기했을 때, content과 url 다시 뒤로가기</span>\nwindow<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onpopstate</span> <span class=\"token operator\">=</span> e <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"token comment\">// pushed된 data (popped 된 layer의 data)</span>\n<span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#body'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<h3>Window &#x26; Document</h3>\n<p>JavaScript objects used to <strong>scroll &#x26; dynamically load content</strong></p>\n<ul>\n<li>\n<p>useful properties:</p>\n<ul>\n<li><code class=\"language-text\">window.innerWidth</code></li>\n<li><code class=\"language-text\">window.innerHeight</code></li>\n<li><code class=\"language-text\">window.scrollY</code>: how far down page has been scrolled (px)</li>\n<li><code class=\"language-text\">document.body.offsetHeight</code>: entire height of HTML body's document</li>\n</ul>\n</li>\n<li>\n<p>그림 of 위에 관계</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onscroll</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 전체 페이지의 크기 끝에 다다르면, 화면을 초록색으로 변환</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>innerHeight <span class=\"token operator\">+</span> window<span class=\"token punctuation\">.</span>scrollY <span class=\"token operator\">>=</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>offsetHeight<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'body'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>background <span class=\"token operator\">=</span> <span class=\"token string\">'green'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// 아직 페이지 끝까지 도달하지 않았다면, 화면을 하얀색으로 설정</span>\n    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'body'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>background <span class=\"token operator\">=</span> <span class=\"token string\">'white'</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h4>Dynamic Loading of Content (w/ server)</h4>\n<ul>\n<li>\n<p>load posts according to scroll</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> counter <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> quantity <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// initially load the posts when DOM loads</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DOMContentLoaded'</span><span class=\"token punctuation\">,</span> load<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/* if scrolled to bottom, load the next 20 posts\n(the document's entire height dynamically updates everytime posts are loaded) */</span>\nwindow<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onscroll</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>innerHeight <span class=\"token operator\">+</span> window<span class=\"token punctuation\">.</span>scrollY <span class=\"token operator\">>=</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>offsetHeight<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// add a post to page</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">add_post</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>contents<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> post <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    post<span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> <span class=\"token string\">'post'</span><span class=\"token punctuation\">;</span>\n    post<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> contents<span class=\"token punctuation\">;</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#posts'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>post<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// load 20 posts from server (via ajax)</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">load</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"token comment\">// count posts (20 for each load)</span>\n<span class=\"token keyword\">const</span> start <span class=\"token operator\">=</span> counter<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> end <span class=\"token operator\">=</span> start <span class=\"token operator\">+</span> quantity <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\ncounter <span class=\"token operator\">=</span> end <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// request posts from server (POST request)</span>\n<span class=\"token keyword\">const</span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrequest<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'/posts'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// when response received, add number of posts to page</span>\nrequest<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span>responseText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    data<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>add_post<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// set the form of data to send to server</span>\n<span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Formdata</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndata<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'start'</span><span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndata<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'end'</span><span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// send as POST request to server</span>\nrequest<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> Flask<span class=\"token punctuation\">,</span> jsonify<span class=\"token punctuation\">,</span> render_template<span class=\"token punctuation\">,</span> request</code></pre></div>\n</li>\n</ul>\n<p>app = Flask(<strong>name</strong>)</p>\n<p>@app route(\"/posts\", methods=[\"POST\"])\ndef posts():\nstart = int(request.form.get(\"start\") or 0)\nend = int(request.form.get(\"end\") or (start + 9))\n# simply return string of post numbers as json\ndata = []\nfor i in range(start, end + 1)\ndata.append(f\"post #{i}\")\nreturn jsonify(data)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">- can also add a hide button to hide uninteresting parts\n```js\n// change the add_post function\n... // create post element\nconst hid = document.createElement(&#39;button&#39;);\nhide.className = &#39;hide&#39;;\npost.textContent = &#39;Hide&#39;;\nhide.onclick = () =&gt; {\n    this.parentElement.remove();\n};\n... // append post element to posts section</code></pre></div>\n<h3>JavaScript Templating</h3>\n<p>libraries like template literals (<strong>str_replace</strong>: <code class=\"language-text\">${}</code>)</p>\n<ul>\n<li>\n<p>since code gets messier using JS to build more complicated user interfaces</p>\n<ul>\n<li>adding items to the DOM every time (create element, assign class name, set text content ...)</li>\n</ul>\n</li>\n<li>instead, <strong>use template to create elements</strong> while plugging in custom contents</li>\n</ul>\n<h4>Templates vs. Frameworks</h4>\n<ul>\n<li>\n<p><strong>templates</strong>: more like advanced str_replace (<strong>more of pluggin</strong>)</p>\n<ul>\n<li>mustache, underscore, handlebar, lowdash, etc.</li>\n</ul>\n</li>\n<li>\n<p><strong>frameworks</strong>: does <strong>core functionality</strong></p>\n<ul>\n<li>taking page requests, forwarding responses, etc.</li>\n</ul>\n</li>\n</ul>\n<h4>Example of Handlebars Templates</h4>\n<ul>\n<li>\n<p><em>use</em>: </p>\n<ul>\n<li>add script source to html</li>\n<li>\n<p><strong>create a template</strong>: <code class=\"language-text\">const template = Handlebars.compile(&quot;&lt;tag&gt;{{value}}&lt;/tag&gt;&quot;)</code></p>\n<ul>\n<li><strong>define an HTML element</strong> &#x26; content within argument</li>\n<li>can use <code class=\"language-text\">{{ }}</code> for templating language</li>\n</ul>\n</li>\n<li><strong>use template</strong>: <code class=\"language-text\">template({&#39;value&#39;:  value})</code></li>\n</ul>\n</li>\n<li>\n<p>ex. roll dice simulation</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// define template</span>\n<span class=\"token keyword\">const</span> template <span class=\"token operator\">=</span> Handlebars<span class=\"token punctuation\">.</span><span class=\"token function\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;li>You rolled a {{value}}&lt;/li>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// use template</span>\n<span class=\"token keyword\">const</span> content <span class=\"token operator\">=</span> <span class=\"token function\">template</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'value'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">6</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#content'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">+=</span> content<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>if template becomes <em>complicated</em>, <strong>define template in a separate script</strong> (defined above the script source of where it is used)</p>\n<ul>\n<li>\n<p>after definition, create template based on it in another script</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">...\n// separate script where template is defined\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>result<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>text/x-handlebars-template<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\">\n<span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span> You rolled<span class=\"token punctuation\">:</span>\n<span class=\"token operator\">&lt;</span>img alt<span class=\"token operator\">=</span><span class=\"token string\">\"{{value}}\"</span> title<span class=\"token operator\">=</span><span class=\"token string\">\"{{value}}\"</span> src<span class=\"token operator\">=</span><span class=\"token string\">\"img/{{value}}.png\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>img<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n... // script where template is used </code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// change only this part from previous example</span>\n<span class=\"token comment\">// create template based on additional script's definition</span>\n<span class=\"token keyword\">const</span> template <span class=\"token operator\">=</span> Handlebars<span class=\"token punctuation\">.</span><span class=\"token function\">compile</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#result'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n</li>\n<li>\n<p>can also use loops: <code class=\"language-text\">each</code> and <code class=\"language-text\">this</code> keyword</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>result<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>text/x-handlebars-template<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\">\n<span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span> You rolled<span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>each values<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">&lt;</span>img alt<span class=\"token operator\">=</span><span class=\"token string\">\"{{this}}\"</span> title<span class=\"token operator\">=</span><span class=\"token string\">\"{{this}}\"</span> src<span class=\"token operator\">=</span><span class=\"token string\">\"img/{{this}}.png\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>img<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token operator\">/</span>each <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n...</code></pre></div>\n</li>\n</ul>\n<h3>CSS Animation</h3>\n<ul>\n<li>\n<p>useful for creating <strong>user interfaces</strong></p>\n<ul>\n<li>ex. fade away effect (for posts to hide)</li>\n</ul>\n</li>\n<li>runs <strong>as soon as page is loaded</strong></li>\n<li>\n<p><em>use</em>:</p>\n<ul>\n<li>\n<p>define animation behavior: <code class=\"language-text\">@keyframe</code></p>\n<ul>\n<li>use w/ <code class=\"language-text\">from</code> and <code class=\"language-text\">to</code></li>\n<li>or just define statuses by certain names</li>\n</ul>\n</li>\n<li>apply to certain elements: <code class=\"language-text\">animation-name</code></li>\n<li>\n<p>define the duration: <code class=\"language-text\">animation-duration</code></p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@keyframes</span> grow</span> <span class=\"token punctuation\">{</span>\n<span class=\"token selector\">from</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token selector\">to</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">hi</span> <span class=\"token punctuation\">{</span>\n<span class=\"token property\">animation-name</span><span class=\"token punctuation\">:</span> grow<span class=\"token punctuation\">;</span>\n<span class=\"token property\">animation-duration</span><span class=\"token punctuation\">:</span> 2s<span class=\"token punctuation\">;</span>\n<span class=\"token property\">animation-fill-mode</span><span class=\"token punctuation\">:</span> forwards<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@keyframe</span> move</span> <span class=\"token punctuation\">{</span>\n<span class=\"token selector\">from</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 0%<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token selector\">to</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">hi</span> <span class=\"token punctuation\">{</span>\n<span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n<span class=\"token property\">animation-name</span><span class=\"token punctuation\">:</span> move<span class=\"token punctuation\">;</span>\n<span class=\"token property\">animation-duration</span><span class=\"token punctuation\">:</span> 3s<span class=\"token punctuation\">;</span>\n<span class=\"token property\">animation-fill-mode</span><span class=\"token punctuation\">:</span> forwards\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@keyframes</span> move</span> <span class=\"token punctuation\">{</span>\n<span class=\"token selector\">0%</span> <span class=\"token punctuation\">{</span>\n<span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 0%<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">50%</span> <span class=\"token punctuation\">{</span>\n<span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">100%</span> <span class=\"token punctuation\">{</span>\n<span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 0%<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n</li>\n<li>\n<p>for more control, use JavaScript</p>\n<ul>\n<li>\n<p><code class=\"language-text\">__.style.animationPlayState</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>__<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>animationPlayState <span class=\"token operator\">===</span> <span class=\"token string\">'paused'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n__<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>animationPlayState <span class=\"token operator\">=</span> <span class=\"token string\">'running'</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n<h3>SVG Animation</h3>\n<p>scalable vector graphic</p>\n<ul>\n<li>\n<p><strong>graphical element</strong> determined by lines, angles, and shapes</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>svg</span><span class=\"token style-attr language-css\"><span class=\"token attr-name\"> <span class=\"token attr-name\">style</span></span><span class=\"token punctuation\">=\"</span><span class=\"token attr-value\"><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span> <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 800px<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>circle</span> <span class=\"token attr-name\">cx</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>200<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">cy</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>200<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">r</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>50<span class=\"token punctuation\">\"</span></span><span class=\"token style-attr language-css\"><span class=\"token attr-name\"> <span class=\"token attr-name\">style</span></span><span class=\"token punctuation\">=\"</span><span class=\"token attr-value\"><span class=\"token property\">fill</span><span class=\"token punctuation\">:</span>blue<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>svg</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></code></pre></div>\n</li>\n<li>\n<p>can also <strong>programmatically create</strong> such element by JavaScript by using libraries</p>\n<ul>\n<li><strong>D3</strong></li>\n</ul>\n</li>\n</ul>","frontmatter":{"path":"/web50/lecture_6","title":"Web50 lecture 6 - Front-end Development","date":"2018-09-05","tags":["CS50","Web50","강의노트","웹개발","프론트엔드"]}}},"pageContext":{}}