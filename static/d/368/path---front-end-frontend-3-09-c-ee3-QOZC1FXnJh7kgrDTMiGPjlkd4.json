{"data":{"markdownRemark":{"html":"<blockquote>\n<p>what is a domain name system</p>\n<ul>\n<li><a href=\"https://frontendmasters.com/books/front-end-handbook/2018/learning/dns.html\">references</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Learn/Common_questions/What_is_a_domain_name\">explanation of how dns works</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Learn/Common_questions/What_is_a_URL\">how url works</a></li>\n</ul>\n</blockquote>\n<h3>DNS (Domain Name System)</h3>\n<ul>\n<li><strong>a hierarchical distributed naming system</strong> for computers, services, or any resource connected to the Internet or a private network</li>\n<li>it associates various information with domain names assigned to each of the participating entities.</li>\n</ul>\n<h4>Domain Name</h4>\n<ul>\n<li>structure read <em>from right to left</em> and can be separated by dots</li>\n<li>\n<p>ex. developer.mozilla.org</p>\n<ul>\n<li>\n<p><strong>TLD (Top-level Domain)</strong>: provides the most generic information; tells users the general purpose of the service behind the domain name</p>\n<ul>\n<li>ex. .com, .org, .net, .us, .kr</li>\n</ul>\n</li>\n<li><strong>label</strong>: what follow the TLD (located on the right sides of the TLD). A domain can have many labels</li>\n</ul>\n</li>\n<li>domain name is a part of the url</li>\n</ul>\n<h4>Name Server (DNS server)</h4>\n<ul>\n<li>a computer designated to <strong>translate domain names into IP addresses</strong></li>\n<li>does most of the work in the DNS system</li>\n<li>since the total number of domain translations is too much for any one server, each server may redirect request to other names servers or delegate responsibility for a subset of subdomains they are responsible for</li>\n</ul>\n<h3>how the DNS works</h3>\n<ul>\n<li>\n<p>the url typed into the browser must be translated to an IP address</p>\n<ol>\n<li>the browser checks if it has the IP address for the domain name in its <strong>cache</strong></li>\n<li>if no there, the browser asks the OS to check if it has the IP address in its cache</li>\n<li>if both don't have it, the OS calls the <strong>resolver server</strong> (usually the ISP) if it has the address in its cache</li>\n<li>if the resolver server doesn't have it, it calls the <strong>root server</strong> and <strong>asks for the address of the TLD (Top-level Domain) server</strong> (ex. .COM TLD server) and saves that address</li>\n<li>the TLD server <strong>looks into the TLD registry to find the address for the authoritative name server for the domain name</strong></li>\n<li>finally, <strong>the authoritative name server</strong> provides the IP address and the resolver server saves it</li>\n</ol>\n</li>\n</ul>","frontmatter":{"path":"/frontend/3","title":"Frontend Focus 03 - DNS","date":"2019-02-26","tags":["웹개발","프론트엔드"]}}},"pageContext":{"slug":"/front-end/frontend3/","prev":{"node":{"fields":{"slug":"/front-end/frontend4/"},"frontmatter":{"title":"Frontend Focus 04 - HTTP & Networks","tags":["웹개발","프론트엔드"]}}},"next":{"node":{"fields":{"slug":"/roadmap/"},"frontmatter":{"title":"A Roadmap of my career","tags":["웹개발","로드맵"]}}}}}