{"data":{"markdownRemark":{"html":"<blockquote>\n<p>educative.io의 Data Structures in C++ 정리</p>\n</blockquote>\n<h3>Linked Lists</h3>\n<p>sequence of nodes linked together like a chain</p>\n<h4>Array vs. Linked List</h4>\n<table>\n<thead>\n<tr>\n<th align=\"center\">operation</th>\n<th align=\"center\">Array</th>\n<th align=\"center\">Linked List</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">선언 (메모리 할당)</td>\n<td align=\"center\">fixed size \\n (fixed block of memory based on size declared)</td>\n<td align=\"center\">resizable \\n (can access or release memory based on addition and deletion of elements)</td>\n</tr>\n<tr>\n<td align=\"center\">access</td>\n<td align=\"center\">O(1)</td>\n<td align=\"center\">O(n)</td>\n</tr>\n<tr>\n<td align=\"center\">append / prepend</td>\n<td align=\"center\">O(n)</td>\n<td align=\"center\">O(1)</td>\n</tr>\n<tr>\n<td align=\"center\">delete (front/back)</td>\n<td align=\"center\">O(n)</td>\n<td align=\"center\">O(1)</td>\n</tr>\n</tbody>\n</table>\n<h3>Singly Linked List</h3>\n<p>list points in one direction (cannot point backward)</p>\n<h4>Node Class</h4>\n<ul>\n<li>data: value stored in node</li>\n<li>\n<p>pointer: refers to the next node in the list</p>\n<pre><code class=\"language-cpp\">class Node {\nprivate:\n    int data;\n    Node* next;\npublic: \n    Node(int value) {\n        data = value;\n        next = nullptr;\n    }\n}\n</code></pre>\n</li>\n</ul>\n<h4>LinkedList Class</h4>\n<p>collection of node objects</p>\n<ul>\n<li>\n<p>head pointer: points to beginning of list</p>\n<pre><code class=\"language-cpp\">class LinkedList {\nprivate:\n    Node* head;\npublic:\n    LinkedList() {\n        head = nullptr;\n    }\n}\n</code></pre>\n</li>\n</ul>\n<h3>Doubly Linked List</h3>","frontmatter":{"path":"/cs/datastructure/linkedlists","title":"Data Structures 02 - Linked Lists","date":"2019-06-07","tags":["자료구조","Cpp"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}