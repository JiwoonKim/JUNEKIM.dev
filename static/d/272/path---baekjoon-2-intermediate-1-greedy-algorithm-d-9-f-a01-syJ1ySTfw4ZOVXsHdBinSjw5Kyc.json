{"data":{"markdownRemark":{"html":"<blockquote>\n<p>대회나 시험을 볼 때 그리디 문제가 나왔다면, 제일 마지막에 풀 것!</p>\n</blockquote>\n<h3>그리디 알고리즘 (Greedy Algorithm)</h3>\n<p><strong>각 단계에서 그 순간에 가장 좋다고 생각하는 것을 선택하면서 답을 찾아나가는 알고리즘</strong> 이다. </p>\n<ul>\n<li>\n<p>다만, 그때 그때는 최적일지도 모르지만, 최종적으로는 답이 최적이 아닐 수도 있다. </p>\n</li>\n<li>\n<p>그렇기에, 그리디 알고리즘은 반드시 <strong>지금 이 순간의 가장 좋은 경우</strong> 가 <strong>나중에도 항상 최적인 경우에만 사용해야 한다</strong>.</p>\n</li>\n</ul>\n<h4>그리디 vs. DP</h4>\n<ul>\n<li>DP는 각 단계의 최적의 선택이 다음 단계의 최적의 선택으로 이어진다.</li>\n<li>그리디는 각 단계의 최적의 선택이 <strong>다음 단계의 최적의 선택으로 이어지지 않을 수도 있다</strong>.</li>\n</ul>\n<h3>그리디 문제</h3>\n<h4><a href=\"https://www.acmicpc.net/problem/11047\">거스름돈</a></h4>\n<ul>\n<li>문제: 주어진 동전들로 주어진 금액을 만드는데 필요한 최소 동전의 개수 구하기</li>\n<li>\n<p>풀이: 액면가가 큰 동전부터 차례대로 금액에 맞춰 필요한 개수를 계산하고 총 사용한 동전의 개수를 리턴한다.</p>\n<ul>\n<li>단, 이러한 그리디 알고리즘은 주어진 동전들의 조합이 항상 최적인 경우에만 성립함을 명심! </li>\n<li>만일 1원, 4원, 5원의 동전이 주어져 12원을 만들어야 하는 문제이면, 그리디의 (5+5+1+1)의 경우보다 더 최적인 (4+4+4) 경우가 존재한다. 이러한 경우가 있다면, <strong>그리디 알고리즘보다는 다이나믹 프로그래밍으로 문제를 풀어야만 한다</strong> .</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"[백준] 중급 01. 그리디 알고리즘","date":"2019-09-04","tags":["백준","백준 중급","알고리즘","Cpp","그리디"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/Baekjoon/2_INTERMEDIATE/1_greedy_algorithm/"}}