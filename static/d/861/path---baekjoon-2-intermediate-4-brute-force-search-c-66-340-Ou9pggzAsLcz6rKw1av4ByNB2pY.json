{"data":{"markdownRemark":{"html":"<blockquote>\n</blockquote>\n<h3>완전탐색 0 강의 듣기</h3>\n<h3>완전 탐색 (Brute Force Search)</h3>\n<ul>\n<li>가능한 모든 경우의 수를 만들어보고 탐색하는 방법</li>\n<li><strong>가능한 모든 경우의 수를 알아야 한다</strong>.</li>\n<li>방법: 브루트 포스, BFS, 재귀, 비트마스크, 순열, 백트래킹</li>\n</ul>\n<h3>그냥 다 해보기 (Brute Force method)</h3>\n<ul>\n<li>가능한</li>\n</ul>\n<h3>비트마스크 (Bitmask)</h3>\n<p>비트 연산을 사용해서 부분 집합을 나타내는 방법</p>\n<ul>\n<li>비트 연산(bitwise operation): <code class=\"language-text\">&amp;</code>, <code class=\"language-text\">|</code>, <code class=\"language-text\">~</code>, <code class=\"language-text\">^</code>, <code class=\"language-text\">&lt;&lt;</code>, <code class=\"language-text\">&gt;&gt;</code></li>\n<li>\n<p>곱하기/나누기보다 비트 연산이 빠르기 때문에 활용하기 좋다</p>\n<ul>\n<li>이분 탐색 min 값 구할 때: <code class=\"language-text\">(left + right) &gt;&gt; 1</code> 이 (left + right) / 2 보다 좋다</li>\n<li>짝수 홀수 판단: <code class=\"language-text\">(n &amp; 1)</code>이 </li>\n</ul>\n</li>\n</ul>\n<h3>순열</h3>","frontmatter":{"title":"[백준] 중급 02. 완전 탐색 1","date":"2019-05-20","tags":["백준","알고리즘","Cpp","탐색"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/Baekjoon/2_INTERMEDIATE/4_brute_force_search/"}}