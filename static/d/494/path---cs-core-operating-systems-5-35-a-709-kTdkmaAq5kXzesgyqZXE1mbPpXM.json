{"data":{"markdownRemark":{"html":"<blockquote>\n</blockquote>\n<h3>프로세스 동기화</h3>\n<p>프로세스 동기화 -> 컴퓨터는 동시성을 위해 번갈아가며 스레드를 사용하는데, 프로세스들 간에 임계영역 문제 해결 필요 (동기화 필요); 다른 말로 메인 스레드와 다른 메인 스레드가 공유하는 임계영역을 동시에 접근하여 경쟁 상태가 생기는 문제를 해결하는 방식이다(둘은 각자 다른 주소 공간을 가지므로 공유하는 메모리나 데이터가 있는 경우를 가지고 임계영역을 따지는 것)\n사실 실제로 컴퓨터는 프로세스=메인 스레드가 아니라 다중 스레드로 구성하여 사용하기 때문에, 프로세스들 간 임계 문제와 스레드들 간 임계문제 둘 다 고려해야 함(프로세스 동기화도 해야 하고 스레드 동기화도 해야 함(스레드들 간의 임계영역 문제는 :각 스레드의 스택을 제외한 공유 자원일듯)</p>\n<p>동기화 = 공유 자원 영역 (공간)에 접근하는 객체들의 진입 시간을 제어하여 임계영역 동시 접근 문제로 인한 경쟁 상태 방지</p>\n<p>critical section (임계영역) 동일한 자원을 동시에 접근하는 작업(e.g. 공유하는 변수 사용, 동일 파일을 사용하는 등)을 실행하는 코드 영역을 Critical Section 이라 칭한다.</p>\n<p>임계영역 문제: race condition 경쟁 상태 발생</p>\n<p>해결방법: lock, 세마포어(binary semaphore=mutex, counting semaphore), monitor</p>\n<p>=> 문제: 데드락</p>","frontmatter":{"title":"[OS] 5. 프로세스 동기화","date":"2019-09-27","tags":["운영체제"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/CS_Core/Operating_Systems/5/"}}