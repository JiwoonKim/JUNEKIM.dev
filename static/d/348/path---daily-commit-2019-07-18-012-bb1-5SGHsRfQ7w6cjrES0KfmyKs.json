{"data":{"markdownRemark":{"html":"<h3>오늘의 커밋</h3>\n<h4>freecodecamp 팟캐스트 interview w/ david mallan and colton</h4>\n<h4>프로그래머스 스킬 체크 Level 2 도전</h4>\n<blockquote>\n<p>오랜만에 알고리즘 코딩 문제를 풀어보았다. 요즘 약간 알고리즘 슬럼프인지라 그 동안 문제를 풀지 못했었는데 곧 다가올 하반기 채용 시즌도 준비해야 되니까 오늘 꼭 풀어야겠다고 마음을 먹었다. 사실 좋은 문제 사이트와 자료들을 많지만 그 중에서 시험같은 느낌이 드는 곳은 없어서, 프로그래머스 사이트의 스킬체크를 통해 정해진 시간 내에 문제를 푸는 연습을 하기로 결정했다. 저번에 Level 1을 간단하게 통과해서 이번에는 Level 2를 도전하기로! Level 2 단계는 '문제를 해결하기 위해 조금 더 논리적 사고가 필요한 프로그래밍 기초 단계. 문자열, 구현, 정렬, 그리디, 해시에 대한 이해가 필요하며, 종종 이분탐색, 그래프, 큐 문제도 출제가능' 한 정도라고 설명되어 있다.\n두 문제를 한 시간 내에 풀어 실행까지 완료를 하기는 </p>\n</blockquote>\n<p>두 문제를 한 시간 내에 풀긴 풀었지만 첫번째 문제가 시간 초과...효율성이 떨어짐...(30 + 50 = 총 80점 받음) 그래서 불합격이라는...(첫 문제 30분 안에 풀고 두 번째 문제 20분 안에 풀고, 나머지 10분은 다시 첫 문제 시간 초과 고쳐보려고 했지만 실패...)\n그래도 내가 문제를 풀 수 있는 수준만큼 발전했구나를 꺠달음. 그 전에는 문제 이해조차 못하거 아예 못 풀어서 문제였는데, 아님 시간이 한 시간 넘게 걸린다더가...이제는 문제를 '효율적으로' 푸는 것에 집중할 수 있는 단계까지 왔구나 싶다. 어떻게 하면 'optimize'할 수 있는지에 집중하고 끊임없이 그런 식으로 문제를 풀어보자. 그리고 시간복잡도 분석하는 부분도 공부가 더 필요할 것 같다.\n문제도 요즘 잘 안 풀었는데 더 자주 풀어야겠다.</p>\n<p> 어떻게 알고리즘을 공부하면 더 좋을지가 고민되는 나날들을 보내고 있는 중이다. Interview Cake 문제도 마저 끝내야 하고, Data Structure Cookies 시리즈를 통해 자료구조도 정리하고, Leetcode 문제랑 Cracking the Coding Interview 문제도 풀어야 하고, 인터뷰 말하기 연습도 해야 되고... 해야 할 일을 다 정리해놓았는데 뭔가 의욕이 안 생긴다. </p>\n<h4>시간분배 (time sharing?) 도입하기</h4>\n<p>프포 시리즈도 계속 해도 된다. 단, 딱 할 시간을 정해놓고 그날 다른 것도 할 수 있는 시스템을 도입하자</p>\n<h3>오늘의 풀리퀘스트</h3>","frontmatter":{"title":"[일일커밋] 7만큼 커밋해!","date":"2019-07-18","tags":["일일커밋"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/Daily_Commit/2019_07_18/"}}