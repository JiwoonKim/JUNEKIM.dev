{"data":{"markdownRemark":{"html":"<h3>포켓몬 게임 설계하기</h3>\n<p>어떻게 실제에 근접하고 효율적인 객체들을 모듈화하는지 살펴보기</p>\n<ul>\n<li>\n<p>포켓몬: 151 종류의 포켓몬 정의하기</p>\n<ul>\n<li>후에 포켓몬을 쉽게 추가할 수 있게끔</li>\n<li>정의한 포켓몬 종류 &#x3C; -> 실제 포켓몬 하나하나 (level, 경험치 설정...)</li>\n</ul>\n</li>\n<li>\n<p>사람 캐릭터:</p>\n<ul>\n<li>트레이너, 박사, 악당, 그냥 사람 등...</li>\n</ul>\n</li>\n<li>배틀</li>\n<li>진화시키기</li>\n<li>아이템</li>\n</ul>\n<h4># 클래스 사용하기</h4>\n<img src=\"/8_pokemon_factory_instances-45177a77e2da61560d53adeec223a869.png\" width=\"100%\">\n<ul>\n<li>\n<p>클래스-인스턴스 관계: 같은 구조를 가진 것을 <strong>여러 종류 만들어야 할 때</strong> (같은 틀 사용)</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Pokemon</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> id<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> String name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> hp<span class=\"token punctuation\">,</span> speed<span class=\"token punctuation\">,</span> attack<span class=\"token punctuation\">,</span> defense<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nPokemon pikachu <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Pokemon</span><span class=\"token punctuation\">(</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"pikachu\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nPokemon bulbasaur <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Pokemon</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bulbasaur\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nPokemon charmander <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Pokemon</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"charmander\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nPokemon squirtle <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Pokemon</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"squirtle\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>상속관계: 슈퍼클래스를 <strong>연장</strong> 하는데 의미가 있음: person -> trainer (+ battleOther()), professor (+ )\n같은 틀을 사용하는 것으로 부족할 때\n파생되는 종류들이 서로 너무 다르고, 다른 기능들을 구현해야 할 때</li>\n</ul>","frontmatter":{"title":"[OOP] 08. 게임 설계하기","date":"2019-10-10","tags":["Java","객체지향 프로그래밍"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/CS_Fundamentals/OOP/8/"}}