{"data":{"markdownRemark":{"html":"<blockquote>\n</blockquote>\n<p>한번에 2개 이상의 흐름으로 프로그램을 진행하고 싶을 때 사용하는 것이 \"쓰레드\" 입니다.\n그래서 보통 2개 이상의 쓰레드를 이용한 프로그램을 \"멀티 쓰레드 프로그램\"이라고 합니다.</p>\n<h3>스레드</h3>\n<p>프로세스를 CPU 실행단위로 자른 것 (작업 흐름의 단위로 cpu의 실제 실행단위)</p>\n<ul>\n<li>한 프로세스 내에 적어도 하나 존재한다.</li>\n<li>\n<p>스레드는 프로세스 내에서 스택 영역만 각자 할당받고, 나머지 코드, 데이터, 힙 영역은 공유한다.</p>\n<ul>\n<li>스택은 함수 호출 시 전달되는 인자가 저장되는 공간이다. 각 스레드별로 실행 흐름을 가져가기 위해서는 독립적인 함수 호출이 가능해야 하기 때문에, 스택 영역은 각자 소유해야 한다.</li>\n</ul>\n</li>\n<li>다중 스레드(multi-threaded) 프로세스 사용 시, 병렬성을 높일 수 있어 다른 스레드가 blocked/waiting 상태이어도 동시에 동일한 프로세스의 다른 스레드에서 일을 할 수 있다 (ex. 비동기식 입출력)</li>\n</ul>\n<h4>스레드의 장단점</h4>\n<ul>\n<li>\n<p>장점:</p>\n<ul>\n<li>메모리 공유로 인한 시스템 자원의 소모를 줄일 수 있다.</li>\n<li>문맥 교환 (Context Switching)으로 인한 오버헤드를 줄일 수 있다.</li>\n<li>프로세스 간의 통신보다 스레드 간의 통신이 부담이 적다.</li>\n</ul>\n</li>\n<li>단점:</li>\n<li>메모리를 공유하기 때문에 충돌 현상이 발생할 수 있다. <strong>동기화를 잘 해줘야 한다!</strong></li>\n<li>프로그램을 <strong>디버깅하는 것이 어려워진다</strong></li>\n</ul>\n<p>프로세스는 메인 스레드 하나로만 구성될 수도 있고, 여러 스레드 몇 개로 구성될 수도 있다.</p>","frontmatter":{"title":"[OS] 3. 스레드","date":"2019-09-26","tags":["운영체제"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/CS_Fundamentals/Operating_Systems/3/"}}