{"data":{"markdownRemark":{"html":"<h4>입출력 포맷 문자열</h4>\n<p><code class=\"language-text\">scanf</code>와 <code class=\"language-text\">printf</code>는 <strong>문자열 포맷</strong> 을 통해서 입력과 출력을 받음. </p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">자료형</th>\n<th align=\"center\">문자열 포맷</th>\n<th align=\"center\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">char</td>\n<td align=\"center\"><code class=\"language-text\">%c</code></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">string</td>\n<td align=\"center\"><code class=\"language-text\">%s</code></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">int</td>\n<td align=\"center\"><code class=\"language-text\">%d</code></td>\n<td align=\"center\">16진수는 <code class=\"language-text\">%x</code> , 8진수는 <code class=\"language-text\">%o</code> 사용</td>\n</tr>\n<tr>\n<td align=\"center\">long long</td>\n<td align=\"center\"><code class=\"language-text\">%lld</code></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">float</td>\n<td align=\"center\"><code class=\"language-text\">%f</code></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">double</td>\n<td align=\"center\"><code class=\"language-text\">%lf</code></td>\n<td align=\"center\"></td>\n</tr>\n</tbody>\n</table>\n<p>cf) <code class=\"language-text\">%i</code>는 10진수, 8진수, 16진수 등 int가 표현된 형태를 따름.</p>\n<h4>공백과 줄바꿈 무시</h4>\n<ul>\n<li><code class=\"language-text\">scanf</code> 와 <code class=\"language-text\">printf</code> 에는 <strong>공백이나 줄바꿈을 포함하지 않음</strong></li>\n<li>\n<p>so <strong>직접 명시해야</strong> 포함 및 제외할 수도 있음: <code class=\"language-text\">&quot; &quot;</code>, <code class=\"language-text\">&quot;/n&quot;</code></p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token comment\">// %c의 경우, 공백과 \"\\n\"을 ASCII 코드 값으로 읽을 수 있음</span>\n<span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%c\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// 출력할 경우, 공백이나 \"\\n\"을 직접 포함해야 출력됨</span>\n<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%c\\n\"</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li><code class=\"language-text\">fgets()</code>를 사용하여 <strong>한 줄 전체</strong> 를 읽어드릴 수 있음 (단, <strong>줄바꿈도 같이 읽음</strong>)</li>\n</ul>\n<h4>포함과 불포함 포맷 문자열</h4>\n<ul>\n<li>%[]을 사용할 경우 대괄호에 포함된 문자만 입력받음.</li>\n<li>\n<p>%[^]을 사용할 경우 대괄호에 포함되지 않은 문자 전까지만 입력 받음.</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%[abc]\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// abcdef라는 문자열이 있을 때 x = abc가 됨.</span>\n<span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%[^def]\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// abcdef라는 문자열이 있을 때 x = abc가 됨.</span></code></pre></div>\n</li>\n</ul>\n<h4>길이 제한 포맷 문자열</h4>\n<ul>\n<li>\n<p>%숫자를 사용하여 문자열의 길이를 제한할 수 있음.</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%2d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 길이가 2인 10진수 읽기</span>\n<span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%10s\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 길이가 10인 문자열 읽기</span></code></pre></div>\n</li>\n</ul>\n<h4>무시하고 넘어가기</h4>\n<ul>\n<li>\n<p>%*자료형 사용하면 입력은 받지만 저장하지 않고 넘어가는 경우에 유용.</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d %*d %d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>x<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 중간의 정수는 그냥 넘어가고 앞 뒤만 저장</span></code></pre></div>\n</li>\n</ul>","frontmatter":{"title":"[백준] STL 01. C 언어","date":"2019-01-24","tags":["백준","C"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/Baekjoon/0_STL/1_c_basics/"}}