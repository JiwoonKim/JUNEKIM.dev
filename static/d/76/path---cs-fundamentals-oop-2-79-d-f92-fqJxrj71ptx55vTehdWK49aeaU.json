{"data":{"markdownRemark":{"html":"<h3>클래스 (class)</h3>\n<p><strong>객체를 쉽게 만들기 위해 정의한 템플릿</strong></p>\n<ul>\n<li><strong>자바 프로그램은 클래스 정의로 시작</strong>하며, 클래스 내에서 모든 변수나 메소드를 정의한다</li>\n<li>\n<p>실행은 main() 메소드부터 시작한다</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// 클래스 정의</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyProgram</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 메인 함수로부터 실행이 시작된다</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello, world!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p><strong>클래스로 객체의 상태를 저장하는 변수(field)와 행동을 정의하는 함수(method)를 정의</strong> 하고, 이러한 클래스를 바탕으로 다양한 종류의 <strong>인스턴스(instance)를 만들어 사용</strong> 한다</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// 동그라미 클래스 정의</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Circle</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 접근이 제한된 상수와 변수</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">double</span> PI <span class=\"token operator\">=</span> <span class=\"token number\">3.14</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">double</span> radius<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 접근이 공개된 메소드</span>\n    <span class=\"token keyword\">public</span> <span class=\"token function\">Circle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        radius <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">double</span> <span class=\"token function\">area</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>radius <span class=\"token operator\">*</span> radius <span class=\"token operator\">*</span> PI<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 스케치 클래스 정의</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Sketch</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 메인 함수만 있기에 때문에 스케치 클래스는</span>\n    <span class=\"token comment\">// 동그라미 클래스를 테스트하기 위한 드라이브 코드이다</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 동그라미 클래스를 바탕으로 인스턴스를 생성</span>\n        Circle c1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Circle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 만들어진 인스턴스의 메소드 사용</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"원의 크기는 \"</span> <span class=\"token operator\">+</span> c1<span class=\"token punctuation\">.</span><span class=\"token function\">area</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<h3>자바 기본 문법</h3>\n<h4>1. 기본 데이터 타입</h4>\n<p>데이터는 변수 또는 상수(final)를 통해 선언한다</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">타입</th>\n<th align=\"left\">데이터 종류</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">논리 타입</td>\n<td align=\"left\"><strong>boolean</strong> (1 byte)</td>\n</tr>\n<tr>\n<td align=\"left\">문자 타입</td>\n<td align=\"left\"><strong>char</strong> (2 byte, unicode)</td>\n</tr>\n<tr>\n<td align=\"left\">정수 타입</td>\n<td align=\"left\"><strong>byte</strong> (1 byte), <strong>short</strong> (2 byte), <strong>int</strong> (4 byte), <strong>long</strong> (8 byte)</td>\n</tr>\n<tr>\n<td align=\"left\">실수 타입</td>\n<td align=\"left\"><strong>float</strong> (4 byte), <strong>double</strong> (8 byte)</td>\n</tr>\n</tbody>\n</table>\n<h4>2. 레퍼런스 타입</h4>\n<p>자바에서는 포인터를 사용하지 않고 대신 레퍼런스를 사용한다</p>\n<ul>\n<li>\n<p>클래스에 대한 레퍼런스</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">Circle c1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Circle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>배열에 대한 레퍼런스</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// 배열 레퍼런스 선언 및 생성</span>\n<span class=\"token keyword\">int</span> arr<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 동일한 배열 참조 (하나의 배열을 두 레퍼런스가 참조)</span>\n<span class=\"token keyword\">int</span> otherArr<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>배열도 객체로 관리되기 때문에, 이를 레퍼런스로 참조하는 형태이다</li>\n</ul>\n</li>\n<li>\n<p>인터페이스에 대한 레퍼런스</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"></code></pre></div>\n</li>\n</ul>\n<h4>입출력</h4>","frontmatter":{"title":"[OOP] 02. 클래스와 자바 기본 문법","date":"2019-09-24","tags":["Java","객체지향프로그래밍"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/CS_Fundamentals/OOP/2/"}}