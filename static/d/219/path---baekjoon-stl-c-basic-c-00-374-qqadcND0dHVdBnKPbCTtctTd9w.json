{"data":{"markdownRemark":{"html":"<h4>입출력 포맷 문자열</h4>\n<ul>\n<li>scanf와 printf는 <code class=\"language-text\">문자열 포맷</code>을 통해서 입력과 출력을 받음. </li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\">자료형</th>\n<th align=\"center\">문자열 포맷</th>\n<th align=\"left\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">char</td>\n<td align=\"center\">%c</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"center\">string</td>\n<td align=\"center\">%s</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"center\">int</td>\n<td align=\"center\">%d</td>\n<td align=\"left\">16진수는 %x , 8진수는 %o 사용</td>\n</tr>\n<tr>\n<td align=\"center\">long long</td>\n<td align=\"center\">%lld</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"center\">float</td>\n<td align=\"center\">%f</td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"center\">double</td>\n<td align=\"center\">%lf</td>\n<td align=\"left\"></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>cf) %i는 10진수, 8진수, 16진수 등 int가 표현된 형태를 따름.</li>\n</ul>\n<h4>공백과 줄바꿈 무시</h4>\n<ul>\n<li>scanf와 printf에는 공백이나 줄바꿈을 포함하지 않기에 manually 포함시켜야 할 수도 있음.</li>\n<li>\n<p>fgets()를 사용하여 한 줄 전체를 읽어드릴 수 있음 (단, 줄바꿈도 같이 읽음).</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%c\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// %c의 경우 공백과 줄바꿈(\\n)을 ASCII 코드 값으로 읽을 수도 있기에 주의!</span></code></pre></div>\n</li>\n</ul>\n<h4>포함과 불포함 포맷 문자열</h4>\n<ul>\n<li>%[]을 사용할 경우 대괄호에 포함된 문자만 입력받음.</li>\n<li>\n<p>%[^]을 사용할 경우 대괄호에 포함되지 않은 문자 전까지만 입력 받음.</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%[abc]\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// abcdef라는 문자열이 있을 때 x = abc가 됨.</span>\n<span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%[^def]\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// abcdef라는 문자열이 있을 때 x = abc가 됨.</span></code></pre></div>\n</li>\n</ul>\n<h4>길이 제한 포맷 문자열</h4>\n<ul>\n<li>\n<p>%숫자를 사용하여 문자열의 길이를 제한할 수 있음.</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%2d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 길이가 2인 10진수 읽기</span>\n<span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%10s\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 길이가 10인 문자열 읽기</span></code></pre></div>\n</li>\n</ul>\n<h4>무시하고 넘어가기</h4>\n<ul>\n<li>\n<p>%*자료형 사용하면 입력은 받지만 저장하지 않고 넘어가는 경우에 유용.</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d %*d %d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>x<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 중간의 정수는 그냥 넘어가고 앞 뒤만 저장</span></code></pre></div>\n</li>\n</ul>","frontmatter":{"path":"/baekjoon/STL/c_basic","title":"[백준] STL 01. C 언어","date":"2019-01-24","tags":["백준","C"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}