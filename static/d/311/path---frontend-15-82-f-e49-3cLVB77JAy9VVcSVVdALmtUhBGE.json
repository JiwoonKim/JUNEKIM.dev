{"data":{"markdownRemark":{"html":"<blockquote>\n<p>Understanding JavaScript</p>\n<ul>\n<li>objects, primitive data types</li>\n<li>based on <a href=\"http://javascript.info/\">tutorial</a></li>\n</ul>\n</blockquote>\n<h3>Objects</h3>\n<p>store <strong>keyed collections</strong> of <strong>various data</strong> and more complex entities</p>\n<ul>\n<li>\n<p><strong>create empty objects</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// object constructor</span>\n<span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// object literal syntax</span></code></pre></div>\n</li>\n<li>\n<p><strong>define properties</strong>: <code class=\"language-text\">key: value</code> pairs</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Oh\"</span><span class=\"token punctuation\">,</span>\n    age<span class=\"token punctuation\">:</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>\n<p>if property key same w/ value, can use shorthand</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">// name: name, age: age,</span></code></pre></div>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>access properties</strong>: use <code class=\"language-text\">.</code> or <code class=\"language-text\">[]</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">obj<span class=\"token punctuation\">.</span>isAlphabet <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// dot notation</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span> o<span class=\"token punctuation\">[</span>isAlphabet<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// bracket notation</span></code></pre></div>\n<ul>\n<li><strong>if property name is simple, use dot</strong></li>\n<li>\n<p><strong>for more complex, use brackets</strong></p>\n<ul>\n<li>\n<p>bracket notation is more powerful: can use variables as properties and can create <strong>computed properties</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> input <span class=\"token operator\">=</span> <span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Insert an input\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"default\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> o <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">[</span>input<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// property name should be given by variable input</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span> o<span class=\"token punctuation\">.</span><span class=\"token keyword\">default</span> <span class=\"token punctuation\">)</span> </code></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>check property exists</strong>: use <code class=\"language-text\">!== undefined</code> or <code class=\"language-text\">in</code> operator</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// true means that property does not exist</span>\n<span class=\"token function\">alert</span> <span class=\"token punctuation\">(</span> o<span class=\"token punctuation\">.</span>noProperty <span class=\"token operator\">===</span> undefined <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// true means property exists</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"noProperty\"</span> <span class=\"token keyword\">in</span> o <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">in</code> <strong>works better</strong> since a property's value could be set to undefined</li>\n</ul>\n</li>\n<li>\n<p><strong>delete properties</strong>: use <code class=\"language-text\">delete</code> operator</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">delete</span> o<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>","frontmatter":{"path":"/frontend/15","title":"Frontend Focus 15 - JavaScript Data Types","date":"2019-03-20","tags":["웹개발","프론트엔드","JavaScript","자바스크립트"]}}},"pageContext":{}}