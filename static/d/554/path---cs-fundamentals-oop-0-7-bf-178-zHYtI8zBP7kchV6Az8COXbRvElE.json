{"data":{"markdownRemark":{"html":"<p>자바 특징</p>\n<ul>\n<li>대다수 메모리 처리 작업이 자동으로 이루어짐\n-> garbage collector가 알아서 함</li>\n<li>메모리 포인터를 사용하지 않기에 위험성 제거</li>\n<li>객체지향 언어:</li>\n<li>\n<p>분산시스템(distributed system) 지원</p>\n<ul>\n<li>다른 컴퓨터와의 네트워크 연결이 중요해짐</li>\n<li>주요한 프로토콜(http, ftp) 지원</li>\n<li>socket 통신 (tcp/ip)</li>\n<li>multi-threaded 지원 (다중 쓰레드 프로그램을 쉽게 만들 수 있다)</li>\n<li>dynamic: 동적으로 사용하는 지원들을 변화시켜서 작동할 수 있다</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>architecture neutral</li>\n<li>write once, run anywhere</li>\n<li>자바 프로그램-> 컴파일 (javac) -> 바이트 코드</li>\n<li>java virtual macine (jvm)이 바이트코드를 해석&#x26;실행</li>\n<li>\n<p>같은 바이트 코드가 여러 플랫폼에서 실행가능</p>\n<ul>\n<li>bcuz 각 플랫폼에서 맞는 virtual machine을 가지고 있음</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>자바 프로그램 구성</p>\n<ul>\n<li>여러 class로 구성</li>\n<li>하나의 class에는 여러 methods를 가짐</li>\n<li>여러 method는 여러 program 선언(statements)로 이루어짐</li>\n<li>main함수로부터 시작함</li>\n</ul>","frontmatter":{"title":"OOP 01. 자바","date":"2019-09-23","tags":["데이터베이스"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/CS_Fundamentals/OOP/0/"}}