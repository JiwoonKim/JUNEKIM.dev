{"data":{"markdownRemark":{"html":"<blockquote>\n<p>Harvard's Web Programming with Python and Javascript lecture 7 정리</p>\n</blockquote>\n<h3>Django</h3>\n<p>a heavier web framework w/ more built-in features to develop more sophisticated and complicated web applications easily</p>\n<h3>Using Django</h3>\n<ul>\n<li>\n<p><strong>projects</strong>: Django divides all of its web application into multiple projects, composed of different parts</p>\n<ul>\n<li><strong>create new project</strong>: <code class=\"language-text\">django-admin startproject {project_name}</code></li>\n</ul>\n</li>\n<li>\n<p><strong>appications</strong>: project consists of one or more Django applications, which serves a particular purpose</p>\n<ul>\n<li><strong>create new app</strong>: <code class=\"language-text\">python manage.py startapp {app_name}</code> <strong>inside the project directory</strong></li>\n</ul>\n</li>\n<li><strong>run server</strong>: <code class=\"language-text\">python manage.py runserver</code> inside project directory</li>\n</ul>\n<h4>Project</h4>\n<p>creates a directory {project_name} w/ one python file and one directory</p>\n<ul>\n<li><code class=\"language-text\">manage.py</code>: python script to use to perform useful operations on the app</li>\n<li>\n<p><code class=\"language-text\">{project_name}/</code> <strong>directory</strong></p>\n<ul>\n<li><code class=\"language-text\">__init__.py</code>: defines {project_name/} directory as a package (= collection of python files)</li>\n<li><code class=\"language-text\">settings.py</code>: defines settings for the app</li>\n<li><code class=\"language-text\">urls.py</code>: associates urls to functions (for the entire project)</li>\n<li><code class=\"language-text\">wsgi.py</code>: file that helps to deploy an app to a web server</li>\n</ul>\n</li>\n</ul>\n<h4>App (inside project)</h4>\n<p>creates a {app_name} directory (w/ multiple python files and one migrations folder) inside the project directory</p>\n<ul>\n<li><code class=\"language-text\">__init__.py</code>: defines {app_name/} directory as a package (= collection of multiple python files)</li>\n<li><code class=\"language-text\">admin.py</code>: add models in app to be accessed/manipulated from admin app</li>\n<li><code class=\"language-text\">apps.py</code>: defines configuration of app</li>\n<li><code class=\"language-text\">models.py</code>: where classes for specific data types are defined in order to be stored in database</li>\n<li><code class=\"language-text\">tests.py</code>: defines tests for app (check lecture 8)</li>\n<li><code class=\"language-text\">urls.py</code>: associates urls to functions (for this specific app) -> need to manually create file</li>\n<li><code class=\"language-text\">views.py</code>: where functions are defined for each routes</li>\n<li><code class=\"language-text\">migrations/</code> folder: automatically detect changes in models and generate sql codes to make changes to the database (instead of manually coding sql commands)</li>\n</ul>\n<h3>Configure Views</h3>\n<p>airlines application example (airline project - flights app)</p>\n<ul>\n<li>\n<p><code class=\"language-text\">views.py</code>: where functions are defined for each routes</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>http <span class=\"token keyword\">import</span> HttpResponse\n<span class=\"token comment\"># create views: always include request as parameter</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">index</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> HttpResponse<span class=\"token punctuation\">(</span><span class=\"token string\">\"flights!\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">flights/urls.py</code>: associates urls to functions (for this specific app) -> need to manually create file</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># import path variable</span>\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>urls <span class=\"token keyword\">import</span> path\n<span class=\"token comment\"># import views function from current directory</span>\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span> <span class=\"token keyword\">import</span> views\n<span class=\"token comment\"># associate urls to certain functions for this particular app</span>\nurlpattern <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\"># / -> views.index()</span>\n    path<span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> view<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">urls.py</code>: associates urls to functions (<strong>for the entire app</strong>; project app only looks into the project's urls.py not into the app's urls.py -> need to link to app's urls.py)</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>contrib <span class=\"token keyword\">import</span> admin\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>urls <span class=\"token keyword\">import</span> include<span class=\"token punctuation\">,</span> path\n<span class=\"token comment\"># associate urls to certain apps' urls for the entire project</span>\nurlpatterns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    path<span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span> include<span class=\"token punctuation\">(</span><span class=\"token string\">'flights.urls'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    path<span class=\"token punctuation\">(</span><span class=\"token string\">'admin/'</span><span class=\"token punctuation\">,</span> admin<span class=\"token punctuation\">.</span>site<span class=\"token punctuation\">.</span>urls<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n</li>\n</ul>\n<h4>Routes w/ Parameters</h4>\n<p>add flight view page </p>\n<ul>\n<li>\n<p><code class=\"language-text\">views.py</code>: add function to use data in parameter</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\"># define function w/ parameter as argument</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">flight</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> flight_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># retrieve data from database using parameter</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        flight <span class=\"token operator\">=</span> Flight<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>pk<span class=\"token operator\">=</span>flight_id<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> Flight<span class=\"token punctuation\">.</span>DoesNotExist<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">raise</span> Http404<span class=\"token punctuation\">(</span><span class=\"token string\">\"Flight does not exist\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># return template w/ data</span>\n    context <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"flight\"</span><span class=\"token punctuation\">:</span> flight<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> render<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token string\">\"flights/flight.html\"</span><span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">flights/urls.py</code>: add view function to app's url</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">urlpatterns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    path<span class=\"token punctuation\">(</span>\"<span class=\"token operator\">&lt;</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span>flight_id<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>flight<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n</li>\n</ul>\n<h4>Form</h4>\n<p>add registration page for flights</p>\n<ul>\n<li>\n<p>create form to flight page (w/ dropdown of passengers)</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- add form inside flight.html --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>Add a passenger<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>{% url <span class=\"token punctuation\">'</span>book<span class=\"token punctuation\">'</span> flight.id %}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>post<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    {% csrf_token %}\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>passenger<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        {% for passenger in non_passengers %}\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>{{ passenger.id }}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{ passenger }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span>\n        {% endfor %}\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>Book Flight<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">views.py</code>: add function for users to register to flights</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># add fields to context in flight function</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    context <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n        <span class=\"token string\">\"passengers\"</span><span class=\"token punctuation\">:</span> flight<span class=\"token punctuation\">.</span>passengers<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"non-passengers\"</span><span class=\"token punctuation\">:</span> Passenger<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>exclude<span class=\"token punctuation\">(</span>flights<span class=\"token operator\">=</span>flight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\"># define function to book flight</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">book</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> flight_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># retrieve passenger and flights</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        passenger_id <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span>POST<span class=\"token punctuation\">[</span><span class=\"token string\">\"passenger\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        passenger <span class=\"token operator\">=</span> Passenger<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>pk<span class=\"token operator\">=</span>passenger_id<span class=\"token punctuation\">)</span>\n        flight <span class=\"token operator\">=</span> Flight<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>pk<span class=\"token operator\">=</span>flight_id<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># render error cases</span>\n    <span class=\"token keyword\">except</span> KeyError<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> render<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token string\">\"flights/error.html\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"message\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"No selection made\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> Passenger<span class=\"token punctuation\">.</span>DoesNotExist<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> render<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token string\">\"flights/error.html\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"message\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"No passenger\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> Flight<span class=\"token punctuation\">.</span>DoesNotExist<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> render<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token string\">\"flights/error.html\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"message\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"No flight\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># add flight to passenger's flights information</span>\n    passenger<span class=\"token punctuation\">.</span>flights<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>flight<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># redirect to flight page</span>\n    <span class=\"token keyword\">return</span> HttpResponseRedirect<span class=\"token punctuation\">(</span>reverse<span class=\"token punctuation\">(</span><span class=\"token string\">\"flight\"</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">(</span>flight_id<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">flights/urls.py</code>: add book function to app's url</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">urlpatterns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    path<span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;int:flight_id>/book, views.book, name=\"</span>book\"<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n</li>\n<li>\n<p><strong>CSRF (Cross-site Request Forgery)</strong>: potential security vulnerability in forms whereby someone could forge where the form is coming from -> Django built-in to protect from these attacks</p>\n<ul>\n<li>add <code class=\"language-text\">{% csrf-token %}</code> within form tag</li>\n</ul>\n</li>\n</ul>\n<h4>Link between URLS</h4>\n<ul>\n<li>\n<p><strong>name urls</strong> in <code class=\"language-text\">flights/urls.py</code> so that can refer to route using name</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">urlpatterns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    path<span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"index\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> \n    path<span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;int:flight_id>\"</span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>flight<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"flight\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n</li>\n<li>\n<p>use urls in html: <code class=\"language-text\">{% url &#39;route_name&#39; %}</code> in href</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- flight.html: add link to route to index --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>{% url <span class=\"token punctuation\">'</span>index<span class=\"token punctuation\">'</span> %}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Back to index page<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- index.html: add link to route to flight/{flight_id} --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>{% url <span class=\"token punctuation\">'</span>flight<span class=\"token punctuation\">'</span> flight.id %}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{ flight}} <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></code></pre></div>\n</li>\n</ul>\n<h3>Templates</h3>\n<h4>Rendering Templates</h4>\n<ul>\n<li>\n<p><code class=\"language-text\">views.py</code>: define function to return template</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>http <span class=\"token keyword\">import</span> HttpResponse\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>shortcuts <span class=\"token keyword\">import</span> render\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Flight\n<span class=\"token comment\"># define function for view</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">index</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># define context to include data from database</span>\n    context <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"flights\"</span><span class=\"token punctuation\">:</span> Flight<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\"># return template and pass context</span>\n    <span class=\"token keyword\">return</span> render<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token string\">\"flights/index.html\"</span><span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>\n<p><strong>create <code class=\"language-text\">templates</code> folder</strong>:</p>\n<ul>\n<li>create <code class=\"language-text\">flights</code> <strong>folder where template file will be stored</strong> (define as <strong>namespace templates</strong>)</li>\n</ul>\n</li>\n<li>\n<p><strong>create template</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- airline/flights/templates/flights/index.html --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span> Flights <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span>\n    {% for flight in flights %}\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span> {{ flight }} <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n    {% endfor %}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></code></pre></div>\n</li>\n</ul>\n<h4>Template Inheritance</h4>\n<ul>\n<li>\n<p>create generic template</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- base.html --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span> {% block title %}{% endblock %} <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    {% block body %}\n    {% endblock %}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></code></pre></div>\n</li>\n<li>\n<p>extend generic template </p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- index.html --></span>\n{% extends \"flights/base.html\" %}\n{% block title %} Flights {% endblock %}\n{% body block %}\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>Flights<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n{% endblock %}</code></pre></div>\n</li>\n</ul>\n<h3>Configure Models (databases)</h3>\n<p>airlines application example (airline project - flights app)</p>\n<ol>\n<li>define models</li>\n<li>include models in project's config</li>\n<li>make migrations to database</li>\n</ol>\n<h4>1. Define models</h4>\n<ul>\n<li><code class=\"language-text\">models.py</code>: where classes for specific data types are defined in order to be stored in database</li>\n<li>\n<p><strong>create a separate Airport model and reference it in Flights model via ID</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>db <span class=\"token keyword\">import</span> models\n<span class=\"token comment\"># define airport model</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Airport</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    code <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n    city <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># define print function of class</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> f<span class=\"token string\">\"{self.city} ({self.code})\"</span>\n<span class=\"token comment\"># define flight model (using references from airport model)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Flight</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    origin <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>ForeignKey<span class=\"token punctuation\">(</span>Airport<span class=\"token punctuation\">,</span> on_delete<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>CASCADE<span class=\"token punctuation\">,</span> related_name<span class=\"token operator\">=</span><span class=\"token string\">\"departures\"</span><span class=\"token punctuation\">)</span>\n    destination <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>ForeignKey<span class=\"token punctuation\">(</span>Airport<span class=\"token punctuation\">,</span> on_delete<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span>CASCADE<span class=\"token punctuation\">,</span> related_name<span class=\"token operator\">=</span><span class=\"token string\">\"arrivals\"</span><span class=\"token punctuation\">)</span>\n    duration <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># define print function of class</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> f<span class=\"token string\">\"{self.id} - {self.origin} to {self.destination}\"</span></code></pre></div>\n</li>\n<li>reference to another class using <code class=\"language-text\">ForeignKey()</code></li>\n<li>specify <code class=\"language-text\">on_delete=models.CASCADE</code> to delete all flights w/ that airport when that airport instance is deleted from database</li>\n<li>specify <code class=\"language-text\">related_name=&quot;key&quot;</code> to use key to access only those specific cases (flights w/ key)</li>\n</ul>\n<h4>2. Include Model in Project's Config</h4>\n<ul>\n<li>\n<p><code class=\"language-text\">{airline_project}/settings.py</code>: let the app know the models (-> include app's class in INSTALLED_APPS)</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\nINSTALLED_APPS <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\"># include model (flights/apps.py 내의 FlightsConfig class)</span>\n    <span class=\"token string\">'flights.apps.flightsConfig'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n</li>\n</ul>\n<h4>3. Make Migrations</h4>\n<ul>\n<li>\n<p><code class=\"language-text\">migrations/</code> folder: automatically detect changes in models and generate sql codes to make changes to the database (instead of manually coding sql commands)</p>\n<ul>\n<li><strong>create migrations</strong>: <code class=\"language-text\">python manage.py makemigrations</code></li>\n<li>\n<p><strong>apply migrations</strong>: <code class=\"language-text\">python manage.py migrate</code></p>\n<ul>\n<li>cf) view the actual sql command: <code class=\"language-text\">python manage.py sqlmigrate {app} {migration #}</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>cf) database defined in <code class=\"language-text\">{project}/settings.py</code> 내의 DATABASES 부분</li>\n</ul>\n<h4>cf) Django shell</h4>\n<ul>\n<li>\n<p>use: <code class=\"language-text\">python manage.py shell</code></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">## implement code line-by-line in shell terminal</span>\n<span class=\"token comment\"># import airport and flight class</span>\n<span class=\"token keyword\">from</span> flights<span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Airport<span class=\"token punctuation\">,</span> Flight\n<span class=\"token comment\"># create instance for airports (insert data)</span>\njfk <span class=\"token operator\">=</span> Airport<span class=\"token punctuation\">(</span>code<span class=\"token operator\">=</span><span class=\"token string\">\"JFK\"</span><span class=\"token punctuation\">,</span> city<span class=\"token operator\">=</span><span class=\"token string\">\"New York City\"</span><span class=\"token punctuation\">)</span>\nlhr <span class=\"token operator\">=</span> Airport<span class=\"token punctuation\">(</span>code<span class=\"token operator\">=</span><span class=\"token string\">\"LHR\"</span><span class=\"token punctuation\">,</span> city<span class=\"token operator\">=</span><span class=\"token string\">\"London\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># save the change to database</span>\njfk<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nlhr<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># create instance for flight (insert data)</span>\nf <span class=\"token operator\">=</span> Flight<span class=\"token punctuation\">(</span>origin<span class=\"token operator\">=</span>jfk<span class=\"token punctuation\">,</span> destination<span class=\"token operator\">=</span>lhr<span class=\"token punctuation\">,</span> duration<span class=\"token operator\">=</span><span class=\"token number\">415</span><span class=\"token punctuation\">)</span>\nf<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># query for data</span>\nFlight<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\njfk<span class=\"token punctuation\">.</span>departures<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># returns flights which origin=jfk</span>\n<span class=\"token comment\"># access instance</span>\nf<span class=\"token punctuation\">.</span>origin<span class=\"token punctuation\">.</span>code\n<span class=\"token comment\"># delete instance from database</span>\nf<span class=\"token punctuation\">.</span>delete<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n<h4>Model Relationships</h4>\n<p><strong>many-to-many relationships</strong></p>\n<ul>\n<li>create an in-between table (to map between two relationships to allow many-to-many relationships)</li>\n<li>\n<p><code class=\"language-text\">models.py</code>: define class using <code class=\"language-text\">ManyToManyField</code></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Passenger</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    first <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span>\n    second <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span>\n    flights <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>ManyToManyField<span class=\"token punctuation\">(</span>Flight<span class=\"token punctuation\">,</span> blank<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> related_name<span class=\"token operator\">=</span><span class=\"token string\">\"passengers\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> f<span class=\"token string\">\"{self.first} {self.last}\"</span></code></pre></div>\n<ul>\n<li>Django automatically creates in-between table when <code class=\"language-text\">ManyToManyField</code> is used</li>\n</ul>\n</li>\n<li>\n<p>shell to interact w/ that model</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">## implement code line-by-line in shell terminal</span>\n<span class=\"token keyword\">from</span> flights<span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Flight<span class=\"token punctuation\">,</span> Passenger\n<span class=\"token comment\"># create passenger instance and save</span>\np <span class=\"token operator\">=</span> Passenger<span class=\"token punctuation\">(</span>first<span class=\"token operator\">=</span><span class=\"token string\">\"Alice\"</span><span class=\"token punctuation\">,</span> last<span class=\"token operator\">=</span><span class=\"token string\">\"Adams\"</span><span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># add flight to passenger's field</span>\nf <span class=\"token operator\">=</span> Flight<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>pk<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>flights<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># query for passenger's flights</span>\np<span class=\"token punctuation\">.</span>flights<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># query for flight's passengers</span>\nf<span class=\"token punctuation\">.</span>passengers<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n<h3>Admin</h3>\n<p><strong>built-in app that makes it easy to manipulate data</strong> for the web page</p>\n<ul>\n<li>\n<p><code class=\"language-text\">admin.py</code>: add models in app to be accessed/manipulated from admin app</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>contrib <span class=\"token keyword\">import</span> admin\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Airport<span class=\"token punctuation\">,</span> Flight\n<span class=\"token comment\"># register models to use in admin app</span>\nadmin<span class=\"token punctuation\">.</span>site<span class=\"token punctuation\">.</span>register<span class=\"token punctuation\">(</span>Airport<span class=\"token punctuation\">)</span>\nadmin<span class=\"token punctuation\">.</span>site<span class=\"token punctuation\">.</span>register<span class=\"token punctuation\">(</span>Flight<span class=\"token punctuation\">)</span>\nadmin<span class=\"token punctuation\">.</span>site<span class=\"token punctuation\">.</span>register<span class=\"token punctuation\">(</span>Passenger<span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>\n<p><strong>register and login to admin</strong>:</p>\n<ul>\n<li>register: <code class=\"language-text\">python manage.py createsuperuser</code></li>\n<li>login: via admin site</li>\n</ul>\n</li>\n<li>runserver and go to <code class=\"language-text\">/admin</code> route to access user interface</li>\n</ul>\n<h4>Extend Admin Interface</h4>\n<p>extend admin interface to allow for custom behavior</p>\n<ul>\n<li>\n<p><code class=\"language-text\">flights/admin.py</code>: add defining custom models</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>contrib <span class=\"token keyword\">import</span> admin\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Airport<span class=\"token punctuation\">,</span> Flight<span class=\"token punctuation\">,</span> Passenger\n<span class=\"token comment\"># customize admin interface</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PassengerInline</span><span class=\"token punctuation\">(</span>admin<span class=\"token punctuation\">.</span>StackedInline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># allow flight -> passenger modification at admin</span>\n    model <span class=\"token operator\">=</span> Passenger<span class=\"token punctuation\">.</span>flights<span class=\"token punctuation\">.</span>through\n    extra <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token comment\">## extend admin models</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">FlightAdmin</span><span class=\"token punctuation\">(</span>admin<span class=\"token punctuation\">.</span>ModelAdmin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># add that inline function for admin</span>\n    inlines <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>PassengerInline<span class=\"token punctuation\">]</span>\n<span class=\"token comment\"># use special admin class</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PassengerAdmin</span><span class=\"token punctuation\">(</span>admin<span class=\"token punctuation\">.</span>ModelAdmin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># add easy way to move flights back and forth for a passenger</span>\n    fliter_horizontal <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"flights\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># register models</span>\nadmin<span class=\"token punctuation\">.</span>site<span class=\"token punctuation\">.</span>register<span class=\"token punctuation\">(</span>Airport<span class=\"token punctuation\">)</span>\nadmin<span class=\"token punctuation\">.</span>site<span class=\"token punctuation\">.</span>register<span class=\"token punctuation\">(</span>Flight<span class=\"token punctuation\">,</span> FlightAdmin<span class=\"token punctuation\">)</span>\nadmin<span class=\"token punctuation\">.</span>site<span class=\"token punctuation\">.</span>register<span class=\"token punctuation\">(</span>Passenger<span class=\"token punctuation\">,</span> PassengerAdmin<span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n<h3>Login and Authentication</h3>\n<p>built-in app for authentication for users</p>\n<ul>\n<li>create users app</li>\n<li>\n<p><code class=\"language-text\">users/urls.py</code>: </p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">urlpatterns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    path<span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"index\"</span><span class=\"token punctuation\">)</span>\n    path<span class=\"token punctuation\">(</span><span class=\"token string\">\"login\"</span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>login_view<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"login\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    path<span class=\"token punctuation\">(</span><span class=\"token string\">\"logout\"</span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>logout_view<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"logout\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">users/views.py</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># Django's built-in authentication library </span>\n<span class=\"token keyword\">from</span> django contrib<span class=\"token punctuation\">.</span>auth <span class=\"token keyword\">import</span> authenticate<span class=\"token punctuation\">,</span> login<span class=\"token punctuation\">,</span> logou\n<span class=\"token comment\"># other Django libraries</span>\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>http <span class=\"token keyword\">import</span> HttpResponse<span class=\"token punctuation\">,</span> HttpResponseRedirect\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>shortcuts <span class=\"token keyword\">import</span> render\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>urls <span class=\"token keyword\">import</span> reverse\n<span class=\"token comment\"># create index view function</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">index</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># if request is not authenticated, return login page</span>\n    <span class=\"token keyword\">if</span> <span class=\"token operator\">not</span> request<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>is_authenticated<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> render<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token string\">\"users/login.html\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"message\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># if authenticated, return user page</span>\n    context <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"user\"</span><span class=\"token punctuation\">:</span> request<span class=\"token punctuation\">.</span>user\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> render<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token string\">\"users/user.html\"</span><span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># create login view function</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">login_view</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    username <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>POST<span class=\"token punctuation\">[</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">]</span>\n    password <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>POST<span class=\"token punctuation\">[</span><span class=\"token string\">\"password\"</span><span class=\"token punctuation\">]</span>\n    user <span class=\"token operator\">=</span> authenticate<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> username<span class=\"token operator\">=</span>username<span class=\"token punctuation\">,</span> password<span class=\"token operator\">=</span>password<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># if user exists, redirect back to index</span>\n    <span class=\"token keyword\">if</span> user <span class=\"token keyword\">is</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        login<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> HttpResponseRedirect<span class=\"token punctuation\">(</span>reverse<span class=\"token punctuation\">(</span><span class=\"token string\">\"index\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># if user does not exist, return login page again</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> render<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token string\">\"users/login.html\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"message\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Invalid credentials\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># create logout view function</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">logout_view</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    logout<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> render<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token string\">\"users/login.html\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"message\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Logged out\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>\n<p>create users (using admin interface or shell)</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">## implement code line-by-line in shell terminal</span>\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>contrib<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> User\n<span class=\"token comment\"># create new user (firstname, email, password)</span>\nuser <span class=\"token operator\">=</span> User<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>create_user<span class=\"token punctuation\">(</span><span class=\"token string\">\"alice\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"alice@something.com\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"alice12345\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># can modify user info</span>\nuser<span class=\"token punctuation\">.</span>first_name <span class=\"token operator\">=</span> <span class=\"token string\">\"Alice\"</span>\nuser<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n<h3>Static Files</h3>\n<p>using external static files (<code class=\"language-text\">.css</code> or <code class=\"language-text\">.js</code> files)</p>\n<ul>\n<li>\n<p>need special Django syntax to use external static files</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">{% load static %}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>{% static <span class=\"token punctuation\">'</span>flights/styles.css<span class=\"token punctuation\">'</span> %}<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n</li>\n<li>\n<p><strong>create <code class=\"language-text\">static</code> folder</strong>:</p>\n<ul>\n<li>create <code class=\"language-text\">flights</code> <strong>folder where static file will be stored</strong> (define as <strong>namespace folder</strong>)</li>\n</ul>\n</li>\n</ul>","frontmatter":{"path":"/web50/7","title":"Web50 lecture 7 - Django","date":"2019-06-17","tags":["CS50","Web50","Django"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}