{"data":{"markdownRemark":{"html":"<blockquote>\n<p>Harvard's Web Programming with Python and Javascript lecture 10 정리</p>\n</blockquote>\n<h3>Scalability</h3>\n<p>what considerations need to be taken into account when app gets popular and has to deal w/ multiple different ppl trying to access app and data at the same time</p>\n<h3>Benchmarking</h3>\n<p><strong>figuring out just how much your server can actually handle</strong></p>\n<ul>\n<li>use <strong>load test or stress test</strong> to figure out server's maximum capacity of how many users it can handle</li>\n<li>then, can start to think what to do in situation when that limit is exceeded</li>\n</ul>\n<h3>Types of Scaling</h3>\n<h4>Vertical Scaling</h4>\n<ul>\n<li>\n<p><strong>adding more processing capacity or power to existing server</strong> </p>\n<ul>\n<li>ex. add more memory to server</li>\n</ul>\n</li>\n<li>limit: eventually hits limit where a single server can no longer scale up</li>\n</ul>\n<h4>Horizontal Scaling</h4>\n<ul>\n<li><strong>increasing the number of servers</strong></li>\n<li>\n<p>limit: </p>\n<ul>\n<li>\n<p>which user goes to which server?</p>\n<ul>\n<li>solved by using load balanacers</li>\n</ul>\n</li>\n<li>\n<h2>race conditions regarding database access</h2>\n</li>\n</ul>\n</li>\n</ul>\n<h3>Load Balancing</h3>\n<h4>Load Balanacing Methods</h4>\n<p>strategies of making decisions of which server to send user to</p>\n<ul>\n<li><strong>Random Choice</strong>: randomly and evenly distribute users to servers</li>\n<li><strong>Round Robin</strong>: circle amongst the servers</li>\n<li><strong>Fewest Connections</strong>: send user to server w/ least load at the moment</li>\n</ul>\n<h4>Session-aware Load Balancing</h4>\n<p>make sure load balancer is aware of sessions and direct users</p>\n<ul>\n<li><strong>Sticky Sessions</strong></li>\n<li><strong>Sessions in Database</strong></li>\n<li><strong>Client-side Sessions</strong></li>\n</ul>\n<h3>Autoscaling</h3>\n<h3>Scaling Databases</h3>\n<h3>Database Partitioning</h3>\n<h3>Database Replication</h3>\n<h3>Single-primary Replication</h3>\n<h3>Multi-primary Replication</h3>\n<h3>Caching</h3>\n<h3>Client-side Caching</h3>\n<h3>Server-side Caching</h3>","frontmatter":{"path":"/web50/10","title":"Web50 lecture 10 - Scalability","date":"2019-06-25","tags":["CS50","Web50","Scalability"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}