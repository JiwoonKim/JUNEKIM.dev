{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/layouts/menu.js","webpack:///./src/components/layouts/header.js","webpack:///./src/components/layouts/footer.js","webpack:///./src/components/layouts/layout.js"],"names":["IndexPage","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","gatsby__WEBPACK_IMPORTED_MODULE_2__","query","render","data","_components_layouts_layout__WEBPACK_IMPORTED_MODULE_3__","title","site","siteMetadata","metaDataType","_public_static_d_755544856_json__WEBPACK_IMPORTED_MODULE_0__","ToggleMenu","showSettings","event","preventDefault","react_default","BurgerMenu","gatsby_browser_entry","to","React","Component","Header","_ref","metaData","layouts_menu","className","header_HeaderTitle","header_MetaData","HeaderTitle","_ref2","header_TitleSting","TitleSting","_ref3","MetaData","_ref4","header_BlogPostMetaData","header_PostListMetaData","header_DefaultMetaData","DefaultMetaData","BlogPostMetaData","_ref5","react_fontawesome_index_es","icon","date","tags","map","tag","toLowerCase","PostListMetaData","_ref6","propTypes","PropTypes","string","defaultProps","library","add","faCalendarAlt","faTags","faSearch","Footer","Date","getFullYear","author","href","_1041092198","fab","Layout","children","Fragment","layouts_header","layouts_footer","node","isRequired"],"mappings":"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","file":"component---src-pages-index-js-c5d7b891eb3dfdd84b99.js","sourcesContent":["import React from 'react'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport Layout from '../components/layouts/layout'\r\n\r\nconst IndexPage = () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <Layout title={data.site.siteMetadata.title} metaDataType='all'>\r\n        <main>\r\n          \r\n        </main>\r\n      </Layout>\r\n    )}\r\n  />\r\n)\r\n\r\nexport default IndexPage\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\nimport { slide as Menu } from 'react-burger-menu'\r\nimport './menu.css'\r\n\r\nclass ToggleMenu extends React.Component {\r\n    showSettings(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return <Menu >\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/about\">About</Link>\r\n            <Link to=\"/postlist\">Category</Link>\r\n          </Menu>\r\n    }\r\n}\r\n\r\nexport default ToggleMenu;","import { Link } from 'gatsby'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTags, faSearch, faCalendarAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport ToggleMenu from './menu'\r\nimport './header.css'\r\n\r\n// header component (title + meta data)\r\nconst Header = ({ title, metaDataType, metaData }) => (\r\n  <header>\r\n    <nav>\r\n      <ToggleMenu />\r\n    </nav>\r\n    <div className=\"banner-container\">\r\n      <HeaderTitle title={title} metaDataType={metaDataType}/>\r\n      <MetaData metaDataType={metaDataType} metaData={metaData}/>\r\n    </div>\r\n  </header>\r\n)\r\n\r\n// title portion of header component\r\nconst HeaderTitle = ({title, metaDataType}) => (\r\n  <div className=\"banner-title-container\">\r\n    <h1 className=\"tag-decoration tag-decoration-left\">\r\n      <span>&lt;h1&gt;</span>  \r\n    </h1>\r\n    <TitleSting title={title} metaDataType={metaDataType} />\r\n    <h1 className=\"tag-decoration tag-decoration-right\">\r\n      <span>&lt;/h1&gt;</span>\r\n    </h1>\r\n  </div>\r\n)\r\n\r\nconst TitleSting = ({title, metaDataType}) => {\r\n  if (metaDataType === 'blog-post' || metaDataType === 'all') {\r\n    return (<h1 className=\"banner-title\">{title}</h1>)\r\n  }\r\n  else {\r\n    return (\r\n      <h1 className=\"banner-title\">\r\n        {title}\r\n        <span className=\"banner-title-include-string\">에 해당하는 글</span>\r\n      </h1>)\r\n  }\r\n}\r\n\r\n/** meta data portion of header component\r\n *  (renders differently depending on type of post)\r\n */\r\nconst MetaData = ({metaDataType, metaData}) => {\r\n\r\n  if (metaDataType === 'blog-post') {\r\n    return <BlogPostMetaData metaData={metaData} />\r\n  } \r\n  else if (metaDataType === 'post-list') {\r\n    return <PostListMetaData metaData={metaData} />\r\n  }\r\n  else {\r\n    return <DefaultMetaData />\r\n  }\r\n}\r\n\r\n// no meta data in default\r\nconst DefaultMetaData = () => (\r\n  <div className=\"header-meta-data\"></div>\r\n)\r\n\r\n/** for blog posts,\r\n *  meta data: date + tags\r\n */\r\nconst BlogPostMetaData = ({metaData}) => (\r\n  <div className=\"header-meta-data\">\r\n    <span>\r\n      <FontAwesomeIcon className=\"meta-data-icon\" icon=\"calendar-alt\" />\r\n      <span>{metaData.date}</span>\r\n    </span>\r\n    <span>\r\n      <FontAwesomeIcon className=\"meta-data-icon\" icon=\"tags\" /> \r\n      {metaData.tags.map(tag => (\r\n        <Link to={`tags/${tag.toLowerCase()}`} className=\"tag\">\r\n          <span>{tag}</span>\r\n          <span>&#183;</span>\r\n        </Link>\r\n      ))}\r\n    </span>\r\n  </div>\r\n)\r\n\r\n/** for tag lists,\r\n *  meta data: number of blog posts under tag category\r\n */\r\nconst PostListMetaData = ({metaData}) => (\r\n  <div className=\"header-meta-data\">\r\n    <span>\r\n      <FontAwesomeIcon className=\"meta-data-icon\" icon=\"search\" /> \r\n      <span className=\"header-posts-count\">{metaData}</span>\r\n      <span>matching articles</span>\r\n    </span>\r\n  </div>\r\n)\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  title: ``,\r\n}\r\n\r\nlibrary.add(faCalendarAlt, faTags, faSearch);\r\n\r\nexport default Header","import { Link } from 'gatsby'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\n\r\nimport './footer.css'\r\n\r\nconst Footer = () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteAuthorQuery {\r\n        site {\r\n          siteMetadata {\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <footer>\r\n        <h1>\r\n          <span>© {new Date().getFullYear()}, Built by {` `}</span>\r\n          <Link to=\"/\">\r\n          {data.site.siteMetadata.author}\r\n          </Link>\r\n          <span>{` `}</span>\r\n          <a className=\"footer-github-link\" href=\"https://github.com/JiwoonKim\">\r\n            <FontAwesomeIcon icon={['fab', 'github']} /> \r\n          </a>\r\n        </h1>\r\n      </footer>\r\n    )}\r\n  />\r\n)\r\n\r\nFooter.propTypes = {\r\n  author: PropTypes.string,\r\n}\r\n\r\nFooter.defaultProps = {\r\n  author: ``,\r\n}\r\n\r\nlibrary.add(fab);\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport Header from './header'\r\nimport Footer from './footer'\r\nimport './layout.css'\r\n\r\nconst Layout = ({ title, metaDataType, metaData, children }) => (\r\n  <>\r\n    <Header title={title} metaDataType={metaDataType} metaData={metaData} />\r\n    <main>\r\n      {children}\r\n    </main>\r\n    <Footer />\r\n  </>\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}