{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/layouts/footer.js","webpack:///./src/components/layouts/menu.js","webpack:///./src/components/layouts/header.js","webpack:///./src/components/layouts/layout.js"],"names":["IndexPage","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","gatsby__WEBPACK_IMPORTED_MODULE_2__","query","render","data","_components_layouts_layout__WEBPACK_IMPORTED_MODULE_3__","title","site","siteMetadata","metaDataType","_public_static_d_755544856_json__WEBPACK_IMPORTED_MODULE_0__","Footer","react__WEBPACK_IMPORTED_MODULE_3___default","gatsby__WEBPACK_IMPORTED_MODULE_1__","Date","getFullYear","to","author","className","href","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_5__","icon","_public_static_d_1041092198_json__WEBPACK_IMPORTED_MODULE_0__","propTypes","PropTypes","string","defaultProps","library","add","fab","ToggleMenu","showSettings","event","preventDefault","react_default","BurgerMenu","gatsby_browser_entry","React","Component","Header","_ref","metaData","layouts_menu","header_HeaderTitle","header_MetaData","HeaderTitle","_ref2","header_TitleSting","TitleSting","_ref3","MetaData","_ref4","header_BlogPostMetaData","header_PostListMetaData","header_DefaultMetaData","DefaultMetaData","BlogPostMetaData","_ref5","react_fontawesome_index_es","date","tags","map","tag","toLowerCase","PostListMetaData","_ref6","faCalendarAlt","faTags","faSearch","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_header__WEBPACK_IMPORTED_MODULE_3__","_footer__WEBPACK_IMPORTED_MODULE_4__","Layout","children","Fragment","node","isRequired"],"mappings":"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","file":"component---src-pages-index-js-f5734b988a2616b70611.js","sourcesContent":["import React from 'react'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport Layout from '../components/layouts/layout'\r\n\r\nconst IndexPage = () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <Layout title={data.site.siteMetadata.title} metaDataType='all'>\r\n        <main>\r\n          \r\n        </main>\r\n      </Layout>\r\n    )}\r\n  />\r\n)\r\n\r\nexport default IndexPage\r\n","import { Link } from 'gatsby'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\n\r\nimport './footer.css'\r\n\r\nconst Footer = () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteAuthorQuery {\r\n        site {\r\n          siteMetadata {\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <footer>\r\n        <h1>\r\n          <span>© {new Date().getFullYear()}, Built by {` `}</span>\r\n          <Link to=\"/\">\r\n          {data.site.siteMetadata.author}\r\n          </Link>\r\n          <span>{` `}</span>\r\n          <a className=\"footer-github-link\" href=\"https://github.com/JiwoonKim\">\r\n            <FontAwesomeIcon icon={['fab', 'github']} /> \r\n          </a>\r\n        </h1>\r\n      </footer>\r\n    )}\r\n  />\r\n)\r\n\r\nFooter.propTypes = {\r\n  author: PropTypes.string,\r\n}\r\n\r\nFooter.defaultProps = {\r\n  author: ``,\r\n}\r\n\r\nlibrary.add(fab);\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\nimport { slide as Menu } from 'react-burger-menu'\r\nimport './menu.css'\r\n\r\nclass ToggleMenu extends React.Component {\r\n    showSettings(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return <Menu >\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/about\">About</Link>\r\n            <Link to=\"/tags\">Category</Link>\r\n            <Link to=\"/postlist\">All Posts</Link>\r\n          </Menu>\r\n    }\r\n}\r\n\r\nexport default ToggleMenu;","import { Link } from 'gatsby'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTags, faSearch, faCalendarAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport ToggleMenu from './menu'\r\nimport './header.css'\r\n\r\n// header component (title + meta data)\r\nconst Header = ({ title, metaDataType, metaData }) => (\r\n  <header>\r\n    <nav>\r\n      <ToggleMenu />\r\n    </nav>\r\n    <div className=\"banner-container\">\r\n      <HeaderTitle title={title} metaDataType={metaDataType}/>\r\n      <MetaData metaDataType={metaDataType} metaData={metaData}/>\r\n    </div>\r\n  </header>\r\n)\r\n\r\n// title portion of header component\r\nconst HeaderTitle = ({title, metaDataType}) => (\r\n  <div className=\"banner-title-container\">\r\n    <h1 className=\"tag-decoration tag-decoration-left\">\r\n      <span>&lt;h1&gt;</span>  \r\n    </h1>\r\n    <TitleSting title={title} metaDataType={metaDataType} />\r\n    <h1 className=\"tag-decoration tag-decoration-right\">\r\n      <span>&lt;/h1&gt;</span>\r\n    </h1>\r\n  </div>\r\n)\r\n\r\nconst TitleSting = ({title, metaDataType}) => {\r\n  if (metaDataType === 'blog-post' || metaDataType === 'all') {\r\n    return (<h1 className=\"banner-title\">{title}</h1>)\r\n  }\r\n  else {\r\n    return (\r\n      <h1 className=\"banner-title\">\r\n        {title}\r\n        <span className=\"banner-title-include-string\">에 해당하는 글</span>\r\n      </h1>)\r\n  }\r\n}\r\n\r\n/** meta data portion of header component\r\n *  (renders differently depending on type of post)\r\n */\r\nconst MetaData = ({metaDataType, metaData}) => {\r\n\r\n  if (metaDataType === 'blog-post') {\r\n    return <BlogPostMetaData metaData={metaData} />\r\n  } \r\n  else if (metaDataType === 'post-list') {\r\n    return <PostListMetaData metaData={metaData} />\r\n  }\r\n  else {\r\n    return <DefaultMetaData />\r\n  }\r\n}\r\n\r\n// no meta data in default\r\nconst DefaultMetaData = () => (\r\n  <div className=\"header-meta-data\"></div>\r\n)\r\n\r\n/** for blog posts,\r\n *  meta data: date + tags\r\n */\r\nconst BlogPostMetaData = ({metaData}) => (\r\n  <div className=\"header-meta-data\">\r\n    <span>\r\n      <FontAwesomeIcon className=\"meta-data-icon\" icon=\"calendar-alt\" />\r\n      <span>{metaData.date}</span>\r\n    </span>\r\n    <span>\r\n      <FontAwesomeIcon className=\"meta-data-icon\" icon=\"tags\" /> \r\n      {metaData.tags.map(tag => (\r\n        <Link to={`tags/${tag.toLowerCase()}`} className=\"tag\">\r\n          <span>{tag}</span>\r\n          <span>&#183;</span>\r\n        </Link>\r\n      ))}\r\n    </span>\r\n  </div>\r\n)\r\n\r\n/** for tag lists,\r\n *  meta data: number of blog posts under tag category\r\n */\r\nconst PostListMetaData = ({metaData}) => (\r\n  <div className=\"header-meta-data\">\r\n    <span>\r\n      <FontAwesomeIcon className=\"meta-data-icon\" icon=\"search\" /> \r\n      <span className=\"header-posts-count\">{metaData}</span>\r\n      <span>matching articles</span>\r\n    </span>\r\n  </div>\r\n)\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  title: ``,\r\n}\r\n\r\nlibrary.add(faCalendarAlt, faTags, faSearch);\r\n\r\nexport default Header","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport Header from './header'\r\nimport Footer from './footer'\r\nimport './layout.css'\r\n\r\nconst Layout = ({ title, metaDataType, metaData, children }) => (\r\n  <>\r\n    <Header title={title} metaDataType={metaDataType} metaData={metaData} />\r\n    <main>\r\n      {children}\r\n    </main>\r\n    <Footer />\r\n  </>\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}