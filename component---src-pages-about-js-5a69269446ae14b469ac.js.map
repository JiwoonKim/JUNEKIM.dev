{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./src/components/layouts/footer.js","webpack:///./src/components/layouts/menu.js","webpack:///./src/components/layouts/header.js","webpack:///./src/components/layouts/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layouts_layout__WEBPACK_IMPORTED_MODULE_2__","AboutPage","a","createElement","title","metaDataType","className","style","maxWidth","marginBottom","Footer","react__WEBPACK_IMPORTED_MODULE_3___default","gatsby__WEBPACK_IMPORTED_MODULE_1__","query","render","data","Date","getFullYear","to","site","siteMetadata","author","href","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_5__","icon","_public_static_d_1041092198_json__WEBPACK_IMPORTED_MODULE_0__","propTypes","PropTypes","string","defaultProps","library","add","fab","ToggleMenu","showSettings","event","preventDefault","react_default","BurgerMenu","gatsby_browser_entry","React","Component","Header","_ref","metaData","layouts_menu","header_HeaderTitle","header_MetaData","HeaderTitle","_ref2","header_TitleSting","TitleSting","_ref3","MetaData","_ref4","header_BlogPostMetaData","header_PostListMetaData","header_DefaultMetaData","DefaultMetaData","BlogPostMetaData","_ref5","react_fontawesome_index_es","date","tags","map","tag","tagPath","require","kebabCase","PostListMetaData","_ref6","faCalendarAlt","faTags","faSearch","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_header__WEBPACK_IMPORTED_MODULE_3__","_footer__WEBPACK_IMPORTED_MODULE_4__","Layout","children","Fragment","node","isRequired"],"mappings":"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","file":"component---src-pages-about-js-5a69269446ae14b469ac.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\nimport Layout from '../components/layouts/layout'\r\n//import Image from '../components/image'\r\n\r\nconst AboutPage = () => (\r\n  <Layout title={\"About Me\"} metaDataType='all'>\r\n    \r\n    <article className=\"post\">\r\n      <section className=\"post-content\">\r\n\r\n      <div style={{ maxWidth: `300px`, marginBottom: `1.45rem` }}>\r\n        {/* <Image /> */}\r\n      </div>\r\n\r\n      <p>\r\n        junebug0501@gmail.com\r\n      </p>\r\n\r\n      <h3>Projects</h3>\r\n\r\n      </section>\r\n    </article>\r\n  </Layout>\r\n)\r\n\r\nexport default AboutPage","import { Link } from 'gatsby'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\n\r\nimport './footer.css'\r\n\r\nconst Footer = () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteAuthorQuery {\r\n        site {\r\n          siteMetadata {\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <footer>\r\n        <h1>\r\n          <span>© {new Date().getFullYear()}, Built by {` `}</span>\r\n          <Link to=\"/\">\r\n          {data.site.siteMetadata.author}\r\n          </Link>\r\n          <span>{` `}</span>\r\n          <a className=\"footer-github-link\" href=\"https://github.com/JiwoonKim\">\r\n            <FontAwesomeIcon icon={['fab', 'github']} /> \r\n          </a>\r\n        </h1>\r\n      </footer>\r\n    )}\r\n  />\r\n)\r\n\r\nFooter.propTypes = {\r\n  author: PropTypes.string,\r\n}\r\n\r\nFooter.defaultProps = {\r\n  author: ``,\r\n}\r\n\r\nlibrary.add(fab);\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\nimport { slide as Menu } from 'react-burger-menu'\r\nimport './menu.css'\r\n\r\nclass ToggleMenu extends React.Component {\r\n    showSettings(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return <Menu >\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/about\">About</Link>\r\n            <Link to=\"/tags\">Category</Link>\r\n            <Link to=\"/postlist\">All Posts</Link>\r\n          </Menu>\r\n    }\r\n}\r\n\r\nexport default ToggleMenu;","import { Link } from 'gatsby'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport 'lodash.kebabcase'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTags, faSearch, faCalendarAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport ToggleMenu from './menu'\r\nimport './header.css'\r\n\r\n// header component (title + meta data)\r\nconst Header = ({ title, metaDataType, metaData }) => (\r\n  <header>\r\n    <nav>\r\n      <ToggleMenu />\r\n    </nav>\r\n    <div className=\"banner-container\">\r\n      <HeaderTitle title={title} metaDataType={metaDataType}/>\r\n      <MetaData metaDataType={metaDataType} metaData={metaData}/>\r\n    </div>\r\n  </header>\r\n)\r\n\r\n// title portion of header component\r\nconst HeaderTitle = ({title, metaDataType}) => (\r\n  <div className=\"banner-title-container\">\r\n    <h1 className=\"tag-decoration tag-decoration-left\">\r\n      <span>&lt;h1&gt;</span>  \r\n    </h1>\r\n    <TitleSting title={title} metaDataType={metaDataType} />\r\n    <h1 className=\"tag-decoration tag-decoration-right\">\r\n      <span>&lt;/h1&gt;</span>\r\n    </h1>\r\n  </div>\r\n)\r\n\r\nconst TitleSting = ({title, metaDataType}) => {\r\n  if (metaDataType === 'blog-post' || metaDataType === 'all') {\r\n    return (<h1 className=\"banner-title\">{title}</h1>)\r\n  }\r\n  else {\r\n    return (\r\n      <h1>\r\n        <h1 className=\"banner-title\">{title}</h1>\r\n        <span className=\"banner-title-include-string\">에 해당하는 글</span>\r\n      </h1>)\r\n  }\r\n}\r\n\r\n/** meta data portion of header component\r\n *  (renders differently depending on type of post)\r\n */\r\nconst MetaData = ({metaDataType, metaData}) => {\r\n\r\n  if (metaDataType === 'blog-post') {\r\n    return <BlogPostMetaData metaData={metaData} />\r\n  } \r\n  else if (metaDataType === 'post-list') {\r\n    return <PostListMetaData metaData={metaData} />\r\n  }\r\n  else {\r\n    return <DefaultMetaData />\r\n  }\r\n}\r\n\r\n// no meta data in default\r\nconst DefaultMetaData = () => (\r\n  <div className=\"header-meta-data\"></div>\r\n)\r\n\r\n/** for blog posts,\r\n *  meta data: date + tags\r\n */\r\nconst BlogPostMetaData = ({metaData}) => (\r\n  <div className=\"header-meta-data\">\r\n    <span>\r\n      <FontAwesomeIcon className=\"meta-data-icon\" icon=\"calendar-alt\" />\r\n      <span>{metaData.date}</span>\r\n    </span>\r\n    <span>\r\n      <FontAwesomeIcon className=\"meta-data-icon\" icon=\"tags\" /> \r\n      {metaData.tags.map(tag => {\r\n\r\n        var _ = require('lodash');\r\n        const tagPath = 'tags/' + _.kebabCase(tag);\r\n        return (\r\n          <Link to={tagPath} className=\"tag\">\r\n            <span>{tag}</span>\r\n            <span>&#183;</span>\r\n          </Link>\r\n        )\r\n      })}\r\n    </span>\r\n  </div>\r\n)\r\n\r\n/** for list pages (by tags),\r\n *  meta data: number of blog posts under tag category\r\n */\r\nconst PostListMetaData = ({metaData}) => (\r\n  <div className=\"header-meta-data\">\r\n    <span>\r\n      <FontAwesomeIcon className=\"meta-data-icon\" icon=\"search\" /> \r\n      <span className=\"header-posts-count\">{metaData}</span>\r\n      <span>matching articles</span>\r\n    </span>\r\n  </div>\r\n)\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  title: ``,\r\n}\r\n\r\nlibrary.add(faCalendarAlt, faTags, faSearch);\r\n\r\nexport default Header","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport Header from './header'\r\nimport Footer from './footer'\r\nimport './layout.css'\r\n\r\nconst Layout = ({ title, metaDataType, metaData, children }) => (\r\n  <>\r\n    <Header title={title} metaDataType={metaDataType} metaData={metaData} />\r\n    <main>\r\n      {children}\r\n    </main>\r\n    <Footer />\r\n  </>\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}