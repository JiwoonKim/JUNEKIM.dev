{"version":3,"sources":["webpack:///./src/pages/postlist.js","webpack:///./src/components/layouts/footer.js","webpack:///./src/components/layouts/menu.js","webpack:///./src/components/layouts/header.js","webpack:///./src/components/layouts/decorated-layout.js","webpack:///./src/components/layouts/list.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layouts_decorated_layout__WEBPACK_IMPORTED_MODULE_1__","_components_layouts_list__WEBPACK_IMPORTED_MODULE_2__","PostListPage","_ref","data","a","createElement","title","metaDataType","className","allMarkdownRemark","edges","map","post","i","key","node","frontmatter","Footer","react__WEBPACK_IMPORTED_MODULE_3___default","gatsby__WEBPACK_IMPORTED_MODULE_1__","query","render","Date","getFullYear","to","site","siteMetadata","author","href","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_5__","icon","_public_static_d_1041092198_json__WEBPACK_IMPORTED_MODULE_0__","propTypes","PropTypes","string","defaultProps","library","add","fab","ToggleMenu","showSettings","event","preventDefault","react_default","BurgerMenu","gatsby_browser_entry","React","Component","Header","metaData","layouts_menu","header_HeaderTitle","header_MetaData","HeaderTitle","_ref2","header_TitleSting","TitleSting","_ref3","MetaData","_ref4","header_BlogPostMetaData","header_PostListMetaData","header_DefaultMetaData","DefaultMetaData","BlogPostMetaData","_ref5","react_fontawesome_index_es","date","tags","tag","toLowerCase","PostListMetaData","_ref6","faCalendarAlt","faTags","faSearch","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_header__WEBPACK_IMPORTED_MODULE_2__","_footer__WEBPACK_IMPORTED_MODULE_3__","BodyTagDecoratedLayout","children","Fragment","isRequired","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__","ListPostItem","path"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAiBaI,GAjBbJ,EAAA,KAiBsB,aAkBPU,UA5BM,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,KAAF,OACnBN,EAAAO,EAAAC,cAACN,EAAA,EAAD,CAAwBO,MAAM,OAAOC,aAAa,OAChDV,EAAAO,EAAAC,cAAA,MAAIG,UAAU,iBACXL,EAAKM,kBAAkBC,MAAMC,IAAI,SAACC,EAAMC,GAAP,OAChChB,EAAAO,EAAAC,cAACL,EAAA,EAAD,CAAcc,IAAMD,EAAGD,KAAMA,EAAKG,KAAKC,qICAzCC,UAAS,kBACbC,EAAAd,EAAAC,cAACc,EAAA,YAAD,CACEC,MAAK,aASLC,OAAQ,SAAAlB,GAAI,OACVe,EAAAd,EAAAC,cAAA,cACEa,EAAAd,EAAAC,cAAA,UACEa,EAAAd,EAAAC,cAAA,kBAAS,IAAIiB,MAAOC,cAApB,mBACAL,EAAAd,EAAAC,cAACc,EAAA,KAAD,CAAMK,GAAG,KACRrB,EAAKsB,KAAKC,aAAaC,QAExBT,EAAAd,EAAAC,cAAA,iBACAa,EAAAd,EAAAC,cAAA,KAAGG,UAAU,qBAAqBoB,KAAK,gCACrCV,EAAAd,EAAAC,cAACwB,EAAA,EAAD,CAAiBC,KAAM,CAAC,MAAO,gBAnBzC3B,KAAA4B,MA2BFd,EAAOe,UAAY,CACjBL,OAAQM,IAAUC,QAGpBjB,EAAOkB,aAAe,CACpBR,OAAM,IAGRS,IAAQC,IAAIC,KAEGrB,+MC5BAsB,4GAdXC,aAAA,SAAaC,GACTA,EAAMC,oBAGVrB,OAAA,WACI,OAAOsB,EAAAvC,EAAAC,cAACuC,EAAA,MAAD,KACHD,EAAAvC,EAAAC,cAACwC,EAAA,KAAD,CAAMrB,GAAG,KAAT,QACAmB,EAAAvC,EAAAC,cAACwC,EAAA,KAAD,CAAMrB,GAAG,UAAT,SACAmB,EAAAvC,EAAAC,cAACwC,EAAA,KAAD,CAAMrB,GAAG,SAAT,YACAmB,EAAAvC,EAAAC,cAACwC,EAAA,KAAD,CAAMrB,GAAG,aAAT,kBAVasB,IAAMC,YCMzBC,UAAS,SAAA9C,GAAA,IAAGI,EAAHJ,EAAGI,MAAOC,EAAVL,EAAUK,aAAc0C,EAAxB/C,EAAwB+C,SAAxB,OACbN,EAAAvC,EAAAC,cAAA,cACEsC,EAAAvC,EAAAC,cAAA,WACEsC,EAAAvC,EAAAC,cAAC6C,EAAD,OAEFP,EAAAvC,EAAAC,cAAA,OAAKG,UAAU,oBACbmC,EAAAvC,EAAAC,cAAC8C,EAAD,CAAa7C,MAAOA,EAAOC,aAAcA,IACzCoC,EAAAvC,EAAAC,cAAC+C,EAAD,CAAU7C,aAAcA,EAAc0C,SAAUA,QAMhDI,EAAc,SAAAC,GAAA,IAAEhD,EAAFgD,EAAEhD,MAAOC,EAAT+C,EAAS/C,aAAT,OAClBoC,EAAAvC,EAAAC,cAAA,OAAKG,UAAU,0BACbmC,EAAAvC,EAAAC,cAAA,MAAIG,UAAU,sCACZmC,EAAAvC,EAAAC,cAAA,qBAEFsC,EAAAvC,EAAAC,cAACkD,EAAD,CAAYjD,MAAOA,EAAOC,aAAcA,IACxCoC,EAAAvC,EAAAC,cAAA,MAAIG,UAAU,uCACZmC,EAAAvC,EAAAC,cAAA,wBAKAmD,EAAa,SAAAC,GAA2B,IAAzBnD,EAAyBmD,EAAzBnD,MAAOC,EAAkBkD,EAAlBlD,aAC1B,MAAqB,cAAjBA,GAAiD,QAAjBA,EAC1BoC,EAAAvC,EAAAC,cAAA,MAAIG,UAAU,gBAAgBF,GAIpCqC,EAAAvC,EAAAC,cAAA,UACEsC,EAAAvC,EAAAC,cAAA,MAAIG,UAAU,gBAAgBF,GAC9BqC,EAAAvC,EAAAC,cAAA,QAAMG,UAAU,+BAAhB,cAQFkD,EAAW,SAAAC,GAA8B,IAA5BpD,EAA4BoD,EAA5BpD,aAAc0C,EAAcU,EAAdV,SAE/B,MAAqB,cAAjB1C,EACKoC,EAAAvC,EAAAC,cAACuD,EAAD,CAAkBX,SAAUA,IAEX,cAAjB1C,EACAoC,EAAAvC,EAAAC,cAACwD,EAAD,CAAkBZ,SAAUA,IAG5BN,EAAAvC,EAAAC,cAACyD,EAAD,OAKLC,EAAkB,kBACtBpB,EAAAvC,EAAAC,cAAA,OAAKG,UAAU,sBAMXwD,EAAmB,SAAAC,GAAA,IAAEhB,EAAFgB,EAAEhB,SAAF,OACvBN,EAAAvC,EAAAC,cAAA,OAAKG,UAAU,oBACbmC,EAAAvC,EAAAC,cAAA,YACEsC,EAAAvC,EAAAC,cAAC6D,EAAA,EAAD,CAAiB1D,UAAU,iBAAiBsB,KAAK,iBACjDa,EAAAvC,EAAAC,cAAA,YAAO4C,EAASkB,OAElBxB,EAAAvC,EAAAC,cAAA,YACEsC,EAAAvC,EAAAC,cAAC6D,EAAA,EAAD,CAAiB1D,UAAU,iBAAiBsB,KAAK,SAChDmB,EAASmB,KAAKzD,IAAI,SAAA0D,GAAG,OACpB1B,EAAAvC,EAAAC,cAACwC,EAAA,KAAD,CAAMrB,GAAE,QAAU6C,EAAIC,cAAiB9D,UAAU,OAC/CmC,EAAAvC,EAAAC,cAAA,YAAOgE,GACP1B,EAAAvC,EAAAC,cAAA,uBAUJkE,EAAmB,SAAAC,GAAA,IAAEvB,EAAFuB,EAAEvB,SAAF,OACvBN,EAAAvC,EAAAC,cAAA,OAAKG,UAAU,oBACbmC,EAAAvC,EAAAC,cAAA,YACEsC,EAAAvC,EAAAC,cAAC6D,EAAA,EAAD,CAAiB1D,UAAU,iBAAiBsB,KAAK,WACjDa,EAAAvC,EAAAC,cAAA,QAAMG,UAAU,sBAAsByC,GACtCN,EAAAvC,EAAAC,cAAA,oCAKN2C,EAAOhB,UAAY,CACjB1B,MAAO2B,IAAUC,QAGnBc,EAAOb,aAAe,CACpB7B,MAAK,IAGP8B,IAAQC,IAAIoC,IAAeC,IAAQC,KAEpB3B,wCCnHf,IAAApD,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAgF,EAAArF,EAAA,GAAAsF,EAAAtF,EAAAO,EAAA8E,GAAAE,EAAAvF,EAAA,KAAAwF,EAAAxF,EAAA,KAOMyF,GAPNzF,EAAA,KAO+B,SAAAW,GAAA,IAAGI,EAAHJ,EAAGI,MAAOC,EAAVL,EAAUK,aAAc0C,EAAxB/C,EAAwB+C,SAAUgC,EAAlC/E,EAAkC+E,SAAlC,OAC3BpF,EAAAO,EAAAC,cAAAR,EAAAO,EAAA8E,SAAA,KACErF,EAAAO,EAAAC,cAACyE,EAAA,EAAD,CAAQxE,MAAOA,EAAOC,aAAcA,EAAc0C,SAAUA,IAE5DpD,EAAAO,EAAAC,cAAA,OAAKG,UAAU,kBACbX,EAAAO,EAAAC,cAAA,MAAIG,UAAU,gCACZX,EAAAO,EAAAC,cAAA,uBAGFR,EAAAO,EAAAC,cAAA,QAAMG,UAAU,oBACbyE,GAGHpF,EAAAO,EAAAC,cAAA,MAAIG,UAAU,iCACZX,EAAAO,EAAAC,cAAA,yBAIJR,EAAAO,EAAAC,cAAC0E,EAAA,EAAD,SAINC,EAAuBhD,UAAY,CAC/BiD,SAAUhD,IAAUlB,KAAKoE,YAGZH,wCCjCjB,IAAApF,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAuB,EAAA5B,EAAA,IAAA6F,EAAA7F,EAAA,KAiBe8F,IAZM,SAAAnF,GAAA,IAAIU,EAAJV,EAAIU,KAAJ,OACjBf,EAAAO,EAAAC,cAAA,MAAIG,UAAU,aACVX,EAAAO,EAAAC,cAACc,EAAA,KAAD,CAAMK,GAAIZ,EAAK0E,MACbzF,EAAAO,EAAAC,cAAA,UAAKO,EAAKN,OACVT,EAAAO,EAAAC,cAAA,aACER,EAAAO,EAAAC,cAAC+E,EAAA,EAAD,CAAiBtD,KAAK,iBACtBjC,EAAAO,EAAAC,cAAA,QAAMG,UAAU,kBAAkBI,EAAKuD","file":"component---src-pages-postlist-js-486ad63dae4c7d53a687.js","sourcesContent":["import React from 'react'\r\nimport { graphql } from 'gatsby'\r\n\r\nimport BodyTagDecoratedLayout from '../components/layouts/decorated-layout'\r\nimport ListPostItem from '../components/layouts/list'\r\nimport '../components/layouts/list.css'\r\n\r\nconst PostListPage = ({data}) => (\r\n  <BodyTagDecoratedLayout title=\"모든 글\" metaDataType='all'>\r\n    <ul className=\"list-of-posts\">\r\n      {data.allMarkdownRemark.edges.map((post, i) => (\r\n        <ListPostItem key ={i} post={post.node.frontmatter} />\r\n      ))}\r\n    </ul>\r\n  </BodyTagDecoratedLayout>\r\n)\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogIndexQuery {\r\n    allMarkdownRemark{\r\n      edges{\r\n        node{\r\n          id\r\n          frontmatter{\r\n            path\r\n            title\r\n            date\r\n            tags\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default PostListPage\r\n","import { Link } from 'gatsby'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\n\r\nimport './footer.css'\r\n\r\nconst Footer = () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteAuthorQuery {\r\n        site {\r\n          siteMetadata {\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <footer>\r\n        <h1>\r\n          <span>© {new Date().getFullYear()}, Built by {` `}</span>\r\n          <Link to=\"/\">\r\n          {data.site.siteMetadata.author}\r\n          </Link>\r\n          <span>{` `}</span>\r\n          <a className=\"footer-github-link\" href=\"https://github.com/JiwoonKim\">\r\n            <FontAwesomeIcon icon={['fab', 'github']} /> \r\n          </a>\r\n        </h1>\r\n      </footer>\r\n    )}\r\n  />\r\n)\r\n\r\nFooter.propTypes = {\r\n  author: PropTypes.string,\r\n}\r\n\r\nFooter.defaultProps = {\r\n  author: ``,\r\n}\r\n\r\nlibrary.add(fab);\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\nimport { slide as Menu } from 'react-burger-menu'\r\nimport './menu.css'\r\n\r\nclass ToggleMenu extends React.Component {\r\n    showSettings(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return <Menu >\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/about\">About</Link>\r\n            <Link to=\"/tags\">Category</Link>\r\n            <Link to=\"/postlist\">All Posts</Link>\r\n          </Menu>\r\n    }\r\n}\r\n\r\nexport default ToggleMenu;","import { Link } from 'gatsby'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTags, faSearch, faCalendarAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport ToggleMenu from './menu'\r\nimport './header.css'\r\n\r\n// header component (title + meta data)\r\nconst Header = ({ title, metaDataType, metaData }) => (\r\n  <header>\r\n    <nav>\r\n      <ToggleMenu />\r\n    </nav>\r\n    <div className=\"banner-container\">\r\n      <HeaderTitle title={title} metaDataType={metaDataType}/>\r\n      <MetaData metaDataType={metaDataType} metaData={metaData}/>\r\n    </div>\r\n  </header>\r\n)\r\n\r\n// title portion of header component\r\nconst HeaderTitle = ({title, metaDataType}) => (\r\n  <div className=\"banner-title-container\">\r\n    <h1 className=\"tag-decoration tag-decoration-left\">\r\n      <span>&lt;h1&gt;</span>  \r\n    </h1>\r\n    <TitleSting title={title} metaDataType={metaDataType} />\r\n    <h1 className=\"tag-decoration tag-decoration-right\">\r\n      <span>&lt;/h1&gt;</span>\r\n    </h1>\r\n  </div>\r\n)\r\n\r\nconst TitleSting = ({title, metaDataType}) => {\r\n  if (metaDataType === 'blog-post' || metaDataType === 'all') {\r\n    return (<h1 className=\"banner-title\">{title}</h1>)\r\n  }\r\n  else {\r\n    return (\r\n      <h1>\r\n        <h1 className=\"banner-title\">{title}</h1>\r\n        <span className=\"banner-title-include-string\">에 해당하는 글</span>\r\n      </h1>)\r\n  }\r\n}\r\n\r\n/** meta data portion of header component\r\n *  (renders differently depending on type of post)\r\n */\r\nconst MetaData = ({metaDataType, metaData}) => {\r\n\r\n  if (metaDataType === 'blog-post') {\r\n    return <BlogPostMetaData metaData={metaData} />\r\n  } \r\n  else if (metaDataType === 'post-list') {\r\n    return <PostListMetaData metaData={metaData} />\r\n  }\r\n  else {\r\n    return <DefaultMetaData />\r\n  }\r\n}\r\n\r\n// no meta data in default\r\nconst DefaultMetaData = () => (\r\n  <div className=\"header-meta-data\"></div>\r\n)\r\n\r\n/** for blog posts,\r\n *  meta data: date + tags\r\n */\r\nconst BlogPostMetaData = ({metaData}) => (\r\n  <div className=\"header-meta-data\">\r\n    <span>\r\n      <FontAwesomeIcon className=\"meta-data-icon\" icon=\"calendar-alt\" />\r\n      <span>{metaData.date}</span>\r\n    </span>\r\n    <span>\r\n      <FontAwesomeIcon className=\"meta-data-icon\" icon=\"tags\" /> \r\n      {metaData.tags.map(tag => (\r\n        <Link to={`tags/${tag.toLowerCase()}`} className=\"tag\">\r\n          <span>{tag}</span>\r\n          <span>&#183;</span>\r\n        </Link>\r\n      ))}\r\n    </span>\r\n  </div>\r\n)\r\n\r\n/** for tag lists,\r\n *  meta data: number of blog posts under tag category\r\n */\r\nconst PostListMetaData = ({metaData}) => (\r\n  <div className=\"header-meta-data\">\r\n    <span>\r\n      <FontAwesomeIcon className=\"meta-data-icon\" icon=\"search\" /> \r\n      <span className=\"header-posts-count\">{metaData}</span>\r\n      <span>matching articles</span>\r\n    </span>\r\n  </div>\r\n)\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  title: ``,\r\n}\r\n\r\nlibrary.add(faCalendarAlt, faTags, faSearch);\r\n\r\nexport default Header","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Header from './header'\r\nimport Footer from './footer'\r\nimport './layout.css'\r\n\r\nconst BodyTagDecoratedLayout = ({ title, metaDataType, metaData, children }) => (\r\n    <>\r\n      <Header title={title} metaDataType={metaDataType} metaData={metaData} />\r\n\r\n      <div className=\"body-container\">\r\n        <h1 className=\"tag-decoration body-tag-left\">\r\n          <span>&lt;body&gt;</span>  \r\n        </h1>\r\n\r\n        <main className=\"body-middle-part\">\r\n          {children}\r\n        </main>\r\n\r\n        <h1 className=\"tag-decoration body-tag-right\">\r\n          <span>&lt;/body&gt;</span>  \r\n        </h1>\r\n      </div>\r\n\r\n      <Footer />\r\n    </>\r\n  )\r\n  \r\nBodyTagDecoratedLayout.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n}\r\n  \r\n  export default BodyTagDecoratedLayout","import React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst ListPostItem = ( { post } ) => (\r\n    <li className=\"list-item\">\r\n        <Link to={post.path}>\r\n          <h2>{post.title}</h2>\r\n          <small>\r\n            <FontAwesomeIcon icon=\"calendar-alt\" />\r\n            <span className=\"list-item-date\">{post.date}</span>\r\n          </small>\r\n        </Link>\r\n    </li>\r\n)\r\n\r\nexport default ListPostItem"],"sourceRoot":""}