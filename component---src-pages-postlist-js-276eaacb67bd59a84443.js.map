{"version":3,"sources":["webpack:///./src/pages/postlist.js","webpack:///./src/components/layouts/menu.js","webpack:///./src/components/layouts/header.js","webpack:///./src/components/layouts/footer.js","webpack:///./src/components/layouts/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layouts_layout__WEBPACK_IMPORTED_MODULE_2__","PostListPage","_ref","data","a","createElement","title","metaDataType","allMarkdownRemark","edges","map","post","key","node","id","to","frontmatter","path","date","ToggleMenu","showSettings","event","preventDefault","render","react_default","BurgerMenu","gatsby_browser_entry","React","Component","Header","metaData","layouts_menu","className","header_HeaderTitle","header_MetaData","HeaderTitle","_ref2","header_TitleSting","TitleSting","_ref3","MetaData","_ref4","header_BlogPostMetaData","header_PostListMetaData","header_DefaultMetaData","DefaultMetaData","BlogPostMetaData","_ref5","react_fontawesome_index_es","icon","tags","tag","toLowerCase","PostListMetaData","_ref6","propTypes","PropTypes","string","defaultProps","library","add","faCalendarAlt","faTags","faSearch","Footer","query","Date","getFullYear","site","siteMetadata","author","href","_1041092198","fab","Layout","children","Fragment","layouts_header","layouts_footer","isRequired"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,IAAAS,EAAAT,EAAA,KAkBaI,EAAS,YAkBPM,UA/BM,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,KAAF,OACnBN,EAAAO,EAAAC,cAACL,EAAA,EAAD,CAAQM,MAAM,OAAOC,aAAa,OAC/BJ,EAAKK,kBAAkBC,MAAMC,IAAI,SAAAC,GAAI,OACpCd,EAAAO,EAAAC,cAAA,OAAKO,IAAKD,EAAKE,KAAKC,IAClBjB,EAAAO,EAAAC,cAACN,EAAA,KAAD,CAAMgB,GAAIJ,EAAKE,KAAKG,YAAYC,MAC9BpB,EAAAO,EAAAC,cAAA,UAAKM,EAAKE,KAAKG,YAAYV,OAC3BT,EAAAO,EAAAC,cAAA,0BAAkBM,EAAKE,KAAKG,YAAYE,qNCSnCC,4GAbXC,aAAA,SAAaC,GACTA,EAAMC,oBAGVC,OAAA,WACI,OAAOC,EAAApB,EAAAC,cAACoB,EAAA,MAAD,KACHD,EAAApB,EAAAC,cAACqB,EAAA,KAAD,CAAMX,GAAG,KAAT,QACAS,EAAApB,EAAAC,cAACqB,EAAA,KAAD,CAAMX,GAAG,UAAT,SACAS,EAAApB,EAAAC,cAACqB,EAAA,KAAD,CAAMX,GAAG,aAAT,iBATaY,IAAMC,YCMzBC,UAAS,SAAA3B,GAAA,IAAGI,EAAHJ,EAAGI,MAAOC,EAAVL,EAAUK,aAAcuB,EAAxB5B,EAAwB4B,SAAxB,OACbN,EAAApB,EAAAC,cAAA,cACEmB,EAAApB,EAAAC,cAAA,WACEmB,EAAApB,EAAAC,cAAC0B,EAAD,OAEFP,EAAApB,EAAAC,cAAA,OAAK2B,UAAU,oBACbR,EAAApB,EAAAC,cAAC4B,EAAD,CAAa3B,MAAOA,EAAOC,aAAcA,IACzCiB,EAAApB,EAAAC,cAAC6B,EAAD,CAAU3B,aAAcA,EAAcuB,SAAUA,QAMhDK,EAAc,SAAAC,GAAA,IAAE9B,EAAF8B,EAAE9B,MAAOC,EAAT6B,EAAS7B,aAAT,OAClBiB,EAAApB,EAAAC,cAAA,OAAK2B,UAAU,0BACbR,EAAApB,EAAAC,cAAA,MAAI2B,UAAU,sCACZR,EAAApB,EAAAC,cAAA,qBAEFmB,EAAApB,EAAAC,cAACgC,EAAD,CAAY/B,MAAOA,EAAOC,aAAcA,IACxCiB,EAAApB,EAAAC,cAAA,MAAI2B,UAAU,uCACZR,EAAApB,EAAAC,cAAA,wBAKAiC,EAAa,SAAAC,GAA2B,IAAzBjC,EAAyBiC,EAAzBjC,MAAOC,EAAkBgC,EAAlBhC,aAC1B,MAAqB,cAAjBA,GAAiD,QAAjBA,EAC1BiB,EAAApB,EAAAC,cAAA,MAAI2B,UAAU,gBAAgB1B,GAIpCkB,EAAApB,EAAAC,cAAA,MAAI2B,UAAU,gBACX1B,EACDkB,EAAApB,EAAAC,cAAA,QAAM2B,UAAU,+BAAhB,cAQFQ,EAAW,SAAAC,GAA8B,IAA5BlC,EAA4BkC,EAA5BlC,aAAcuB,EAAcW,EAAdX,SAE/B,MAAqB,cAAjBvB,EACKiB,EAAApB,EAAAC,cAACqC,EAAD,CAAkBZ,SAAUA,IAEX,cAAjBvB,EACAiB,EAAApB,EAAAC,cAACsC,EAAD,CAAkBb,SAAUA,IAG5BN,EAAApB,EAAAC,cAACuC,EAAD,OAKLC,EAAkB,kBACtBrB,EAAApB,EAAAC,cAAA,OAAK2B,UAAU,sBAMXc,EAAmB,SAAAC,GAAA,IAAEjB,EAAFiB,EAAEjB,SAAF,OACvBN,EAAApB,EAAAC,cAAA,OAAK2B,UAAU,oBACbR,EAAApB,EAAAC,cAAA,YACEmB,EAAApB,EAAAC,cAAC2C,EAAA,EAAD,CAAiBhB,UAAU,iBAAiBiB,KAAK,iBACjDzB,EAAApB,EAAAC,cAAA,YAAOyB,EAASZ,OAElBM,EAAApB,EAAAC,cAAA,YACEmB,EAAApB,EAAAC,cAAC2C,EAAA,EAAD,CAAiBhB,UAAU,iBAAiBiB,KAAK,SAChDnB,EAASoB,KAAKxC,IAAI,SAAAyC,GAAG,OACpB3B,EAAApB,EAAAC,cAACqB,EAAA,KAAD,CAAMX,GAAE,QAAUoC,EAAIC,cAAiBpB,UAAU,OAC/CR,EAAApB,EAAAC,cAAA,YAAO8C,GACP3B,EAAApB,EAAAC,cAAA,uBAUJgD,EAAmB,SAAAC,GAAA,IAAExB,EAAFwB,EAAExB,SAAF,OACvBN,EAAApB,EAAAC,cAAA,OAAK2B,UAAU,oBACbR,EAAApB,EAAAC,cAAA,YACEmB,EAAApB,EAAAC,cAAC2C,EAAA,EAAD,CAAiBhB,UAAU,iBAAiBiB,KAAK,WACjDzB,EAAApB,EAAAC,cAAA,QAAM2B,UAAU,sBAAsBF,GACtCN,EAAApB,EAAAC,cAAA,oCAKNwB,EAAO0B,UAAY,CACjBjD,MAAOkD,IAAUC,QAGnB5B,EAAO6B,aAAe,CACpBpD,MAAK,IAGPqD,IAAQC,IAAIC,IAAeC,IAAQC,KAEpBlC,0BCxGTmC,UAAS,kBACbxC,EAAApB,EAAAC,cAACqB,EAAA,YAAD,CACEuC,MAAK,aASL1C,OAAQ,SAAApB,GAAI,OACVqB,EAAApB,EAAAC,cAAA,cACEmB,EAAApB,EAAAC,cAAA,UACEmB,EAAApB,EAAAC,cAAA,kBAAS,IAAI6D,MAAOC,cAApB,mBACA3C,EAAApB,EAAAC,cAACqB,EAAA,KAAD,CAAMX,GAAG,KACRZ,EAAKiE,KAAKC,aAAaC,QAExB9C,EAAApB,EAAAC,cAAA,iBACAmB,EAAApB,EAAAC,cAAA,KAAG2B,UAAU,qBAAqBuC,KAAK,gCACrC/C,EAAApB,EAAAC,cAAC2C,EAAA,EAAD,CAAiBC,KAAM,CAAC,MAAO,gBAnBzC9C,KAAAqE,MA2BFR,EAAOT,UAAY,CACjBe,OAAQd,IAAUC,QAGpBO,EAAON,aAAe,CACpBY,OAAM,IAGRX,IAAQC,IAAIa,KAEGT,QCzCTU,UAAS,SAAAxE,GAAA,IAAGI,EAAHJ,EAAGI,MAAOC,EAAVL,EAAUK,aAAcuB,EAAxB5B,EAAwB4B,SAAU6C,EAAlCzE,EAAkCyE,SAAlC,OACbnD,EAAApB,EAAAC,cAAAmB,EAAApB,EAAAwE,SAAA,KACEpD,EAAApB,EAAAC,cAACwE,EAAD,CAAQvE,MAAOA,EAAOC,aAAcA,EAAcuB,SAAUA,IAC5DN,EAAApB,EAAAC,cAAA,YACGsE,GAEHnD,EAAApB,EAAAC,cAACyE,EAAD,SAIJJ,EAAOnB,UAAY,CACjBoB,SAAUnB,IAAU3C,KAAKkE,YAGZL","file":"component---src-pages-postlist-js-276eaacb67bd59a84443.js","sourcesContent":["import React from 'react'\r\nimport { Link, graphql } from 'gatsby'\r\n\r\nimport Layout from '../components/layouts/layout'\r\n\r\nconst PostListPage = ({data}) => (\r\n  <Layout title=\"모든 글\" metaDataType='all'>\r\n    {data.allMarkdownRemark.edges.map(post => (\r\n      <div key={post.node.id}>\r\n        <Link to={post.node.frontmatter.path}>\r\n          <h4>{post.node.frontmatter.title}</h4>\r\n          <small>Posted on {post.node.frontmatter.date}</small>\r\n        </Link>\r\n      </div>\r\n    ))}\r\n  </Layout>\r\n)\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogIndexQuery {\r\n    allMarkdownRemark{\r\n      edges{\r\n        node{\r\n          id\r\n          frontmatter{\r\n            path\r\n            title\r\n            date\r\n            tags\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default PostListPage\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\nimport { slide as Menu } from 'react-burger-menu'\r\nimport './menu.css'\r\n\r\nclass ToggleMenu extends React.Component {\r\n    showSettings(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return <Menu >\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/about\">About</Link>\r\n            <Link to=\"/postlist\">Category</Link>\r\n          </Menu>\r\n    }\r\n}\r\n\r\nexport default ToggleMenu;","import { Link } from 'gatsby'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTags, faSearch, faCalendarAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport ToggleMenu from './menu'\r\nimport './header.css'\r\n\r\n// header component (title + meta data)\r\nconst Header = ({ title, metaDataType, metaData }) => (\r\n  <header>\r\n    <nav>\r\n      <ToggleMenu />\r\n    </nav>\r\n    <div className=\"banner-container\">\r\n      <HeaderTitle title={title} metaDataType={metaDataType}/>\r\n      <MetaData metaDataType={metaDataType} metaData={metaData}/>\r\n    </div>\r\n  </header>\r\n)\r\n\r\n// title portion of header component\r\nconst HeaderTitle = ({title, metaDataType}) => (\r\n  <div className=\"banner-title-container\">\r\n    <h1 className=\"tag-decoration tag-decoration-left\">\r\n      <span>&lt;h1&gt;</span>  \r\n    </h1>\r\n    <TitleSting title={title} metaDataType={metaDataType} />\r\n    <h1 className=\"tag-decoration tag-decoration-right\">\r\n      <span>&lt;/h1&gt;</span>\r\n    </h1>\r\n  </div>\r\n)\r\n\r\nconst TitleSting = ({title, metaDataType}) => {\r\n  if (metaDataType === 'blog-post' || metaDataType === 'all') {\r\n    return (<h1 className=\"banner-title\">{title}</h1>)\r\n  }\r\n  else {\r\n    return (\r\n      <h1 className=\"banner-title\">\r\n        {title}\r\n        <span className=\"banner-title-include-string\">에 해당하는 글</span>\r\n      </h1>)\r\n  }\r\n}\r\n\r\n/** meta data portion of header component\r\n *  (renders differently depending on type of post)\r\n */\r\nconst MetaData = ({metaDataType, metaData}) => {\r\n\r\n  if (metaDataType === 'blog-post') {\r\n    return <BlogPostMetaData metaData={metaData} />\r\n  } \r\n  else if (metaDataType === 'post-list') {\r\n    return <PostListMetaData metaData={metaData} />\r\n  }\r\n  else {\r\n    return <DefaultMetaData />\r\n  }\r\n}\r\n\r\n// no meta data in default\r\nconst DefaultMetaData = () => (\r\n  <div className=\"header-meta-data\"></div>\r\n)\r\n\r\n/** for blog posts,\r\n *  meta data: date + tags\r\n */\r\nconst BlogPostMetaData = ({metaData}) => (\r\n  <div className=\"header-meta-data\">\r\n    <span>\r\n      <FontAwesomeIcon className=\"meta-data-icon\" icon=\"calendar-alt\" />\r\n      <span>{metaData.date}</span>\r\n    </span>\r\n    <span>\r\n      <FontAwesomeIcon className=\"meta-data-icon\" icon=\"tags\" /> \r\n      {metaData.tags.map(tag => (\r\n        <Link to={`tags/${tag.toLowerCase()}`} className=\"tag\">\r\n          <span>{tag}</span>\r\n          <span>&#183;</span>\r\n        </Link>\r\n      ))}\r\n    </span>\r\n  </div>\r\n)\r\n\r\n/** for tag lists,\r\n *  meta data: number of blog posts under tag category\r\n */\r\nconst PostListMetaData = ({metaData}) => (\r\n  <div className=\"header-meta-data\">\r\n    <span>\r\n      <FontAwesomeIcon className=\"meta-data-icon\" icon=\"search\" /> \r\n      <span className=\"header-posts-count\">{metaData}</span>\r\n      <span>matching articles</span>\r\n    </span>\r\n  </div>\r\n)\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  title: ``,\r\n}\r\n\r\nlibrary.add(faCalendarAlt, faTags, faSearch);\r\n\r\nexport default Header","import { Link } from 'gatsby'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\n\r\nimport './footer.css'\r\n\r\nconst Footer = () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteAuthorQuery {\r\n        site {\r\n          siteMetadata {\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <footer>\r\n        <h1>\r\n          <span>© {new Date().getFullYear()}, Built by {` `}</span>\r\n          <Link to=\"/\">\r\n          {data.site.siteMetadata.author}\r\n          </Link>\r\n          <span>{` `}</span>\r\n          <a className=\"footer-github-link\" href=\"https://github.com/JiwoonKim\">\r\n            <FontAwesomeIcon icon={['fab', 'github']} /> \r\n          </a>\r\n        </h1>\r\n      </footer>\r\n    )}\r\n  />\r\n)\r\n\r\nFooter.propTypes = {\r\n  author: PropTypes.string,\r\n}\r\n\r\nFooter.defaultProps = {\r\n  author: ``,\r\n}\r\n\r\nlibrary.add(fab);\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport Header from './header'\r\nimport Footer from './footer'\r\nimport './layout.css'\r\n\r\nconst Layout = ({ title, metaDataType, metaData, children }) => (\r\n  <>\r\n    <Header title={title} metaDataType={metaDataType} metaData={metaData} />\r\n    <main>\r\n      {children}\r\n    </main>\r\n    <Footer />\r\n  </>\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}