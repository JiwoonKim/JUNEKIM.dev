{"version":3,"sources":["webpack:///./src/components/templates/tag-list.js","webpack:///./src/components/layouts/menu.js","webpack:///./src/components/layouts/header.js","webpack:///./src/components/layouts/footer.js","webpack:///./src/components/layouts/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","TagsTemplate","tagQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_layouts_layout__WEBPACK_IMPORTED_MODULE_2__","props","posts","data","allMarkdownRemark","edges","tag","pageContext","count","totalCount","a","createElement","title","metaDataType","metaData","className","map","_ref","i","node","to","frontmatter","path","key","ToggleMenu","showSettings","event","preventDefault","render","react_default","BurgerMenu","gatsby_browser_entry","React","Component","Header","layouts_menu","header_HeaderTitle","header_MetaData","HeaderTitle","_ref2","header_TitleSting","TitleSting","_ref3","MetaData","_ref4","header_BlogPostMetaData","header_PostListMetaData","header_DefaultMetaData","DefaultMetaData","BlogPostMetaData","_ref5","react_fontawesome_index_es","icon","date","tags","toLowerCase","PostListMetaData","_ref6","propTypes","PropTypes","string","defaultProps","library","add","faCalendarAlt","faTags","faSearch","Footer","query","Date","getFullYear","site","siteMetadata","author","href","_1041092198","fab","Layout","children","Fragment","layouts_header","layouts_footer","isRequired"],"mappings":"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","file":"component---src-components-templates-tag-list-js-bbb7fdf9f97112ba0290.js","sourcesContent":["import React from 'react'\r\nimport { Link, graphql } from 'gatsby'\r\n\r\nimport Layout from '../layouts/layout'\r\n\r\nexport default function TagsTemplate(props) {\r\n\r\n    const posts = props.data.allMarkdownRemark.edges;\r\n    const { tag } = props.pageContext;\r\n    const count = props.data.allMarkdownRemark.totalCount;\r\n\r\n    return (\r\n        <Layout title={tag} metaDataType='post-list' metaData={count}>\r\n            <div className=\"tags\">\r\n                {\r\n                    posts.map(({ node }, i) => (\r\n                        <div>\r\n                            <Link to={`${node.frontmatter.path}`} key={i} >\r\n                                {node.frontmatter.title}\r\n                            </Link>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </Layout>\r\n    )\r\n\r\n}\r\n\r\nexport const tagQuery = graphql`\r\nquery($tag: String) {\r\n    allMarkdownRemark(filter: { frontmatter: { tags: { in: [$tag] } } }) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            path\r\n          }\r\n        }\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`","import React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\nimport { slide as Menu } from 'react-burger-menu'\r\nimport './menu.css'\r\n\r\nclass ToggleMenu extends React.Component {\r\n    showSettings(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return <Menu >\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/about\">About</Link>\r\n            <Link to=\"/postlist\">Category</Link>\r\n          </Menu>\r\n    }\r\n}\r\n\r\nexport default ToggleMenu;","import { Link } from 'gatsby'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTags, faSearch, faCalendarAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport ToggleMenu from './menu'\r\nimport './header.css'\r\n\r\n// header component (title + meta data)\r\nconst Header = ({ title, metaDataType, metaData }) => (\r\n  <header>\r\n    <nav>\r\n      <ToggleMenu />\r\n    </nav>\r\n    <div className=\"banner-container\">\r\n      <HeaderTitle title={title} metaDataType={metaDataType}/>\r\n      <MetaData metaDataType={metaDataType} metaData={metaData}/>\r\n    </div>\r\n  </header>\r\n)\r\n\r\n// title portion of header component\r\nconst HeaderTitle = ({title, metaDataType}) => (\r\n  <div className=\"banner-title-container\">\r\n    <h1 className=\"tag-decoration tag-decoration-left\">\r\n      <span>&lt;h1&gt;</span>  \r\n    </h1>\r\n    <TitleSting title={title} metaDataType={metaDataType} />\r\n    <h1 className=\"tag-decoration tag-decoration-right\">\r\n      <span>&lt;/h1&gt;</span>\r\n    </h1>\r\n  </div>\r\n)\r\n\r\nconst TitleSting = ({title, metaDataType}) => {\r\n  if (metaDataType === 'blog-post' || metaDataType === 'all') {\r\n    return (<h1 className=\"banner-title\">{title}</h1>)\r\n  }\r\n  else {\r\n    return (\r\n      <h1 className=\"banner-title\">\r\n        {title}\r\n        <span className=\"banner-title-include-string\">에 해당하는 글</span>\r\n      </h1>)\r\n  }\r\n}\r\n\r\n/** meta data portion of header component\r\n *  (renders differently depending on type of post)\r\n */\r\nconst MetaData = ({metaDataType, metaData}) => {\r\n\r\n  if (metaDataType === 'blog-post') {\r\n    return <BlogPostMetaData metaData={metaData} />\r\n  } \r\n  else if (metaDataType === 'post-list') {\r\n    return <PostListMetaData metaData={metaData} />\r\n  }\r\n  else {\r\n    return <DefaultMetaData />\r\n  }\r\n}\r\n\r\n// no meta data in default\r\nconst DefaultMetaData = () => (\r\n  <div className=\"header-meta-data\"></div>\r\n)\r\n\r\n/** for blog posts,\r\n *  meta data: date + tags\r\n */\r\nconst BlogPostMetaData = ({metaData}) => (\r\n  <div className=\"header-meta-data\">\r\n    <span>\r\n      <FontAwesomeIcon className=\"meta-data-icon\" icon=\"calendar-alt\" />\r\n      <span>{metaData.date}</span>\r\n    </span>\r\n    <span>\r\n      <FontAwesomeIcon className=\"meta-data-icon\" icon=\"tags\" /> \r\n      {metaData.tags.map(tag => (\r\n        <Link to={`tags/${tag.toLowerCase()}`} className=\"tag\">\r\n          <span>{tag}</span>\r\n          <span>&#183;</span>\r\n        </Link>\r\n      ))}\r\n    </span>\r\n  </div>\r\n)\r\n\r\n/** for tag lists,\r\n *  meta data: number of blog posts under tag category\r\n */\r\nconst PostListMetaData = ({metaData}) => (\r\n  <div className=\"header-meta-data\">\r\n    <span>\r\n      <FontAwesomeIcon className=\"meta-data-icon\" icon=\"search\" /> \r\n      <span className=\"header-posts-count\">{metaData}</span>\r\n      <span>matching articles</span>\r\n    </span>\r\n  </div>\r\n)\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  title: ``,\r\n}\r\n\r\nlibrary.add(faCalendarAlt, faTags, faSearch);\r\n\r\nexport default Header","import { Link } from 'gatsby'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\n\r\nimport './footer.css'\r\n\r\nconst Footer = () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteAuthorQuery {\r\n        site {\r\n          siteMetadata {\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <footer>\r\n        <h1>\r\n          <span>© {new Date().getFullYear()}, Built by {` `}</span>\r\n          <Link to=\"/\">\r\n          {data.site.siteMetadata.author}\r\n          </Link>\r\n          <span>{` `}</span>\r\n          <a className=\"footer-github-link\" href=\"https://github.com/JiwoonKim\">\r\n            <FontAwesomeIcon icon={['fab', 'github']} /> \r\n          </a>\r\n        </h1>\r\n      </footer>\r\n    )}\r\n  />\r\n)\r\n\r\nFooter.propTypes = {\r\n  author: PropTypes.string,\r\n}\r\n\r\nFooter.defaultProps = {\r\n  author: ``,\r\n}\r\n\r\nlibrary.add(fab);\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport Header from './header'\r\nimport Footer from './footer'\r\nimport './layout.css'\r\n\r\nconst Layout = ({ title, metaDataType, metaData, children }) => (\r\n  <>\r\n    <Header title={title} metaDataType={metaDataType} metaData={metaData} />\r\n    <main>\r\n      {children}\r\n    </main>\r\n    <Footer />\r\n  </>\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}