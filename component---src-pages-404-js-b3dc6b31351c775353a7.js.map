{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/layouts/footer.js","webpack:///./src/components/layouts/menu.js","webpack:///./src/components/layouts/header.js","webpack:///./src/components/layouts/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layouts_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","Footer","react__WEBPACK_IMPORTED_MODULE_3___default","gatsby__WEBPACK_IMPORTED_MODULE_1__","query","render","data","Date","getFullYear","to","site","siteMetadata","author","className","href","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_5__","icon","_public_static_d_1041092198_json__WEBPACK_IMPORTED_MODULE_0__","propTypes","PropTypes","string","defaultProps","library","add","fab","ToggleMenu","showSettings","event","preventDefault","react_default","BurgerMenu","gatsby_browser_entry","React","Component","Header","_ref","metaDataType","metaData","layouts_menu","header_HeaderTitle","header_MetaData","HeaderTitle","_ref2","header_TitleSting","TitleSting","_ref3","MetaData","_ref4","header_BlogPostMetaData","header_PostListMetaData","header_DefaultMetaData","DefaultMetaData","BlogPostMetaData","_ref5","react_fontawesome_index_es","date","tags","map","tag","toLowerCase","PostListMetaData","_ref6","faCalendarAlt","faTags","faSearch","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_header__WEBPACK_IMPORTED_MODULE_3__","_footer__WEBPACK_IMPORTED_MODULE_4__","Layout","children","Fragment","node","isRequired","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array","arrayOf"],"mappings":"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","file":"component---src-pages-404-js-b3dc6b31351c775353a7.js","sourcesContent":["import React from 'react'\r\n\r\nimport Layout from '../components/layouts/layout'\r\nimport SEO from '../components/seo'\r\n\r\nconst NotFoundPage = () => (\r\n  <Layout>\r\n    <SEO title=\"404: Not found\" />\r\n    <h1>NOT FOUND</h1>\r\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\r\n  </Layout>\r\n)\r\n\r\nexport default NotFoundPage\r\n","import { Link } from 'gatsby'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\n\r\nimport './footer.css'\r\n\r\nconst Footer = () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteAuthorQuery {\r\n        site {\r\n          siteMetadata {\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <footer>\r\n        <h1>\r\n          <span>Â© {new Date().getFullYear()}, Built by {` `}</span>\r\n          <Link to=\"/\">\r\n          {data.site.siteMetadata.author}\r\n          </Link>\r\n          <span>{` `}</span>\r\n          <a className=\"footer-github-link\" href=\"https://github.com/JiwoonKim\">\r\n            <FontAwesomeIcon icon={['fab', 'github']} /> \r\n          </a>\r\n        </h1>\r\n      </footer>\r\n    )}\r\n  />\r\n)\r\n\r\nFooter.propTypes = {\r\n  author: PropTypes.string,\r\n}\r\n\r\nFooter.defaultProps = {\r\n  author: ``,\r\n}\r\n\r\nlibrary.add(fab);\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\nimport { slide as Menu } from 'react-burger-menu'\r\nimport './menu.css'\r\n\r\nclass ToggleMenu extends React.Component {\r\n    showSettings(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return <Menu >\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/about\">About</Link>\r\n            <Link to=\"/tags\">Category</Link>\r\n            <Link to=\"/postlist\">All Posts</Link>\r\n          </Menu>\r\n    }\r\n}\r\n\r\nexport default ToggleMenu;","import { Link } from 'gatsby'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTags, faSearch, faCalendarAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport ToggleMenu from './menu'\r\nimport './header.css'\r\n\r\n// header component (title + meta data)\r\nconst Header = ({ title, metaDataType, metaData }) => (\r\n  <header>\r\n    <nav>\r\n      <ToggleMenu />\r\n    </nav>\r\n    <div className=\"banner-container\">\r\n      <HeaderTitle title={title} metaDataType={metaDataType}/>\r\n      <MetaData metaDataType={metaDataType} metaData={metaData}/>\r\n    </div>\r\n  </header>\r\n)\r\n\r\n// title portion of header component\r\nconst HeaderTitle = ({title, metaDataType}) => (\r\n  <div className=\"banner-title-container\">\r\n    <h1 className=\"tag-decoration tag-decoration-left\">\r\n      <span>&lt;h1&gt;</span>  \r\n    </h1>\r\n    <TitleSting title={title} metaDataType={metaDataType} />\r\n    <h1 className=\"tag-decoration tag-decoration-right\">\r\n      <span>&lt;/h1&gt;</span>\r\n    </h1>\r\n  </div>\r\n)\r\n\r\nconst TitleSting = ({title, metaDataType}) => {\r\n  if (metaDataType === 'blog-post' || metaDataType === 'all') {\r\n    return (<h1 className=\"banner-title\">{title}</h1>)\r\n  }\r\n  else {\r\n    return (\r\n      <h1 className=\"banner-title\">\r\n        {title}\r\n        <span className=\"banner-title-include-string\">ì í´ë¹íë ê¸</span>\r\n      </h1>)\r\n  }\r\n}\r\n\r\n/** meta data portion of header component\r\n *  (renders differently depending on type of post)\r\n */\r\nconst MetaData = ({metaDataType, metaData}) => {\r\n\r\n  if (metaDataType === 'blog-post') {\r\n    return <BlogPostMetaData metaData={metaData} />\r\n  } \r\n  else if (metaDataType === 'post-list') {\r\n    return <PostListMetaData metaData={metaData} />\r\n  }\r\n  else {\r\n    return <DefaultMetaData />\r\n  }\r\n}\r\n\r\n// no meta data in default\r\nconst DefaultMetaData = () => (\r\n  <div className=\"header-meta-data\"></div>\r\n)\r\n\r\n/** for blog posts,\r\n *  meta data: date + tags\r\n */\r\nconst BlogPostMetaData = ({metaData}) => (\r\n  <div className=\"header-meta-data\">\r\n    <span>\r\n      <FontAwesomeIcon className=\"meta-data-icon\" icon=\"calendar-alt\" />\r\n      <span>{metaData.date}</span>\r\n    </span>\r\n    <span>\r\n      <FontAwesomeIcon className=\"meta-data-icon\" icon=\"tags\" /> \r\n      {metaData.tags.map(tag => (\r\n        <Link to={`tags/${tag.toLowerCase()}`} className=\"tag\">\r\n          <span>{tag}</span>\r\n          <span>&#183;</span>\r\n        </Link>\r\n      ))}\r\n    </span>\r\n  </div>\r\n)\r\n\r\n/** for tag lists,\r\n *  meta data: number of blog posts under tag category\r\n */\r\nconst PostListMetaData = ({metaData}) => (\r\n  <div className=\"header-meta-data\">\r\n    <span>\r\n      <FontAwesomeIcon className=\"meta-data-icon\" icon=\"search\" /> \r\n      <span className=\"header-posts-count\">{metaData}</span>\r\n      <span>matching articles</span>\r\n    </span>\r\n  </div>\r\n)\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  title: ``,\r\n}\r\n\r\nlibrary.add(faCalendarAlt, faTags, faSearch);\r\n\r\nexport default Header","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport Header from './header'\r\nimport Footer from './footer'\r\nimport './layout.css'\r\n\r\nconst Layout = ({ title, metaDataType, metaData, children }) => (\r\n  <>\r\n    <Header title={title} metaDataType={metaDataType} metaData={metaData} />\r\n    <main>\r\n      {children}\r\n    </main>\r\n    <Footer />\r\n  </>\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  return (\r\n    <StaticQuery\r\n      query={detailsQuery}\r\n      render={data => {\r\n        const metaDescription =\r\n          description || data.site.siteMetadata.description\r\n        return (\r\n          <Helmet\r\n            htmlAttributes={{\r\n              lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\r\n            meta={[\r\n              {\r\n                name: `description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                property: `og:description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:type`,\r\n                content: `website`,\r\n              },\r\n              {\r\n                name: `twitter:card`,\r\n                content: `summary`,\r\n              },\r\n              {\r\n                name: `twitter:creator`,\r\n                content: data.site.siteMetadata.author,\r\n              },\r\n              {\r\n                name: `twitter:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                name: `twitter:description`,\r\n                content: metaDescription,\r\n              },\r\n            ]\r\n              .concat(\r\n                keywords.length > 0\r\n                  ? {\r\n                      name: `keywords`,\r\n                      content: keywords.join(`, `),\r\n                    }\r\n                  : []\r\n              )\r\n              .concat(meta)}\r\n          />\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n\r\nconst detailsQuery = graphql`\r\n  query DefaultSEOQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}