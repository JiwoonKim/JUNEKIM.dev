{"version":3,"sources":["webpack:///./node_modules/react-burger-menu/lib/menuFactory.js","webpack:///./node_modules/react-burger-menu/lib/BurgerMenu.js","webpack:///./node_modules/react-burger-menu/lib/snapsvgImporter.js","webpack:///./node_modules/react-burger-menu/lib/menus/slide.js","webpack:///./node_modules/react-burger-menu/lib/baseStyles.js","webpack:///./node_modules/react-burger-menu/lib/BurgerIcon.js","webpack:///./node_modules/react-burger-menu/lib/CrossIcon.js","webpack:///./node_modules/react-burger-menu/lib/menus/stack.js","webpack:///./node_modules/react-burger-menu/lib/menus/elastic.js","webpack:///./node_modules/snapsvg-cjs/dist/snap.svg-cjs.js","webpack:///./node_modules/eve/eve.js","webpack:///./node_modules/react-burger-menu/lib/menus/bubble.js","webpack:///./node_modules/react-burger-menu/lib/menus/push.js","webpack:///./node_modules/react-burger-menu/lib/menus/pushRotate.js","webpack:///./node_modules/react-burger-menu/lib/menus/scaleDown.js","webpack:///./node_modules/react-burger-menu/lib/menus/scaleRotate.js","webpack:///./node_modules/react-burger-menu/lib/menus/fallDown.js","webpack:///./node_modules/react-burger-menu/lib/menus/reveal.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_get","_x3","_x4","_x5","_again","object","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","getter","get","parent","getPrototypeOf","_interopRequireDefault","obj","__esModule","default","_react","__webpack_require__","_react2","_reactDom2","_propTypes2","_baseStyles2","_BurgerIcon2","_CrossIcon2","styles","Menu","_Component","instance","TypeError","_classCallCheck","this","state","isOpen","subClass","superClass","create","constructor","setPrototypeOf","__proto__","_inherits","Component","_this","options","noStateChange","newState","applyWrapperStyles","setState","onStateChange","firstItem","document","querySelector","focus","activeElement","blur","timeoutId","clearTimeout","setTimeout","set","bodyClassName","classList","pageWrap","pageWrapId","handleExternalWrapper","outerContainer","outerContainerId","id","wrapperStyles","html","body","wrapper","getElementById","builtStyles","getStyle","prop","style","forEach","element","console","error","el","index","inline","propName","replace","charAt","toUpperCase","output","width","formattedWidth","right","e","window","event","keyCode","toggleMenu","disableOverlayClick","Error","customOnKeyDown","onkeydown","disableCloseOnEsc","listenForClose","bind","morphShape","path","_this2","svg","findDOMNode","lib","select","animate","attr","pathInitial","nextProps","_this3","createElement","noOverlay","className","overlayClassName","trim","onClick","shouldDisableOverlayClick","getStyles","morphShapeClassName","height","viewBox","preserveAspectRatio","d","menuClassName","itemListClassName","Children","map","children","item","extraProps","itemClassName","filter","join","tabIndex","cloneElement","customCrossIcon","customIcon","crossButtonClassName","crossClassName","customBurgerIcon","burgerButtonClassName","barClassName","burgerBarClassName","propTypes","string","oneOfType","oneOf","func","bool","isRequired","number","defaultProps","module","slide","stack","elastic","bubble","push","pushRotate","scaleDown","scaleRotate","fallDown","reveal","Snap","_menuFactory","_menuFactory2","overlay","position","zIndex","background","opacity","MozTransform","MsTransform","OTransform","WebkitTransform","transform","transition","menuWrap","menu","boxSizing","overflow","itemList","display","_x","_x2","BurgerIcon","hover","left","top","bmBurgerBarsHover","icon","bmIcon","bar","getLineStyle","bmBurgerBars","bmBurgerButton","onMouseOver","onMouseOut","margin","padding","border","fontSize","cursor","CrossIcon","apply","type","bmCross","getCrossStyle","bmCrossButton","nthChild","_snapsvgImporter2","pathOpen","mina","easeinout","whiteSpace","eve","requestID","animations","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","Date","getTime","isArray","Array","a","toString","idgen","idprefix","timer","now","sta","val","s","ds","b","dur","B","speed","spd","duration","stopit","update","pause","pdif","resume","frame","res","start","j","jj","end","easing","timeStamp","len","A","anim","linear","status","stop","time","getById","n","easeout","Math","pow","easein","q","Q","sqrt","x","y","t","abs","backin","backout","sin","PI","bounce","p","root","w","h","nodeType","wrap","is","Element","glob","doc","String","Paper","version","_","win","tokenRegex","objNotationRegex","has","Str","toFloat","parseFloat","toInt","parseInt","math","mmax","max","mmin","min","E","round","objectToString","colourRegExp","commaSpaces","separator","hsrg","hs","rg","pathCommand","tCommand","pathValues","ID","xlink","xmlns","hub","url","$","createTextNode","text","createComment","substring","getAttributeNS","getAttribute","nodeValue","setAttributeNS","setAttribute","removeAttribute","createElementNS","o","toLowerCase","isFinite","slice","cacher","f","scope","postprocessor","newf","arg","args","cache","count","array","ii","splice","repush","shift","rad","deg","format","str","all","name","quote","quotedName","isFunc","replacer","clone","angle","tan","cos","asin","num","acos","atan","atan2","x1","y1","x2","y2","x3","y3","len2","closestPoint","distance2","dx","dy","best","bestLength","scan","scanDistance","pathNode","node","pathLength","getTotalLength","precision","pathSegList","numberOfItems","bestDistance","Infinity","scanLength","getPointAtLength","before","after","beforeLength","afterLength","beforeDistance","afterDistance","distance","snapTo","values","tolerance","rem","getRGB","colour","indexOf","r","g","hex","rgbtoString","toHex","red","green","blue","rgb","match","split","hsb2rgb","hsl2rgb","hsb","hsl","l","toFixed","color","getElementsByTagName","out","defaultView","getComputedStyle","getPropertyValue","hsbtoString","hsltoString","prepareRGB","clr","packageRGB","rgb2hsl","rgb2hsb","v","R","G","X","C","V","L","M","m","parsePathString","pathString","pth","arr","paramCounts","c","u","z","data","params","concat","parseTransformString","TString","svgTransform2string","tstr","rgTransform","transform2matrix","bbox","tdata","Matrix","bb","tlen","command","absolute","inver","invert","translate","rotate","scale","add","_unit2px","getSomeSVG","mgr","class","fill","appendChild","getW","getBBox","getH","nam","removeChild","contains","compareDocumentPosition","ownerSVGElement","add2group","list","childNodes","snap","paper","tagName","nodeName","anims","mask","pattern","symbol","method","Fragment","frag","make","defs","proto","ownerDocument","dom","contentDocument","getSomeDefs","parentNode","pdefs","query","selectAll","nodelist","querySelectorAll","setInterval","attributes","firstDefined","json","att","parse","createDocumentFragment","full","div","innerHTML","firstChild","fragment","ch","toJSON","jsonFiller","on","nt","css","lastIndexOf","letter","cssAttr","alignment-baseline","baseline-shift","clip","clip-path","clip-rule","color-interpolation","color-interpolation-filters","color-profile","color-rendering","direction","dominant-baseline","enable-background","fill-opacity","fill-rule","flood-color","flood-opacity","font","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","glyph-orientation-horizontal","glyph-orientation-vertical","image-rendering","kerning","letter-spacing","lighting-color","marker","marker-end","marker-mid","marker-start","pointer-events","shape-rendering","stop-color","stop-opacity","stroke","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-anchor","text-decoration","text-rendering","unicode-bidi","visibility","word-spacing","writing-mode","ajax","postData","req","XMLHttpRequest","pd","encodeURIComponent","open","setRequestHeader","once","onreadystatechange","readyState","send","load","responseText","getElementByPoint","canvas","elem","box","docElem","clientTop","clientLeft","elementFromPoint","opera","so","getBoundingClientRect","documentElement","pageYOffset","scrollTop","pageXOffset","scrollLeft","sr","createSVGRect","hits","getIntersectionList","plugin","elproto","unit2px","isWithoutTransform","getClientRects","removed","localMatrix","original","href","pathfinder","deflt","bboxwt","realPath","matrix","propString","extractTransform","doReturn","test","papa","global","getCTM","local","ms","localString","toTransformString","globalMatrix","totalMatrix","diffMatrix","total","gradientTransform","patternTransform","append","it","appendTo","prepend","first","insertBefore","prependTo","nextSibling","insertAfter","remove","asPX","use","xlink:href","cloneNode","els","ids","uses","urltest","linktest","oldid","old","fs","fixids","toDefs","toPattern","patternUnits","refX","refY","cx","cy","markerWidth","markerHeight","orient","eldata","chld","removeData","outerSVG","innerSVG","toDataURL","btoa","contents","unescape","matrixproto","norm","normalize","mag","aNew","bNew","multLeft","cNew","eNew","me","skewX","skew","skewY","fromCharCode","offset","determinant","row","scalex","shear","scaley","isSimple","isSuperSimple","noRotation","shorter","clipIt","reURLValue","URL","fillStroke","grad","gradient","attrs","deurl","gradrg","setFontSize","getFontSize","tokens","stops","seed","step","k","toAbsolute","txt","baseVal","vb","rx","ry","tp","textPath","tuner","chunk","tuned","setter","textExtract","chi","textContent","internal","rgNotSpace","addClass","clazz","finalValue","classes","curClasses","removeClass","pos","hasClass","toggleClass","flag","operators","+","-","/","*","reUnit","reAddon","getNumber","getUnit","unit","plus","evnt","atr","aUnit","op","isNaN","bplus","from","to","rect","circle","preload","onerror","src","img","cssText","onload","image","offsetWidth","offsetHeight","ellipse","group","vbx","vby","vbw","vbh","ptrn","vx","vy","vw","vh","line","polyline","points","polygon","Gstops","GaddStop","inserted","GgetBBox","GsetStops","addStop","gradientLinear","setStops","gradientRadial","fx","fy","unshift","gradientUnits","clear","next","p2s","paths","ps","sleep","r1","r2","r0","rectPath","pathClone","pathArray","getPointAtSegmentLength","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","bezlen","findDotsAtSegment","x4","y4","ll","t2","getTotLen","getLengthFactory","istotal","subpath","O","onlystart","point","sp","subpaths","path2curve","getSubpathsAtLength","t1","t13","t12","t3","mx","my","nx","ny","alpha","bezierBBox","curveDim","isPointInsideBBox","isBBoxIntersect","bbox1","bbox2","base3","p1","p2","p3","p4","z2","Tvalues","Cvalues","sum","ct","xbase","ybase","comb","intersect","denominator","px","py","px2","py2","interHelper","bez1","bez2","justCount","n1","n2","dots1","dots2","xy","di","di1","dj","dj1","ci","cj","interPathHelper","path1","path2","x1m","y1m","x2m","y2m","pi","pj","intr","kk","segment1","segment2","pathBBox","Y","dim","xmin","ymin","ellipsePath","getPath","pathToAbsolute","pa0","pa","crz","dots","pop","catmullRom2bezier","l2c","q2c","ax","ay","x0","y0","b2ac","sqrtb2ac","tvalues","bounds","mt","jlen","curve","bx","by","qx","qy","attrs2","processPath","pcom","T","a2c","large_arc_flag","sweep_flag","recursive","_120","f1","f2","rx2","ry2","df","f2old","x2old","y2old","c1","s1","c2","s2","hx","hy","m1","m2","m3","m4","newres","fixArc","pp","pcoms1","pcoms2","fixM","a1","a2","pfirst","seg","seg2","seglen","seg2len","crp","iLen","getSubpath","closest","inside","found","intersection","intersectionNumber","isPointInside","toRelative","lowerCase","rel","toCubic","pathi","Set","items","bindings","setproto","thisArg","Animation","each","begin","handler","cb","callbacker","aname","unbound","insertion","tail","todel","arglen","exclude","names","getEmpty","getViewBox","getColour","path2array","isNumeric","equal","Number","tt1","tt2","maxlength","equaliseTransform","arr1","arr2","bUnit","supportsTouch","events","touchMap","mousedown","mousemove","mouseup","getScroll","preventTouch","originalEvent","preventDefault","stopTouch","stopPropagation","addEvent","fn","realName","scrollY","scrollX","targetTouches","olde","clientX","clientY","addEventListener","removeEventListener","drag","dragMove","dragi","touch","touches","identifier","_drag","move_scope","dragUp","unmousemove","unmouseup","end_scope","start_scope","off","eventName","unbind","f_in","f_out","scope_in","scope_out","mouseover","mouseout","unhover","unmouseover","unmouseout","draggable","onmove","onstart","onend","origTransform","init","undrag","unmousedown","pproto","rgurl","filstr","filterUnits","def","shadow","grayscale","amount","sepia","saturate","hueRotate","amount2","brightness","contrast","firstLetter","getAlign","way","align","animation","inAnim","_attrs","_callback","curStatus","eq","fkeys","tkeys","keys","saveColor","colors","A100","A200","A400","A700","mui","flat","pink","purple","deeppurple","indigo","lightblue","cyan","teal","lightgreen","lime","yellow","amber","orange","deeporange","brown","grey","bluegrey","turquoise","greensea","sunflower","emerland","nephritis","carrot","pumpkin","peterriver","belizehole","alizarin","pomegranate","amethyst","wisteria","clouds","silver","wetasphalt","midnightblue","concrete","asbestos","importMUIColors","__WEBPACK_AMD_DEFINE_RESULT__","current_event","comaseparator","numsort","lastDefined","objtos","ar","oldstop","listeners","indexed","queue","ce","sort","_events","nes","es","sep","RegExp","exist","subname","cur","nts","inodes","funcs","prune","steps","stepsTotal","nextStep","closeButton","transformOrigin","transformStyle","perspective","perspectiveOrigin","burgerIcon"],"mappings":"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","file":"1-bf9026e36f21d9a4bc59.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x3, _x4, _x5) { var _again = true; _function: while (_again) { var object = _x3, property = _x4, receiver = _x5; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x3 = parent; _x4 = property; _x5 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _baseStyles = require('./baseStyles');\n\nvar _baseStyles2 = _interopRequireDefault(_baseStyles);\n\nvar _BurgerIcon = require('./BurgerIcon');\n\nvar _BurgerIcon2 = _interopRequireDefault(_BurgerIcon);\n\nvar _CrossIcon = require('./CrossIcon');\n\nvar _CrossIcon2 = _interopRequireDefault(_CrossIcon);\n\nexports['default'] = function (styles) {\n  var Menu = (function (_Component) {\n    _inherits(Menu, _Component);\n\n    function Menu(props) {\n      _classCallCheck(this, Menu);\n\n      _get(Object.getPrototypeOf(Menu.prototype), 'constructor', this).call(this, props);\n      this.state = {\n        isOpen: false\n      };\n    }\n\n    _createClass(Menu, [{\n      key: 'toggleMenu',\n      value: function toggleMenu() {\n        var _this = this;\n\n        var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n        var isOpen = options.isOpen;\n        var noStateChange = options.noStateChange;\n\n        var newState = {\n          isOpen: typeof isOpen !== 'undefined' ? isOpen : !this.state.isOpen\n        };\n\n        this.applyWrapperStyles();\n\n        this.setState(newState, function () {\n          !noStateChange && _this.props.onStateChange(newState);\n\n          // For accessibility reasons, ensures that when we toggle open,\n          // we focus the first menu item if one exists.\n          if (newState.isOpen) {\n            var firstItem = document.querySelector('.bm-item');\n            if (firstItem) {\n              firstItem.focus();\n            }\n          } else {\n            document.activeElement.blur();\n          }\n\n          // Timeout ensures wrappers are cleared after animation finishes.\n          _this.timeoutId && clearTimeout(_this.timeoutId);\n          _this.timeoutId = setTimeout(function () {\n            _this.timeoutId = null;\n            if (!newState.isOpen) {\n              _this.applyWrapperStyles(false);\n            }\n          }, 500);\n        });\n      }\n\n      // Applies component-specific styles to external wrapper elements.\n    }, {\n      key: 'applyWrapperStyles',\n      value: function applyWrapperStyles() {\n        var set = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\n        if (this.props.bodyClassName) {\n          var body = document.querySelector('body');\n          body.classList[set ? 'add' : 'remove'](this.props.bodyClassName);\n        }\n\n        if (styles.pageWrap && this.props.pageWrapId) {\n          this.handleExternalWrapper(this.props.pageWrapId, styles.pageWrap, set);\n        }\n\n        if (styles.outerContainer && this.props.outerContainerId) {\n          this.handleExternalWrapper(this.props.outerContainerId, styles.outerContainer, set);\n        }\n      }\n\n      // Sets or unsets styles on DOM elements outside the menu component.\n      // This is necessary for correct page interaction with some of the menus.\n      // Throws and returns if the required external elements don't exist,\n      // which means any external page animations won't be applied.\n    }, {\n      key: 'handleExternalWrapper',\n      value: function handleExternalWrapper(id, wrapperStyles, set) {\n        var html = document.querySelector('html');\n        var body = document.querySelector('body');\n        var wrapper = document.getElementById(id);\n\n        if (!wrapper) {\n          console.error(\"Element with ID '\" + id + \"' not found\");\n          return;\n        }\n\n        var builtStyles = this.getStyle(wrapperStyles);\n\n        for (var prop in builtStyles) {\n          if (builtStyles.hasOwnProperty(prop)) {\n            wrapper.style[prop] = set ? builtStyles[prop] : '';\n          }\n        }\n\n        // Prevent any horizontal scroll.\n        [html, body].forEach(function (element) {\n          element.style['overflow-x'] = set ? 'hidden' : '';\n        });\n      }\n\n      // Builds styles incrementally for a given element.\n    }, {\n      key: 'getStyles',\n      value: function getStyles(el, index, inline) {\n        var propName = 'bm' + el.replace(el.charAt(0), el.charAt(0).toUpperCase());\n\n        // Set base styles.\n        var output = _baseStyles2['default'][el] ? this.getStyle(_baseStyles2['default'][el]) : {};\n\n        // Add animation-specific styles.\n        if (styles[el]) {\n          output = _extends({}, output, this.getStyle(styles[el], index + 1));\n        }\n\n        // Add custom styles.\n        if (this.props.styles[propName]) {\n          output = _extends({}, output, this.props.styles[propName]);\n        }\n\n        // Add element inline styles.\n        if (inline) {\n          output = _extends({}, output, inline);\n        }\n\n        return output;\n      }\n    }, {\n      key: 'getStyle',\n      value: function getStyle(style, index) {\n        var width = this.props.width;\n\n        var formattedWidth = typeof width !== 'string' ? width + 'px' : width;\n        return style(this.state.isOpen, formattedWidth, this.props.right, index);\n      }\n    }, {\n      key: 'listenForClose',\n      value: function listenForClose(e) {\n        e = e || window.event;\n\n        if (this.state.isOpen && (e.key === 'Escape' || e.keyCode === 27)) {\n          this.toggleMenu();\n        }\n      }\n    }, {\n      key: 'shouldDisableOverlayClick',\n      value: function shouldDisableOverlayClick() {\n        if (typeof this.props.disableOverlayClick === 'function') {\n          return this.props.disableOverlayClick();\n        } else {\n          return this.props.disableOverlayClick;\n        }\n      }\n    }, {\n      key: 'componentWillMount',\n      value: function componentWillMount() {\n        if (!styles) {\n          throw new Error('No styles supplied');\n        }\n      }\n    }, {\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        // Bind ESC key handler (unless disabled or custom function supplied).\n        if (this.props.customOnKeyDown) {\n          window.onkeydown = this.props.customOnKeyDown;\n        } else if (!this.props.disableCloseOnEsc) {\n          window.onkeydown = this.listenForClose.bind(this);\n        }\n\n        // Allow initial open state to be set by props.\n        if (this.props.isOpen) {\n          this.toggleMenu({ isOpen: true, noStateChange: true });\n        }\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        window.onkeydown = null;\n\n        this.applyWrapperStyles(false);\n      }\n    }, {\n      key: 'componentDidUpdate',\n      value: function componentDidUpdate() {\n        var _this2 = this;\n\n        if (styles.svg) {\n          (function () {\n            var morphShape = _reactDom2['default'].findDOMNode(_this2, 'bm-morph-shape');\n            var path = styles.svg.lib(morphShape).select('path');\n\n            if (_this2.state.isOpen) {\n              // Animate SVG path.\n              styles.svg.animate(path);\n            } else {\n              // Reset path (timeout ensures animation happens off screen).\n              setTimeout(function () {\n                path.attr('d', styles.svg.pathInitial);\n              }, 300);\n            }\n          })();\n        }\n      }\n    }, {\n      key: 'componentWillReceiveProps',\n      value: function componentWillReceiveProps(nextProps) {\n        if (typeof nextProps.isOpen !== 'undefined' && nextProps.isOpen !== this.state.isOpen) {\n          this.toggleMenu();\n        }\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _this3 = this;\n\n        return _react2['default'].createElement(\n          'div',\n          null,\n          !this.props.noOverlay && _react2['default'].createElement('div', {\n            className: ('bm-overlay ' + this.props.overlayClassName).trim(),\n            onClick: function () {\n              return !_this3.shouldDisableOverlayClick() && _this3.toggleMenu();\n            },\n            style: this.getStyles('overlay')\n          }),\n          _react2['default'].createElement(\n            'div',\n            {\n              id: this.props.id,\n              className: ('bm-menu-wrap ' + this.props.className).trim(),\n              style: this.getStyles('menuWrap')\n            },\n            styles.svg && _react2['default'].createElement(\n              'div',\n              {\n                className: ('bm-morph-shape ' + this.props.morphShapeClassName).trim(),\n                style: this.getStyles('morphShape')\n              },\n              _react2['default'].createElement(\n                'svg',\n                {\n                  width: '100%',\n                  height: '100%',\n                  viewBox: '0 0 100 800',\n                  preserveAspectRatio: 'none'\n                },\n                _react2['default'].createElement('path', { d: styles.svg.pathInitial })\n              )\n            ),\n            _react2['default'].createElement(\n              'div',\n              {\n                className: ('bm-menu ' + this.props.menuClassName).trim(),\n                style: this.getStyles('menu')\n              },\n              _react2['default'].createElement(\n                'nav',\n                {\n                  className: ('bm-item-list ' + this.props.itemListClassName).trim(),\n                  style: this.getStyles('itemList')\n                },\n                _react2['default'].Children.map(this.props.children, function (item, index) {\n                  if (item) {\n                    var classList = ['bm-item', _this3.props.itemClassName, item.props.className].filter(function (className) {\n                      return !!className;\n                    }).join(' ');\n                    var extraProps = {\n                      key: index,\n                      className: classList,\n                      style: _this3.getStyles('item', index, item.props.style),\n                      tabIndex: _this3.state.isOpen ? 0 : -1\n                    };\n                    return _react2['default'].cloneElement(item, extraProps);\n                  }\n                })\n              )\n            ),\n            this.props.customCrossIcon !== false && _react2['default'].createElement(\n              'div',\n              { style: this.getStyles('closeButton') },\n              _react2['default'].createElement(_CrossIcon2['default'], {\n                onClick: function () {\n                  return _this3.toggleMenu();\n                },\n                styles: this.props.styles,\n                customIcon: this.props.customCrossIcon,\n                className: this.props.crossButtonClassName,\n                crossClassName: this.props.crossClassName,\n                tabIndex: this.state.isOpen ? 0 : -1\n              })\n            )\n          ),\n          this.props.customBurgerIcon !== false && _react2['default'].createElement(\n            'div',\n            { style: this.getStyles('burgerIcon') },\n            _react2['default'].createElement(_BurgerIcon2['default'], {\n              onClick: function () {\n                return _this3.toggleMenu();\n              },\n              styles: this.props.styles,\n              customIcon: this.props.customBurgerIcon,\n              className: this.props.burgerButtonClassName,\n              barClassName: this.props.burgerBarClassName\n            })\n          )\n        );\n      }\n    }]);\n\n    return Menu;\n  })(_react.Component);\n\n  Menu.propTypes = {\n    bodyClassName: _propTypes2['default'].string,\n    burgerBarClassName: _propTypes2['default'].string,\n    burgerButtonClassName: _propTypes2['default'].string,\n    crossButtonClassName: _propTypes2['default'].string,\n    crossClassName: _propTypes2['default'].string,\n    customBurgerIcon: _propTypes2['default'].oneOfType([_propTypes2['default'].element, _propTypes2['default'].oneOf([false])]),\n    customCrossIcon: _propTypes2['default'].oneOfType([_propTypes2['default'].element, _propTypes2['default'].oneOf([false])]),\n    customOnKeyDown: _propTypes2['default'].func,\n    disableCloseOnEsc: _propTypes2['default'].bool,\n    disableOverlayClick: _propTypes2['default'].oneOfType([_propTypes2['default'].bool, _propTypes2['default'].func]),\n    id: _propTypes2['default'].string,\n    isOpen: _propTypes2['default'].bool,\n    itemClassName: _propTypes2['default'].string,\n    itemListClassName: _propTypes2['default'].string,\n    menuClassName: _propTypes2['default'].string,\n    morphShapeClassName: _propTypes2['default'].string,\n    noOverlay: _propTypes2['default'].bool,\n    onStateChange: _propTypes2['default'].func,\n    outerContainerId: styles && styles.outerContainer ? _propTypes2['default'].string.isRequired : _propTypes2['default'].string,\n    overlayClassName: _propTypes2['default'].string,\n    pageWrapId: styles && styles.pageWrap ? _propTypes2['default'].string.isRequired : _propTypes2['default'].string,\n    right: _propTypes2['default'].bool,\n    styles: _propTypes2['default'].object,\n    width: _propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].string])\n  };\n\n  Menu.defaultProps = {\n    bodyClassName: '',\n    burgerBarClassName: '',\n    burgerButtonClassName: '',\n    className: '',\n    crossButtonClassName: '',\n    crossClassName: '',\n    disableCloseOnEsc: false,\n    id: '',\n    itemClassName: '',\n    itemListClassName: '',\n    menuClassName: '',\n    morphShapeClassName: '',\n    noOverlay: false,\n    onStateChange: function onStateChange() {},\n    outerContainerId: '',\n    overlayClassName: '',\n    pageWrapId: '',\n    styles: {},\n    width: 300\n  };\n\n  return Menu;\n};\n\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports['default'] = {\n  slide: require('./menus/slide'),\n  stack: require('./menus/stack'),\n  elastic: require('./menus/elastic'),\n  bubble: require('./menus/bubble'),\n  push: require('./menus/push'),\n  pushRotate: require('./menus/pushRotate'),\n  scaleDown: require('./menus/scaleDown'),\n  scaleRotate: require('./menus/scaleRotate'),\n  fallDown: require('./menus/fallDown'),\n  reveal: require('./menus/reveal')\n};\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nexports['default'] = function () {\n  var Snap = undefined;\n  try {\n    Snap = require('snapsvg-cjs');\n  } finally {\n    return Snap;\n  }\n};\n\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar styles = {\n  overlay: function overlay(isOpen) {\n    return {\n      position: 'fixed',\n      zIndex: 1000,\n      width: '100%',\n      height: '100%',\n      background: 'rgba(0, 0, 0, 0.3)',\n      opacity: isOpen ? 1 : 0,\n      MozTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      OTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      transform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      transition: isOpen ? 'opacity 0.3s' : 'opacity 0.3s, transform 0s 0.3s'\n    };\n  },\n\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      position: 'fixed',\n      right: right ? 0 : 'inherit',\n      zIndex: 1100,\n      width: width,\n      height: '100%',\n      MozTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n\n  menu: function menu() {\n    return {\n      height: '100%',\n      boxSizing: 'border-box',\n      overflow: 'auto'\n    };\n  },\n\n  itemList: function itemList() {\n    return {\n      height: '100%'\n    };\n  },\n\n  item: function item() {\n    return {\n      display: 'block'\n    };\n  }\n};\n\nexports['default'] = styles;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar BurgerIcon = (function (_Component) {\n  _inherits(BurgerIcon, _Component);\n\n  function BurgerIcon(props) {\n    _classCallCheck(this, BurgerIcon);\n\n    _get(Object.getPrototypeOf(BurgerIcon.prototype), 'constructor', this).call(this, props);\n    this.state = {\n      hover: false\n    };\n  }\n\n  _createClass(BurgerIcon, [{\n    key: 'getLineStyle',\n    value: function getLineStyle(index) {\n      return _extends({\n        position: 'absolute',\n        height: '20%',\n        left: 0,\n        right: 0,\n        top: 20 * (index * 2) + '%',\n        opacity: this.state.hover ? 0.6 : 1\n      }, this.state.hover && this.props.styles.bmBurgerBarsHover);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this = this;\n\n      var icon = undefined;\n      var buttonStyle = {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        margin: 0,\n        padding: 0,\n        border: 'none',\n        fontSize: 0,\n        background: 'transparent',\n        cursor: 'pointer'\n      };\n\n      if (this.props.customIcon) {\n        var extraProps = {\n          className: 'bm-icon',\n          style: _extends({ width: '100%', height: '100%' }, this.props.styles.bmIcon)\n        };\n        icon = _react2['default'].cloneElement(this.props.customIcon, extraProps);\n      } else {\n        icon = _react2['default'].createElement(\n          'span',\n          null,\n          [0, 1, 2].map(function (bar) {\n            return _react2['default'].createElement('span', {\n              key: bar,\n              className: ('bm-burger-bars ' + _this.props.barClassName + ' ' + (_this.state.hover && 'bm-burger-bars-hover')).trim(),\n              style: _extends({}, _this.getLineStyle(bar), _this.props.styles.bmBurgerBars)\n            });\n          })\n        );\n      }\n\n      return _react2['default'].createElement(\n        'div',\n        {\n          className: ('bm-burger-button ' + this.props.className).trim(),\n          style: _extends({ zIndex: 1000 }, this.props.styles.bmBurgerButton)\n        },\n        icon,\n        _react2['default'].createElement(\n          'button',\n          {\n            onClick: this.props.onClick,\n            onMouseOver: function () {\n              return _this.setState({ hover: true });\n            },\n            onMouseOut: function () {\n              return _this.setState({ hover: false });\n            },\n            style: buttonStyle\n          },\n          'Open Menu'\n        )\n      );\n    }\n  }]);\n\n  return BurgerIcon;\n})(_react.Component);\n\nexports['default'] = BurgerIcon;\n\nBurgerIcon.propTypes = {\n  barClassName: _propTypes2['default'].string,\n  customIcon: _propTypes2['default'].element,\n  styles: _propTypes2['default'].object\n};\n\nBurgerIcon.defaultProps = {\n  barClassName: '',\n  className: '',\n  styles: {}\n};\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar CrossIcon = (function (_Component) {\n  _inherits(CrossIcon, _Component);\n\n  function CrossIcon() {\n    _classCallCheck(this, CrossIcon);\n\n    _get(Object.getPrototypeOf(CrossIcon.prototype), 'constructor', this).apply(this, arguments);\n  }\n\n  _createClass(CrossIcon, [{\n    key: 'getCrossStyle',\n    value: function getCrossStyle(type) {\n      return {\n        position: 'absolute',\n        width: 3,\n        height: 14,\n        transform: type === 'before' ? 'rotate(45deg)' : 'rotate(-45deg)'\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this = this;\n\n      var icon;\n      var buttonWrapperStyle = {\n        position: 'absolute',\n        width: 24,\n        height: 24,\n        right: 8,\n        top: 8\n      };\n      var buttonStyle = {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        margin: 0,\n        padding: 0,\n        border: 'none',\n        fontSize: 0,\n        background: 'transparent',\n        cursor: 'pointer'\n      };\n\n      if (this.props.customIcon) {\n        var extraProps = {\n          className: 'bm-cross',\n          style: _extends({ width: '100%', height: '100%' }, this.props.styles.bmCross)\n        };\n        icon = _react2['default'].cloneElement(this.props.customIcon, extraProps);\n      } else {\n        icon = _react2['default'].createElement(\n          'span',\n          { style: { position: 'absolute', top: '6px', right: '14px' } },\n          ['before', 'after'].map(function (type, i) {\n            return _react2['default'].createElement('span', {\n              key: i,\n              className: ('bm-cross ' + _this.props.crossClassName).trim(),\n              style: _extends({}, _this.getCrossStyle(type), _this.props.styles.bmCross)\n            });\n          })\n        );\n      }\n\n      return _react2['default'].createElement(\n        'div',\n        {\n          className: ('bm-cross-button ' + this.props.className).trim(),\n          style: _extends({}, buttonWrapperStyle, this.props.styles.bmCrossButton)\n        },\n        icon,\n        _react2['default'].createElement(\n          'button',\n          {\n            onClick: this.props.onClick,\n            style: buttonStyle,\n            tabIndex: this.props.tabIndex\n          },\n          'Close Menu'\n        )\n      );\n    }\n  }]);\n\n  return CrossIcon;\n})(_react.Component);\n\nexports['default'] = CrossIcon;\n\nCrossIcon.propTypes = {\n  crossClassName: _propTypes2['default'].string,\n  customIcon: _propTypes2['default'].element,\n  styles: _propTypes2['default'].object,\n  tabIndex: _propTypes2['default'].number\n};\n\nCrossIcon.defaultProps = {\n  crossClassName: '',\n  className: '',\n  styles: {},\n  tabIndex: 0\n};\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'transform 0.8s cubic-bezier(0.7, 0, 0.3, 1)' : 'transform 0.4s cubic-bezier(0.7, 0, 0.3, 1)'\n    };\n  },\n\n  item: function item(isOpen, width, right, nthChild) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      OTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      transform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      transition: isOpen ? 'transform 0.8s cubic-bezier(0.7, 0, 0.3, 1)' : 'transform 0s 0.2s cubic-bezier(0.7, 0, 0.3, 1)'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _snapsvgImporter = require('../snapsvgImporter');\n\nvar _snapsvgImporter2 = _interopRequireDefault(_snapsvgImporter);\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  svg: {\n    lib: _snapsvgImporter2['default'],\n    pathInitial: 'M-1,0h101c0,0-97.833,153.603-97.833,396.167C2.167,627.579,100,800,100,800H-1V0z',\n    pathOpen: 'M-1,0h101c0,0,0-1,0,395c0,404,0,405,0,405H-1V0z',\n    animate: function animate(path) {\n      path.animate({ path: this.pathOpen }, 400, window.mina.easeinout);\n    }\n  },\n\n  morphShape: function morphShape(isOpen, width, right) {\n    return {\n      position: 'absolute',\n      width: 120,\n      height: '100%',\n      right: right ? 'inherit' : 0,\n      left: right ? 0 : 'inherit',\n      MozTransform: right ? 'rotateY(180deg)' : '',\n      MsTransform: right ? 'rotateY(180deg)' : '',\n      OTransform: right ? 'rotateY(180deg)' : '',\n      WebkitTransform: right ? 'rotateY(180deg)' : '',\n      transform: right ? 'rotateY(180deg)' : ''\n    };\n  },\n\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: 'all 0.3s'\n    };\n  },\n\n  menu: function menu(isOpen, width, right) {\n    return {\n      position: 'fixed',\n      right: right ? 0 : 'inherit',\n      width: 180,\n      whiteSpace: 'nowrap',\n      boxSizing: 'border-box',\n      overflow: 'visible'\n    };\n  },\n\n  itemList: function itemList(isOpen, width, right) {\n    if (right) {\n      return {\n        position: 'relative',\n        left: '-110px',\n        width: '170%',\n        overflow: 'auto'\n      };\n    }\n  },\n\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      transition: isOpen ? 'all 0.3s' : 'all 0.3s 0.1s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","window.eve = require('eve')\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar mina = (function (eve) {\n    var animations = {},\n    requestAnimFrame = window.requestAnimationFrame       ||\n                       window.webkitRequestAnimationFrame ||\n                       window.mozRequestAnimationFrame    ||\n                       window.oRequestAnimationFrame      ||\n                       window.msRequestAnimationFrame     ||\n                       function (callback) {\n                           setTimeout(callback, 16, new Date().getTime());\n                           return true;\n                       },\n    requestID,\n    isArray = Array.isArray || function (a) {\n        return a instanceof Array ||\n            Object.prototype.toString.call(a) == \"[object Array]\";\n    },\n    idgen = 0,\n    idprefix = \"M\" + (+new Date).toString(36),\n    ID = function () {\n        return idprefix + (idgen++).toString(36);\n    },\n    diff = function (a, b, A, B) {\n        if (isArray(a)) {\n            res = [];\n            for (var i = 0, ii = a.length; i < ii; i++) {\n                res[i] = diff(a[i], b, A[i], B);\n            }\n            return res;\n        }\n        var dif = (A - a) / (B - b);\n        return function (bb) {\n            return a + dif * (bb - b);\n        };\n    },\n    timer = Date.now || function () {\n        return +new Date;\n    },\n    sta = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.s;\n        }\n        var ds = a.s - val;\n        a.b += a.dur * ds;\n        a.B += a.dur * ds;\n        a.s = val;\n    },\n    speed = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.spd;\n        }\n        a.spd = val;\n    },\n    duration = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.dur;\n        }\n        a.s = a.s * val / a.dur;\n        a.dur = val;\n    },\n    stopit = function () {\n        var a = this;\n        delete animations[a.id];\n        a.update();\n        eve(\"mina.stop.\" + a.id, a);\n    },\n    pause = function () {\n        var a = this;\n        if (a.pdif) {\n            return;\n        }\n        delete animations[a.id];\n        a.update();\n        a.pdif = a.get() - a.b;\n    },\n    resume = function () {\n        var a = this;\n        if (!a.pdif) {\n            return;\n        }\n        a.b = a.get() - a.pdif;\n        delete a.pdif;\n        animations[a.id] = a;\n        frame();\n    },\n    update = function () {\n        var a = this,\n            res;\n        if (isArray(a.start)) {\n            res = [];\n            for (var j = 0, jj = a.start.length; j < jj; j++) {\n                res[j] = +a.start[j] +\n                    (a.end[j] - a.start[j]) * a.easing(a.s);\n            }\n        } else {\n            res = +a.start + (a.end - a.start) * a.easing(a.s);\n        }\n        a.set(res);\n    },\n    frame = function (timeStamp) {\n        // Manual invokation?\n        if (!timeStamp) {\n            // Frame loop stopped?\n            if (!requestID) {\n                // Start frame loop...\n                requestID = requestAnimFrame(frame);\n            }\n            return;\n        }\n        var len = 0;\n        for (var i in animations) if (animations.hasOwnProperty(i)) {\n            var a = animations[i],\n                b = a.get(),\n                res;\n            len++;\n            a.s = (b - a.b) / (a.dur / a.spd);\n            if (a.s >= 1) {\n                delete animations[i];\n                a.s = 1;\n                len--;\n                (function (a) {\n                    setTimeout(function () {\n                        eve(\"mina.finish.\" + a.id, a);\n                    });\n                }(a));\n            }\n            a.update();\n        }\n        requestID = len ? requestAnimFrame(frame) : false;\n    },\n    /*\\\n     * mina\n     [ method ]\n     **\n     * Generic animation of numbers\n     **\n     - a (number) start _slave_ number\n     - A (number) end _slave_ number\n     - b (number) start _master_ number (start time in general case)\n     - B (number) end _master_ number (end time in general case)\n     - get (function) getter of _master_ number (see @mina.time)\n     - set (function) setter of _slave_ number\n     - easing (function) #optional easing function, default is @mina.linear\n     = (object) animation descriptor\n     o {\n     o         id (string) animation id,\n     o         start (number) start _slave_ number,\n     o         end (number) end _slave_ number,\n     o         b (number) start _master_ number,\n     o         s (number) animation status (0..1),\n     o         dur (number) animation duration,\n     o         spd (number) animation speed,\n     o         get (function) getter of _master_ number (see @mina.time),\n     o         set (function) setter of _slave_ number,\n     o         easing (function) easing function, default is @mina.linear,\n     o         status (function) status getter/setter,\n     o         speed (function) speed getter/setter,\n     o         duration (function) duration getter/setter,\n     o         stop (function) animation stopper\n     o         pause (function) pauses the animation\n     o         resume (function) resumes the animation\n     o         update (function) calles setter with the right value of the animation\n     o }\n    \\*/\n    mina = function (a, A, b, B, get, set, easing) {\n        var anim = {\n            id: ID(),\n            start: a,\n            end: A,\n            b: b,\n            s: 0,\n            dur: B - b,\n            spd: 1,\n            get: get,\n            set: set,\n            easing: easing || mina.linear,\n            status: sta,\n            speed: speed,\n            duration: duration,\n            stop: stopit,\n            pause: pause,\n            resume: resume,\n            update: update\n        };\n        animations[anim.id] = anim;\n        var len = 0, i;\n        for (i in animations) if (animations.hasOwnProperty(i)) {\n            len++;\n            if (len == 2) {\n                break;\n            }\n        }\n        len == 1 && frame();\n        return anim;\n    };\n    /*\\\n     * mina.time\n     [ method ]\n     **\n     * Returns the current time. Equivalent to:\n     | function () {\n     |     return (new Date).getTime();\n     | }\n    \\*/\n    mina.time = timer;\n    /*\\\n     * mina.getById\n     [ method ]\n     **\n     * Returns an animation by its id\n     - id (string) animation's id\n     = (object) See @mina\n    \\*/\n    mina.getById = function (id) {\n        return animations[id] || null;\n    };\n\n    /*\\\n     * mina.linear\n     [ method ]\n     **\n     * Default linear easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.linear = function (n) {\n        return n;\n    };\n    /*\\\n     * mina.easeout\n     [ method ]\n     **\n     * Easeout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeout = function (n) {\n        return Math.pow(n, 1.7);\n    };\n    /*\\\n     * mina.easein\n     [ method ]\n     **\n     * Easein easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easein = function (n) {\n        return Math.pow(n, .48);\n    };\n    /*\\\n     * mina.easeinout\n     [ method ]\n     **\n     * Easeinout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeinout = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        if (n == 0) {\n            return 0;\n        }\n        var q = .48 - n / 1.04,\n            Q = Math.sqrt(.1734 + q * q),\n            x = Q - q,\n            X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\n            y = -Q - q,\n            Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\n            t = X + Y + .5;\n        return (1 - t) * 3 * t * t + t * t * t;\n    };\n    /*\\\n     * mina.backin\n     [ method ]\n     **\n     * Backin easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backin = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        var s = 1.70158;\n        return n * n * ((s + 1) * n - s);\n    };\n    /*\\\n     * mina.backout\n     [ method ]\n     **\n     * Backout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backout = function (n) {\n        if (n == 0) {\n            return 0;\n        }\n        n = n - 1;\n        var s = 1.70158;\n        return n * n * ((s + 1) * n + s) + 1;\n    };\n    /*\\\n     * mina.elastic\n     [ method ]\n     **\n     * Elastic easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.elastic = function (n) {\n        if (n == !!n) {\n            return n;\n        }\n        return Math.pow(2, -10 * n) * Math.sin((n - .075) *\n            (2 * Math.PI) / .3) + 1;\n    };\n    /*\\\n     * mina.bounce\n     [ method ]\n     **\n     * Bounce easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.bounce = function (n) {\n        var s = 7.5625,\n            p = 2.75,\n            l;\n        if (n < 1 / p) {\n            l = s * n * n;\n        } else {\n            if (n < 2 / p) {\n                n -= 1.5 / p;\n                l = s * n * n + .75;\n            } else {\n                if (n < 2.5 / p) {\n                    n -= 2.25 / p;\n                    l = s * n * n + .9375;\n                } else {\n                    n -= 2.625 / p;\n                    l = s * n * n + .984375;\n                }\n            }\n        }\n        return l;\n    };\n    window.mina = mina;\n    return mina;\n})(typeof eve == \"undefined\" ? function () {} : eve);\n\n// Copyright (c) 2013 - 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar Snap = (function(root) {\nSnap.version = \"0.5.1\";\n/*\\\n * Snap\n [ method ]\n **\n * Creates a drawing surface or wraps existing SVG element.\n **\n - width (number|string) width of surface\n - height (number|string) height of surface\n * or\n - DOM (SVGElement) element to be wrapped into Snap structure\n * or\n - array (array) array of elements (will return set of elements)\n * or\n - query (string) CSS query selector\n = (object) @Element\n\\*/\nfunction Snap(w, h) {\n    if (w) {\n        if (w.nodeType) {\n            return wrap(w);\n        }\n        if (is(w, \"array\") && Snap.set) {\n            return Snap.set.apply(Snap, w);\n        }\n        if (w instanceof Element) {\n            return w;\n        }\n        if (h == null) {\n            try {\n                w = glob.doc.querySelector(String(w));\n                return wrap(w);\n            } catch (e) {\n                return null;\n            }\n        }\n    }\n    w = w == null ? \"100%\" : w;\n    h = h == null ? \"100%\" : h;\n    return new Paper(w, h);\n}\nSnap.toString = function () {\n    return \"Snap v\" + this.version;\n};\nSnap._ = {};\nvar glob = {\n    win: root.window,\n    doc: root.window.document\n};\nSnap._.glob = glob;\nvar has = \"hasOwnProperty\",\n    Str = String,\n    toFloat = parseFloat,\n    toInt = parseInt,\n    math = Math,\n    mmax = math.max,\n    mmin = math.min,\n    abs = math.abs,\n    pow = math.pow,\n    PI = math.PI,\n    round = math.round,\n    E = \"\",\n    S = \" \",\n    objectToString = Object.prototype.toString,\n    ISURL = /^url\\(['\"]?([^\\)]+?)['\"]?\\)$/i,\n    colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i,\n    bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\n    separator = Snap._.separator = /[,\\s]+/,\n    whitespace = /[\\s]/g,\n    commaSpaces = /[\\s]*,[\\s]*/,\n    hsrg = {hs: 1, rg: 1},\n    pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    tCommand = /([rstm])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\s]*,?[\\s]*/ig,\n    idgen = 0,\n    idprefix = \"S\" + (+new Date).toString(36),\n    ID = function (el) {\n        return (el && el.type ? el.type : E) + idprefix + (idgen++).toString(36);\n    },\n    xlink = \"http://www.w3.org/1999/xlink\",\n    xmlns = \"http://www.w3.org/2000/svg\",\n    hub = {},\n    /*\\\n     * Snap.url\n     [ method ]\n     **\n     * Wraps path into `\"url('<path>')\"`.\n     - value (string) path\n     = (string) wrapped path\n    \\*/\n    URL = Snap.url = function (url) {\n        return \"url('#\" + url + \"')\";\n    };\n\nfunction $(el, attr) {\n    if (attr) {\n        if (el == \"#text\") {\n            el = glob.doc.createTextNode(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (el == \"#comment\") {\n            el = glob.doc.createComment(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (typeof el == \"string\") {\n            el = $(el);\n        }\n        if (typeof attr == \"string\") {\n            if (el.nodeType == 1) {\n                if (attr.substring(0, 6) == \"xlink:\") {\n                    return el.getAttributeNS(xlink, attr.substring(6));\n                }\n                if (attr.substring(0, 4) == \"xml:\") {\n                    return el.getAttributeNS(xmlns, attr.substring(4));\n                }\n                return el.getAttribute(attr);\n            } else if (attr == \"text\") {\n                return el.nodeValue;\n            } else {\n                return null;\n            }\n        }\n        if (el.nodeType == 1) {\n            for (var key in attr) if (attr[has](key)) {\n                var val = Str(attr[key]);\n                if (val) {\n                    if (key.substring(0, 6) == \"xlink:\") {\n                        el.setAttributeNS(xlink, key.substring(6), val);\n                    } else if (key.substring(0, 4) == \"xml:\") {\n                        el.setAttributeNS(xmlns, key.substring(4), val);\n                    } else {\n                        el.setAttribute(key, val);\n                    }\n                } else {\n                    el.removeAttribute(key);\n                }\n            }\n        } else if (\"text\" in attr) {\n            el.nodeValue = attr.text;\n        }\n    } else {\n        el = glob.doc.createElementNS(xmlns, el);\n    }\n    return el;\n}\nSnap._.$ = $;\nSnap._.id = ID;\nfunction getAttrs(el) {\n    var attrs = el.attributes,\n        name,\n        out = {};\n    for (var i = 0; i < attrs.length; i++) {\n        if (attrs[i].namespaceURI == xlink) {\n            name = \"xlink:\";\n        } else {\n            name = \"\";\n        }\n        name += attrs[i].name;\n        out[name] = attrs[i].textContent;\n    }\n    return out;\n}\nfunction is(o, type) {\n    type = Str.prototype.toLowerCase.call(type);\n    if (type == \"finite\") {\n        return isFinite(o);\n    }\n    if (type == \"array\" &&\n        (o instanceof Array || Array.isArray && Array.isArray(o))) {\n        return true;\n    }\n    return  type == \"null\" && o === null ||\n            type == typeof o && o !== null ||\n            type == \"object\" && o === Object(o) ||\n            objectToString.call(o).slice(8, -1).toLowerCase() == type;\n}\n/*\\\n * Snap.format\n [ method ]\n **\n * Replaces construction of type `{<name>}` to the corresponding argument\n **\n - token (string) string to format\n - json (object) object which properties are used as a replacement\n = (string) formatted string\n > Usage\n | // this draws a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n | paper.path(Snap.format(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n |     x: 10,\n |     y: 20,\n |     dim: {\n |         width: 40,\n |         height: 50,\n |         \"negative width\": -40\n |     }\n | }));\n\\*/\nSnap.format = (function () {\n    var tokenRegex = /\\{([^\\}]+)\\}/g,\n        objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g, // matches .xxxxx or [\"xxxxx\"] to run over object properties\n        replacer = function (all, key, obj) {\n            var res = obj;\n            key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n                name = name || quotedName;\n                if (res) {\n                    if (name in res) {\n                        res = res[name];\n                    }\n                    typeof res == \"function\" && isFunc && (res = res());\n                }\n            });\n            res = (res == null || res == obj ? all : res) + \"\";\n            return res;\n        };\n    return function (str, obj) {\n        return Str(str).replace(tokenRegex, function (all, key) {\n            return replacer(all, key, obj);\n        });\n    };\n})();\nfunction clone(obj) {\n    if (typeof obj == \"function\" || Object(obj) !== obj) {\n        return obj;\n    }\n    var res = new obj.constructor;\n    for (var key in obj) if (obj[has](key)) {\n        res[key] = clone(obj[key]);\n    }\n    return res;\n}\nSnap._.clone = clone;\nfunction repush(array, item) {\n    for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n        return array.push(array.splice(i, 1)[0]);\n    }\n}\nfunction cacher(f, scope, postprocessor) {\n    function newf() {\n        var arg = Array.prototype.slice.call(arguments, 0),\n            args = arg.join(\"\\u2400\"),\n            cache = newf.cache = newf.cache || {},\n            count = newf.count = newf.count || [];\n        if (cache[has](args)) {\n            repush(count, args);\n            return postprocessor ? postprocessor(cache[args]) : cache[args];\n        }\n        count.length >= 1e3 && delete cache[count.shift()];\n        count.push(args);\n        cache[args] = f.apply(scope, arg);\n        return postprocessor ? postprocessor(cache[args]) : cache[args];\n    }\n    return newf;\n}\nSnap._.cacher = cacher;\nfunction angle(x1, y1, x2, y2, x3, y3) {\n    if (x3 == null) {\n        var x = x1 - x2,\n            y = y1 - y2;\n        if (!x && !y) {\n            return 0;\n        }\n        return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\n    } else {\n        return angle(x1, y1, x3, y3) - angle(x2, y2, x3, y3);\n    }\n}\nfunction rad(deg) {\n    return deg % 360 * PI / 180;\n}\nfunction deg(rad) {\n    return rad * 180 / PI % 360;\n}\nfunction x_y() {\n    return this.x + S + this.y;\n}\nfunction x_y_w_h() {\n    return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\n}\n\n/*\\\n * Snap.rad\n [ method ]\n **\n * Transform angle to radians\n - deg (number) angle in degrees\n = (number) angle in radians\n\\*/\nSnap.rad = rad;\n/*\\\n * Snap.deg\n [ method ]\n **\n * Transform angle to degrees\n - rad (number) angle in radians\n = (number) angle in degrees\n\\*/\nSnap.deg = deg;\n/*\\\n * Snap.sin\n [ method ]\n **\n * Equivalent to `Math.sin()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) sin\n\\*/\nSnap.sin = function (angle) {\n    return math.sin(Snap.rad(angle));\n};\n/*\\\n * Snap.tan\n [ method ]\n **\n * Equivalent to `Math.tan()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) tan\n\\*/\nSnap.tan = function (angle) {\n    return math.tan(Snap.rad(angle));\n};\n/*\\\n * Snap.cos\n [ method ]\n **\n * Equivalent to `Math.cos()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) cos\n\\*/\nSnap.cos = function (angle) {\n    return math.cos(Snap.rad(angle));\n};\n/*\\\n * Snap.asin\n [ method ]\n **\n * Equivalent to `Math.asin()` only works with degrees, not radians.\n - num (number) value\n = (number) asin in degrees\n\\*/\nSnap.asin = function (num) {\n    return Snap.deg(math.asin(num));\n};\n/*\\\n * Snap.acos\n [ method ]\n **\n * Equivalent to `Math.acos()` only works with degrees, not radians.\n - num (number) value\n = (number) acos in degrees\n\\*/\nSnap.acos = function (num) {\n    return Snap.deg(math.acos(num));\n};\n/*\\\n * Snap.atan\n [ method ]\n **\n * Equivalent to `Math.atan()` only works with degrees, not radians.\n - num (number) value\n = (number) atan in degrees\n\\*/\nSnap.atan = function (num) {\n    return Snap.deg(math.atan(num));\n};\n/*\\\n * Snap.atan2\n [ method ]\n **\n * Equivalent to `Math.atan2()` only works with degrees, not radians.\n - num (number) value\n = (number) atan2 in degrees\n\\*/\nSnap.atan2 = function (num) {\n    return Snap.deg(math.atan2(num));\n};\n/*\\\n * Snap.angle\n [ method ]\n **\n * Returns an angle between two or three points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n - x3 (number) #optional x coord of third point\n - y3 (number) #optional y coord of third point\n = (number) angle in degrees\n\\*/\nSnap.angle = angle;\n/*\\\n * Snap.len\n [ method ]\n **\n * Returns distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len = function (x1, y1, x2, y2) {\n    return Math.sqrt(Snap.len2(x1, y1, x2, y2));\n};\n/*\\\n * Snap.len2\n [ method ]\n **\n * Returns squared distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len2 = function (x1, y1, x2, y2) {\n    return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n};\n/*\\\n * Snap.closestPoint\n [ method ]\n **\n * Returns closest point to a given one on a given path.\n - path (Element) path element\n - x (number) x coord of a point\n - y (number) y coord of a point\n = (object) in format\n {\n    x (number) x coord of the point on the path\n    y (number) y coord of the point on the path\n    length (number) length of the path to the point\n    distance (number) distance from the given point to the path\n }\n\\*/\n// Copied from http://bl.ocks.org/mbostock/8027637\nSnap.closestPoint = function (path, x, y) {\n    function distance2(p) {\n        var dx = p.x - x,\n            dy = p.y - y;\n        return dx * dx + dy * dy;\n    }\n    var pathNode = path.node,\n        pathLength = pathNode.getTotalLength(),\n        precision = pathLength / pathNode.pathSegList.numberOfItems * .125,\n        best,\n        bestLength,\n        bestDistance = Infinity;\n\n    // linear scan for coarse approximation\n    for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\n        if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\n            best = scan;\n            bestLength = scanLength;\n            bestDistance = scanDistance;\n        }\n    }\n\n    // binary search for precise estimate\n    precision *= .5;\n    while (precision > .5) {\n        var before,\n            after,\n            beforeLength,\n            afterLength,\n            beforeDistance,\n            afterDistance;\n        if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\n            best = before;\n            bestLength = beforeLength;\n            bestDistance = beforeDistance;\n        } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\n            best = after;\n            bestLength = afterLength;\n            bestDistance = afterDistance;\n        } else {\n            precision *= .5;\n        }\n    }\n\n    best = {\n        x: best.x,\n        y: best.y,\n        length: bestLength,\n        distance: Math.sqrt(bestDistance)\n    };\n    return best;\n}\n/*\\\n * Snap.is\n [ method ]\n **\n * Handy replacement for the `typeof` operator\n - o (…) any object or primitive\n - type (string) name of the type, e.g., `string`, `function`, `number`, etc.\n = (boolean) `true` if given value is of given type\n\\*/\nSnap.is = is;\n/*\\\n * Snap.snapTo\n [ method ]\n **\n * Snaps given value to given grid\n - values (array|number) given array of values or step of the grid\n - value (number) value to adjust\n - tolerance (number) #optional maximum distance to the target value that would trigger the snap. Default is `10`.\n = (number) adjusted value\n\\*/\nSnap.snapTo = function (values, value, tolerance) {\n    tolerance = is(tolerance, \"finite\") ? tolerance : 10;\n    if (is(values, \"array\")) {\n        var i = values.length;\n        while (i--) if (abs(values[i] - value) <= tolerance) {\n            return values[i];\n        }\n    } else {\n        values = +values;\n        var rem = value % values;\n        if (rem < tolerance) {\n            return value - rem;\n        }\n        if (rem > values - tolerance) {\n            return value - rem + values;\n        }\n    }\n    return value;\n};\n// Colour\n/*\\\n * Snap.getRGB\n [ method ]\n **\n * Parses color string as RGB object\n - color (string) color string in one of the following formats:\n # <ul>\n #     <li>Color name (<code>red</code>, <code>green</code>, <code>cornflowerblue</code>, etc)</li>\n #     <li>#••• — shortened HTML color: (<code>#000</code>, <code>#fc0</code>, etc.)</li>\n #     <li>#•••••• — full length HTML color: (<code>#000000</code>, <code>#bd2300</code>)</li>\n #     <li>rgb(•••, •••, •••) — red, green and blue channels values: (<code>rgb(200,&nbsp;100,&nbsp;0)</code>)</li>\n #     <li>rgba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>)</li>\n #     <li>rgba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>)</li>\n #     <li>hsba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsl(•••, •••, •••) — hue, saturation and luminosity values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;0.5)</code>)</li>\n #     <li>hsla(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsla(•••%, •••%, •••%, •••%) — also with opacity</li>\n # </ul>\n * Note that `%` can be used any time: `rgb(20%, 255, 50%)`.\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) true if string can't be parsed\n o }\n\\*/\nSnap.getRGB = cacher(function (colour) {\n    if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    if (colour == \"none\") {\n        return {r: -1, g: -1, b: -1, hex: \"none\", toString: rgbtoString};\n    }\n    !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n    if (!colour) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    var res,\n        red,\n        green,\n        blue,\n        opacity,\n        t,\n        values,\n        rgb = colour.match(colourRegExp);\n    if (rgb) {\n        if (rgb[2]) {\n            blue = toInt(rgb[2].substring(5), 16);\n            green = toInt(rgb[2].substring(3, 5), 16);\n            red = toInt(rgb[2].substring(1, 3), 16);\n        }\n        if (rgb[3]) {\n            blue = toInt((t = rgb[3].charAt(3)) + t, 16);\n            green = toInt((t = rgb[3].charAt(2)) + t, 16);\n            red = toInt((t = rgb[3].charAt(1)) + t, 16);\n        }\n        if (rgb[4]) {\n            values = rgb[4].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red *= 2.55);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green *= 2.55);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue *= 2.55);\n            rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n        }\n        if (rgb[5]) {\n            values = rgb[5].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsb2rgb(red, green, blue, opacity);\n        }\n        if (rgb[6]) {\n            values = rgb[6].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsl2rgb(red, green, blue, opacity);\n        }\n        red = mmin(math.round(red), 255);\n        green = mmin(math.round(green), 255);\n        blue = mmin(math.round(blue), 255);\n        opacity = mmin(mmax(opacity, 0), 1);\n        rgb = {r: red, g: green, b: blue, toString: rgbtoString};\n        rgb.hex = \"#\" + (16777216 | blue | green << 8 | red << 16).toString(16).slice(1);\n        rgb.opacity = is(opacity, \"finite\") ? opacity : 1;\n        return rgb;\n    }\n    return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n}, Snap);\n/*\\\n * Snap.hsb\n [ method ]\n **\n * Converts HSB values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - b (number) value or brightness\n = (string) hex representation of the color\n\\*/\nSnap.hsb = cacher(function (h, s, b) {\n    return Snap.hsb2rgb(h, s, b).hex;\n});\n/*\\\n * Snap.hsl\n [ method ]\n **\n * Converts HSL values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (string) hex representation of the color\n\\*/\nSnap.hsl = cacher(function (h, s, l) {\n    return Snap.hsl2rgb(h, s, l).hex;\n});\n/*\\\n * Snap.rgb\n [ method ]\n **\n * Converts RGB values to a hex representation of the color\n - r (number) red\n - g (number) green\n - b (number) blue\n = (string) hex representation of the color\n\\*/\nSnap.rgb = cacher(function (r, g, b, o) {\n    if (is(o, \"finite\")) {\n        var round = math.round;\n        return \"rgba(\" + [round(r), round(g), round(b), +o.toFixed(2)] + \")\";\n    }\n    return \"#\" + (16777216 | b | g << 8 | r << 16).toString(16).slice(1);\n});\nvar toHex = function (color) {\n    var i = glob.doc.getElementsByTagName(\"head\")[0] || glob.doc.getElementsByTagName(\"svg\")[0],\n        red = \"rgb(255, 0, 0)\";\n    toHex = cacher(function (color) {\n        if (color.toLowerCase() == \"red\") {\n            return red;\n        }\n        i.style.color = red;\n        i.style.color = color;\n        var out = glob.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\n        return out == red ? null : out;\n    });\n    return toHex(color);\n},\nhsbtoString = function () {\n    return \"hsb(\" + [this.h, this.s, this.b] + \")\";\n},\nhsltoString = function () {\n    return \"hsl(\" + [this.h, this.s, this.l] + \")\";\n},\nrgbtoString = function () {\n    return this.opacity == 1 || this.opacity == null ?\n            this.hex :\n            \"rgba(\" + [this.r, this.g, this.b, this.opacity] + \")\";\n},\nprepareRGB = function (r, g, b) {\n    if (g == null && is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\n        b = r.b;\n        g = r.g;\n        r = r.r;\n    }\n    if (g == null && is(r, string)) {\n        var clr = Snap.getRGB(r);\n        r = clr.r;\n        g = clr.g;\n        b = clr.b;\n    }\n    if (r > 1 || g > 1 || b > 1) {\n        r /= 255;\n        g /= 255;\n        b /= 255;\n    }\n\n    return [r, g, b];\n},\npackageRGB = function (r, g, b, o) {\n    r = math.round(r * 255);\n    g = math.round(g * 255);\n    b = math.round(b * 255);\n    var rgb = {\n        r: r,\n        g: g,\n        b: b,\n        opacity: is(o, \"finite\") ? o : 1,\n        hex: Snap.rgb(r, g, b),\n        toString: rgbtoString\n    };\n    is(o, \"finite\") && (rgb.opacity = o);\n    return rgb;\n};\n/*\\\n * Snap.color\n [ method ]\n **\n * Parses the color string and returns an object featuring the color's component values\n - clr (string) color string in one of the supported formats (see @Snap.getRGB)\n = (object) Combined RGB/HSB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) `true` if string can't be parsed,\n o     h (number) hue,\n o     s (number) saturation,\n o     v (number) value (brightness),\n o     l (number) lightness\n o }\n\\*/\nSnap.color = function (clr) {\n    var rgb;\n    if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\n        rgb = Snap.hsb2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\n        rgb = Snap.hsl2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else {\n        if (is(clr, \"string\")) {\n            clr = Snap.getRGB(clr);\n        }\n        if (is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr && !(\"error\" in clr)) {\n            rgb = Snap.rgb2hsl(clr);\n            clr.h = rgb.h;\n            clr.s = rgb.s;\n            clr.l = rgb.l;\n            rgb = Snap.rgb2hsb(clr);\n            clr.v = rgb.b;\n        } else {\n            clr = {hex: \"none\"};\n            clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\n            clr.error = 1;\n        }\n    }\n    clr.toString = rgbtoString;\n    return clr;\n};\n/*\\\n * Snap.hsb2rgb\n [ method ]\n **\n * Converts HSB values to an RGB object\n - h (number) hue\n - s (number) saturation\n - v (number) value or brightness\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsb2rgb = function (h, s, v, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\n        v = h.b;\n        s = h.s;\n        o = h.o;\n        h = h.h;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = v * s;\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = v - C;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.hsl2rgb\n [ method ]\n **\n * Converts HSL values to an RGB object\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsl2rgb = function (h, s, l, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\n        l = h.l;\n        s = h.s;\n        h = h.h;\n    }\n    if (h > 1 || s > 1 || l > 1) {\n        h /= 360;\n        s /= 100;\n        l /= 100;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = 2 * s * (l < .5 ? l : 1 - l);\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = l - C / 2;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.rgb2hsb\n [ method ]\n **\n * Converts RGB values to an HSB object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSB object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     b (number) brightness\n o }\n\\*/\nSnap.rgb2hsb = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, V, C;\n    V = mmax(r, g, b);\n    C = V - mmin(r, g, b);\n    H = C == 0 ? null :\n        V == r ? (g - b) / C :\n        V == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    S = C == 0 ? 0 : C / V;\n    return {h: H, s: S, b: V, toString: hsbtoString};\n};\n/*\\\n * Snap.rgb2hsl\n [ method ]\n **\n * Converts RGB values to an HSL object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSL object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     l (number) luminosity\n o }\n\\*/\nSnap.rgb2hsl = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, L, M, m, C;\n    M = mmax(r, g, b);\n    m = mmin(r, g, b);\n    C = M - m;\n    H = C == 0 ? null :\n        M == r ? (g - b) / C :\n        M == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    L = (M + m) / 2;\n    S = C == 0 ? 0 :\n         L < .5 ? C / (2 * L) :\n                  C / (2 - 2 * L);\n    return {h: H, s: S, l: L, toString: hsltoString};\n};\n\n// Transformations\n/*\\\n * Snap.parsePathString\n [ method ]\n **\n * Utility method\n **\n * Parses given path string into an array of arrays of path segments\n - pathString (string|array) path string or array of segments (in the last case it is returned straight away)\n = (array) array of segments\n\\*/\nSnap.parsePathString = function (pathString) {\n    if (!pathString) {\n        return null;\n    }\n    var pth = Snap.path(pathString);\n    if (pth.arr) {\n        return Snap.path.clone(pth.arr);\n    }\n\n    var paramCounts = {a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0},\n        data = [];\n    if (is(pathString, \"array\") && is(pathString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(pathString);\n    }\n    if (!data.length) {\n        Str(pathString).replace(pathCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            if (name == \"m\" && params.length > 2) {\n                data.push([b].concat(params.splice(0, 2)));\n                name = \"l\";\n                b = b == \"m\" ? \"l\" : \"L\";\n            }\n            if (name == \"o\" && params.length == 1) {\n                data.push([b, params[0]]);\n            }\n            if (name == \"r\") {\n                data.push([b].concat(params));\n            } else while (params.length >= paramCounts[name]) {\n                data.push([b].concat(params.splice(0, paramCounts[name])));\n                if (!paramCounts[name]) {\n                    break;\n                }\n            }\n        });\n    }\n    data.toString = Snap.path.toString;\n    pth.arr = Snap.path.clone(data);\n    return data;\n};\n/*\\\n * Snap.parseTransformString\n [ method ]\n **\n * Utility method\n **\n * Parses given transform string into an array of transformations\n - TString (string|array) transform string or array of transformations (in the last case it is returned straight away)\n = (array) array of transformations\n\\*/\nvar parseTransformString = Snap.parseTransformString = function (TString) {\n    if (!TString) {\n        return null;\n    }\n    var paramCounts = {r: 3, s: 4, t: 2, m: 6},\n        data = [];\n    if (is(TString, \"array\") && is(TString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(TString);\n    }\n    if (!data.length) {\n        Str(TString).replace(tCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            data.push([b].concat(params));\n        });\n    }\n    data.toString = Snap.path.toString;\n    return data;\n};\nfunction svgTransform2string(tstr) {\n    var res = [];\n    tstr = tstr.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g, function (all, name, params) {\n        params = params.split(/\\s*,\\s*|\\s+/);\n        if (name == \"rotate\" && params.length == 1) {\n            params.push(0, 0);\n        }\n        if (name == \"scale\") {\n            if (params.length > 2) {\n                params = params.slice(0, 2);\n            } else if (params.length == 2) {\n                params.push(0, 0);\n            }\n            if (params.length == 1) {\n                params.push(params[0], 0, 0);\n            }\n        }\n        if (name == \"skewX\") {\n            res.push([\"m\", 1, 0, math.tan(rad(params[0])), 1, 0, 0]);\n        } else if (name == \"skewY\") {\n            res.push([\"m\", 1, math.tan(rad(params[0])), 0, 1, 0, 0]);\n        } else {\n            res.push([name.charAt(0)].concat(params));\n        }\n        return all;\n    });\n    return res;\n}\nSnap._.svgTransform2string = svgTransform2string;\nSnap._.rgTransform = /^[a-z][\\s]*-?\\.?\\d/i;\nfunction transform2matrix(tstr, bbox) {\n    var tdata = parseTransformString(tstr),\n        m = new Snap.Matrix;\n    if (tdata) {\n        for (var i = 0, ii = tdata.length; i < ii; i++) {\n            var t = tdata[i],\n                tlen = t.length,\n                command = Str(t[0]).toLowerCase(),\n                absolute = t[0] != command,\n                inver = absolute ? m.invert() : 0,\n                x1,\n                y1,\n                x2,\n                y2,\n                bb;\n            if (command == \"t\" && tlen == 2){\n                m.translate(t[1], 0);\n            } else if (command == \"t\" && tlen == 3) {\n                if (absolute) {\n                    x1 = inver.x(0, 0);\n                    y1 = inver.y(0, 0);\n                    x2 = inver.x(t[1], t[2]);\n                    y2 = inver.y(t[1], t[2]);\n                    m.translate(x2 - x1, y2 - y1);\n                } else {\n                    m.translate(t[1], t[2]);\n                }\n            } else if (command == \"r\") {\n                if (tlen == 2) {\n                    bb = bb || bbox;\n                    m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.rotate(t[1], x2, y2);\n                    } else {\n                        m.rotate(t[1], t[2], t[3]);\n                    }\n                }\n            } else if (command == \"s\") {\n                if (tlen == 2 || tlen == 3) {\n                    bb = bb || bbox;\n                    m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.scale(t[1], t[1], x2, y2);\n                    } else {\n                        m.scale(t[1], t[1], t[2], t[3]);\n                    }\n                } else if (tlen == 5) {\n                    if (absolute) {\n                        x2 = inver.x(t[3], t[4]);\n                        y2 = inver.y(t[3], t[4]);\n                        m.scale(t[1], t[2], x2, y2);\n                    } else {\n                        m.scale(t[1], t[2], t[3], t[4]);\n                    }\n                }\n            } else if (command == \"m\" && tlen == 7) {\n                m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\n            }\n        }\n    }\n    return m;\n}\nSnap._.transform2matrix = transform2matrix;\nSnap._unit2px = unit2px;\nvar contains = glob.doc.contains || glob.doc.compareDocumentPosition ?\n    function (a, b) {\n        var adown = a.nodeType == 9 ? a.documentElement : a,\n            bup = b && b.parentNode;\n            return a == bup || !!(bup && bup.nodeType == 1 && (\n                adown.contains ?\n                    adown.contains(bup) :\n                    a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16\n            ));\n    } :\n    function (a, b) {\n        if (b) {\n            while (b) {\n                b = b.parentNode;\n                if (b == a) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\nfunction getSomeDefs(el) {\n    var p = el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) ||\n            el.node.parentNode && wrap(el.node.parentNode) ||\n            Snap.select(\"svg\") ||\n            Snap(0, 0),\n        pdefs = p.select(\"defs\"),\n        defs  = pdefs == null ? false : pdefs.node;\n    if (!defs) {\n        defs = make(\"defs\", p.node).node;\n    }\n    return defs;\n}\nfunction getSomeSVG(el) {\n    return el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || Snap.select(\"svg\");\n}\nSnap._.getSomeDefs = getSomeDefs;\nSnap._.getSomeSVG = getSomeSVG;\nfunction unit2px(el, name, value) {\n    var svg = getSomeSVG(el).node,\n        out = {},\n        mgr = svg.querySelector(\".svg---mgr\");\n    if (!mgr) {\n        mgr = $(\"rect\");\n        $(mgr, {x: -9e9, y: -9e9, width: 10, height: 10, \"class\": \"svg---mgr\", fill: \"none\"});\n        svg.appendChild(mgr);\n    }\n    function getW(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {width: val});\n        try {\n            return mgr.getBBox().width;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function getH(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {height: val});\n        try {\n            return mgr.getBBox().height;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function set(nam, f) {\n        if (name == null) {\n            out[nam] = f(el.attr(nam) || 0);\n        } else if (nam == name) {\n            out = f(value == null ? el.attr(nam) || 0 : value);\n        }\n    }\n    switch (el.type) {\n        case \"rect\":\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        case \"image\":\n            set(\"width\", getW);\n            set(\"height\", getH);\n        case \"text\":\n            set(\"x\", getW);\n            set(\"y\", getH);\n        break;\n        case \"circle\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"r\", getW);\n        break;\n        case \"ellipse\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        break;\n        case \"line\":\n            set(\"x1\", getW);\n            set(\"x2\", getW);\n            set(\"y1\", getH);\n            set(\"y2\", getH);\n        break;\n        case \"marker\":\n            set(\"refX\", getW);\n            set(\"markerWidth\", getW);\n            set(\"refY\", getH);\n            set(\"markerHeight\", getH);\n        break;\n        case \"radialGradient\":\n            set(\"fx\", getW);\n            set(\"fy\", getH);\n        break;\n        case \"tspan\":\n            set(\"dx\", getW);\n            set(\"dy\", getH);\n        break;\n        default:\n            set(name, getW);\n    }\n    svg.removeChild(mgr);\n    return out;\n}\n/*\\\n * Snap.select\n [ method ]\n **\n * Wraps a DOM element specified by CSS selector as @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.select = function (query) {\n    query = Str(query).replace(/([^\\\\]):/g, \"$1\\\\:\");\n    return wrap(glob.doc.querySelector(query));\n};\n/*\\\n * Snap.selectAll\n [ method ]\n **\n * Wraps DOM elements specified by CSS selector as set or array of @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.selectAll = function (query) {\n    var nodelist = glob.doc.querySelectorAll(query),\n        set = (Snap.set || Array)();\n    for (var i = 0; i < nodelist.length; i++) {\n        set.push(wrap(nodelist[i]));\n    }\n    return set;\n};\n\nfunction add2group(list) {\n    if (!is(list, \"array\")) {\n        list = Array.prototype.slice.call(arguments, 0);\n    }\n    var i = 0,\n        j = 0,\n        node = this.node;\n    while (this[i]) delete this[i++];\n    for (i = 0; i < list.length; i++) {\n        if (list[i].type == \"set\") {\n            list[i].forEach(function (el) {\n                node.appendChild(el.node);\n            });\n        } else {\n            node.appendChild(list[i].node);\n        }\n    }\n    var children = node.childNodes;\n    for (i = 0; i < children.length; i++) {\n        this[j++] = wrap(children[i]);\n    }\n    return this;\n}\n// Hub garbage collector every 10s\nsetInterval(function () {\n    for (var key in hub) if (hub[has](key)) {\n        var el = hub[key],\n            node = el.node;\n        if (el.type != \"svg\" && !node.ownerSVGElement || el.type == \"svg\" && (!node.parentNode || \"ownerSVGElement\" in node.parentNode && !node.ownerSVGElement)) {\n            delete hub[key];\n        }\n    }\n}, 1e4);\nfunction Element(el) {\n    if (el.snap in hub) {\n        return hub[el.snap];\n    }\n    var svg;\n    try {\n        svg = el.ownerSVGElement;\n    } catch(e) {}\n    /*\\\n     * Element.node\n     [ property (object) ]\n     **\n     * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\n     > Usage\n     | // draw a circle at coordinate 10,10 with radius of 10\n     | var c = paper.circle(10, 10, 10);\n     | c.node.onclick = function () {\n     |     c.attr(\"fill\", \"red\");\n     | };\n    \\*/\n    this.node = el;\n    if (svg) {\n        this.paper = new Paper(svg);\n    }\n    /*\\\n     * Element.type\n     [ property (string) ]\n     **\n     * SVG tag name of the given element.\n    \\*/\n    this.type = el.tagName || el.nodeName;\n    var id = this.id = ID(this);\n    this.anims = {};\n    this._ = {\n        transform: []\n    };\n    el.snap = id;\n    hub[id] = this;\n    if (this.type == \"g\") {\n        this.add = add2group;\n    }\n    if (this.type in {g: 1, mask: 1, pattern: 1, symbol: 1}) {\n        for (var method in Paper.prototype) if (Paper.prototype[has](method)) {\n            this[method] = Paper.prototype[method];\n        }\n    }\n}\n   /*\\\n     * Element.attr\n     [ method ]\n     **\n     * Gets or sets given attributes of the element.\n     **\n     - params (object) contains key-value pairs of attributes you want to set\n     * or\n     - param (string) name of the attribute\n     = (Element) the current element\n     * or\n     = (string) value of attribute\n     > Usage\n     | el.attr({\n     |     fill: \"#fc0\",\n     |     stroke: \"#000\",\n     |     strokeWidth: 2, // CamelCase...\n     |     \"fill-opacity\": 0.5, // or dash-separated names\n     |     width: \"*=2\" // prefixed values\n     | });\n     | console.log(el.attr(\"fill\")); // #fc0\n     * Prefixed values in format `\"+=10\"` supported. All four operations\n     * (`+`, `-`, `*` and `/`) could be used. Optionally you can use units for `+`\n     * and `-`: `\"+=2em\"`.\n    \\*/\n    Element.prototype.attr = function (params, value) {\n        var el = this,\n            node = el.node;\n        if (!params) {\n            if (node.nodeType != 1) {\n                return {\n                    text: node.nodeValue\n                };\n            }\n            var attr = node.attributes,\n                out = {};\n            for (var i = 0, ii = attr.length; i < ii; i++) {\n                out[attr[i].nodeName] = attr[i].nodeValue;\n            }\n            return out;\n        }\n        if (is(params, \"string\")) {\n            if (arguments.length > 1) {\n                var json = {};\n                json[params] = value;\n                params = json;\n            } else {\n                return eve(\"snap.util.getattr.\" + params, el).firstDefined();\n            }\n        }\n        for (var att in params) {\n            if (params[has](att)) {\n                eve(\"snap.util.attr.\" + att, el, params[att]);\n            }\n        }\n        return el;\n    };\n/*\\\n * Snap.parse\n [ method ]\n **\n * Parses SVG fragment and converts it into a @Fragment\n **\n - svg (string) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.parse = function (svg) {\n    var f = glob.doc.createDocumentFragment(),\n        full = true,\n        div = glob.doc.createElement(\"div\");\n    svg = Str(svg);\n    if (!svg.match(/^\\s*<\\s*svg(?:\\s|>)/)) {\n        svg = \"<svg>\" + svg + \"</svg>\";\n        full = false;\n    }\n    div.innerHTML = svg;\n    svg = div.getElementsByTagName(\"svg\")[0];\n    if (svg) {\n        if (full) {\n            f = svg;\n        } else {\n            while (svg.firstChild) {\n                f.appendChild(svg.firstChild);\n            }\n        }\n    }\n    return new Fragment(f);\n};\nfunction Fragment(frag) {\n    this.node = frag;\n}\n/*\\\n * Snap.fragment\n [ method ]\n **\n * Creates a DOM fragment from a given list of elements or strings\n **\n - varargs (…) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.fragment = function () {\n    var args = Array.prototype.slice.call(arguments, 0),\n        f = glob.doc.createDocumentFragment();\n    for (var i = 0, ii = args.length; i < ii; i++) {\n        var item = args[i];\n        if (item.node && item.node.nodeType) {\n            f.appendChild(item.node);\n        }\n        if (item.nodeType) {\n            f.appendChild(item);\n        }\n        if (typeof item == \"string\") {\n            f.appendChild(Snap.parse(item).node);\n        }\n    }\n    return new Fragment(f);\n};\n\nfunction make(name, parent) {\n    var res = $(name);\n    parent.appendChild(res);\n    var el = wrap(res);\n    return el;\n}\nfunction Paper(w, h) {\n    var res,\n        desc,\n        defs,\n        proto = Paper.prototype;\n    if (w && w.tagName && w.tagName.toLowerCase() == \"svg\") {\n        if (w.snap in hub) {\n            return hub[w.snap];\n        }\n        var doc = w.ownerDocument;\n        res = new Element(w);\n        desc = w.getElementsByTagName(\"desc\")[0];\n        defs = w.getElementsByTagName(\"defs\")[0];\n        if (!desc) {\n            desc = $(\"desc\");\n            desc.appendChild(doc.createTextNode(\"Created with Snap\"));\n            res.node.appendChild(desc);\n        }\n        if (!defs) {\n            defs = $(\"defs\");\n            res.node.appendChild(defs);\n        }\n        res.defs = defs;\n        for (var key in proto) if (proto[has](key)) {\n            res[key] = proto[key];\n        }\n        res.paper = res.root = res;\n    } else {\n        res = make(\"svg\", glob.doc.body);\n        $(res.node, {\n            height: h,\n            version: 1.1,\n            width: w,\n            xmlns: xmlns\n        });\n    }\n    return res;\n}\nfunction wrap(dom) {\n    if (!dom) {\n        return dom;\n    }\n    if (dom instanceof Element || dom instanceof Fragment) {\n        return dom;\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"svg\") {\n        return new Paper(dom);\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"object\" && dom.type == \"image/svg+xml\") {\n        return new Paper(dom.contentDocument.getElementsByTagName(\"svg\")[0]);\n    }\n    return new Element(dom);\n}\n\nSnap._.make = make;\nSnap._.wrap = wrap;\n/*\\\n * Paper.el\n [ method ]\n **\n * Creates an element on paper with a given name and no attributes\n **\n - name (string) tag name\n - attr (object) attributes\n = (Element) the current element\n > Usage\n | var c = paper.circle(10, 10, 10); // is the same as...\n | var c = paper.el(\"circle\").attr({\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n | // and the same as\n | var c = paper.el(\"circle\", {\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n\\*/\nPaper.prototype.el = function (name, attr) {\n    var el = make(name, this.node);\n    attr && el.attr(attr);\n    return el;\n};\n/*\\\n * Element.children\n [ method ]\n **\n * Returns array of all the children of the element.\n = (array) array of Elements\n\\*/\nElement.prototype.children = function () {\n    var out = [],\n        ch = this.node.childNodes;\n    for (var i = 0, ii = ch.length; i < ii; i++) {\n        out[i] = Snap(ch[i]);\n    }\n    return out;\n};\nfunction jsonFiller(root, o) {\n    for (var i = 0, ii = root.length; i < ii; i++) {\n        var item = {\n                type: root[i].type,\n                attr: root[i].attr()\n            },\n            children = root[i].children();\n        o.push(item);\n        if (children.length) {\n            jsonFiller(children, item.childNodes = []);\n        }\n    }\n}\n/*\\\n * Element.toJSON\n [ method ]\n **\n * Returns object representation of the given element and all its children.\n = (object) in format\n o {\n o     type (string) this.type,\n o     attr (object) attributes map,\n o     childNodes (array) optional array of children in the same format\n o }\n\\*/\nElement.prototype.toJSON = function () {\n    var out = [];\n    jsonFiller([this], out);\n    return out[0];\n};\n// default\neve.on(\"snap.util.getattr\", function () {\n    var att = eve.nt();\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    var css = att.replace(/[A-Z]/g, function (letter) {\n        return \"-\" + letter.toLowerCase();\n    });\n    if (cssAttr[has](css)) {\n        return this.node.ownerDocument.defaultView.getComputedStyle(this.node, null).getPropertyValue(css);\n    } else {\n        return $(this.node, att);\n    }\n});\nvar cssAttr = {\n    \"alignment-baseline\": 0,\n    \"baseline-shift\": 0,\n    \"clip\": 0,\n    \"clip-path\": 0,\n    \"clip-rule\": 0,\n    \"color\": 0,\n    \"color-interpolation\": 0,\n    \"color-interpolation-filters\": 0,\n    \"color-profile\": 0,\n    \"color-rendering\": 0,\n    \"cursor\": 0,\n    \"direction\": 0,\n    \"display\": 0,\n    \"dominant-baseline\": 0,\n    \"enable-background\": 0,\n    \"fill\": 0,\n    \"fill-opacity\": 0,\n    \"fill-rule\": 0,\n    \"filter\": 0,\n    \"flood-color\": 0,\n    \"flood-opacity\": 0,\n    \"font\": 0,\n    \"font-family\": 0,\n    \"font-size\": 0,\n    \"font-size-adjust\": 0,\n    \"font-stretch\": 0,\n    \"font-style\": 0,\n    \"font-variant\": 0,\n    \"font-weight\": 0,\n    \"glyph-orientation-horizontal\": 0,\n    \"glyph-orientation-vertical\": 0,\n    \"image-rendering\": 0,\n    \"kerning\": 0,\n    \"letter-spacing\": 0,\n    \"lighting-color\": 0,\n    \"marker\": 0,\n    \"marker-end\": 0,\n    \"marker-mid\": 0,\n    \"marker-start\": 0,\n    \"mask\": 0,\n    \"opacity\": 0,\n    \"overflow\": 0,\n    \"pointer-events\": 0,\n    \"shape-rendering\": 0,\n    \"stop-color\": 0,\n    \"stop-opacity\": 0,\n    \"stroke\": 0,\n    \"stroke-dasharray\": 0,\n    \"stroke-dashoffset\": 0,\n    \"stroke-linecap\": 0,\n    \"stroke-linejoin\": 0,\n    \"stroke-miterlimit\": 0,\n    \"stroke-opacity\": 0,\n    \"stroke-width\": 0,\n    \"text-anchor\": 0,\n    \"text-decoration\": 0,\n    \"text-rendering\": 0,\n    \"unicode-bidi\": 0,\n    \"visibility\": 0,\n    \"word-spacing\": 0,\n    \"writing-mode\": 0\n};\n\neve.on(\"snap.util.attr\", function (value) {\n    var att = eve.nt(),\n        attr = {};\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    attr[att] = value;\n    var style = att.replace(/-(\\w)/gi, function (all, letter) {\n            return letter.toUpperCase();\n        }),\n        css = att.replace(/[A-Z]/g, function (letter) {\n            return \"-\" + letter.toLowerCase();\n        });\n    if (cssAttr[has](css)) {\n        this.node.style[style] = value == null ? E : value;\n    } else {\n        $(this.node, attr);\n    }\n});\n(function (proto) {}(Paper.prototype));\n\n// simple ajax\n/*\\\n * Snap.ajax\n [ method ]\n **\n * Simple implementation of Ajax\n **\n - url (string) URL\n - postData (object|string) data for post request\n - callback (function) callback\n - scope (object) #optional scope of callback\n * or\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n = (XMLHttpRequest) the XMLHttpRequest object, just in case\n\\*/\nSnap.ajax = function (url, postData, callback, scope){\n    var req = new XMLHttpRequest,\n        id = ID();\n    if (req) {\n        if (is(postData, \"function\")) {\n            scope = callback;\n            callback = postData;\n            postData = null;\n        } else if (is(postData, \"object\")) {\n            var pd = [];\n            for (var key in postData) if (postData.hasOwnProperty(key)) {\n                pd.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(postData[key]));\n            }\n            postData = pd.join(\"&\");\n        }\n        req.open(postData ? \"POST\" : \"GET\", url, true);\n        if (postData) {\n            req.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n            req.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n        }\n        if (callback) {\n            eve.once(\"snap.ajax.\" + id + \".0\", callback);\n            eve.once(\"snap.ajax.\" + id + \".200\", callback);\n            eve.once(\"snap.ajax.\" + id + \".304\", callback);\n        }\n        req.onreadystatechange = function() {\n            if (req.readyState != 4) return;\n            eve(\"snap.ajax.\" + id + \".\" + req.status, scope, req);\n        };\n        if (req.readyState == 4) {\n            return req;\n        }\n        req.send(postData);\n        return req;\n    }\n};\n/*\\\n * Snap.load\n [ method ]\n **\n * Loads external SVG file as a @Fragment (see @Snap.ajax for more advanced AJAX)\n **\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n\\*/\nSnap.load = function (url, callback, scope) {\n    Snap.ajax(url, function (req) {\n        var f = Snap.parse(req.responseText);\n        scope ? callback.call(scope, f) : callback(f);\n    });\n};\nvar getOffset = function (elem) {\n    var box = elem.getBoundingClientRect(),\n        doc = elem.ownerDocument,\n        body = doc.body,\n        docElem = doc.documentElement,\n        clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,\n        top  = box.top  + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop ) - clientTop,\n        left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\n    return {\n        y: top,\n        x: left\n    };\n};\n/*\\\n * Snap.getElementByPoint\n [ method ]\n **\n * Returns you topmost element under given point.\n **\n = (object) Snap element object\n - x (number) x coordinate from the top left corner of the window\n - y (number) y coordinate from the top left corner of the window\n > Usage\n | Snap.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\n\\*/\nSnap.getElementByPoint = function (x, y) {\n    var paper = this,\n        svg = paper.canvas,\n        target = glob.doc.elementFromPoint(x, y);\n    if (glob.win.opera && target.tagName == \"svg\") {\n        var so = getOffset(target),\n            sr = target.createSVGRect();\n        sr.x = x - so.x;\n        sr.y = y - so.y;\n        sr.width = sr.height = 1;\n        var hits = target.getIntersectionList(sr, null);\n        if (hits.length) {\n            target = hits[hits.length - 1];\n        }\n    }\n    if (!target) {\n        return null;\n    }\n    return wrap(target);\n};\n/*\\\n * Snap.plugin\n [ method ]\n **\n * Let you write plugins. You pass in a function with five arguments, like this:\n | Snap.plugin(function (Snap, Element, Paper, global, Fragment) {\n |     Snap.newmethod = function () {};\n |     Element.prototype.newmethod = function () {};\n |     Paper.prototype.newmethod = function () {};\n | });\n * Inside the function you have access to all main objects (and their\n * prototypes). This allow you to extend anything you want.\n **\n - f (function) your plugin body\n\\*/\nSnap.plugin = function (f) {\n    f(Snap, Element, Paper, glob, Fragment);\n};\nglob.win.Snap = Snap;\nreturn Snap;\n}(window || this));\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        unit2px = Snap._unit2px,\n        $ = Snap._.$,\n        make = Snap._.make,\n        getSomeDefs = Snap._.getSomeDefs,\n        has = \"hasOwnProperty\",\n        wrap = Snap._.wrap;\n    /*\\\n     * Element.getBBox\n     [ method ]\n     **\n     * Returns the bounding box descriptor for the given element\n     **\n     = (object) bounding box descriptor:\n     o {\n     o     cx: (number) x of the center,\n     o     cy: (number) x of the center,\n     o     h: (number) height,\n     o     height: (number) height,\n     o     path: (string) path command for the box,\n     o     r0: (number) radius of a circle that fully encloses the box,\n     o     r1: (number) radius of the smallest circle that can be enclosed,\n     o     r2: (number) radius of the largest circle that can be enclosed,\n     o     vb: (string) box as a viewbox command,\n     o     w: (number) width,\n     o     width: (number) width,\n     o     x2: (number) x of the right side,\n     o     x: (number) x of the left side,\n     o     y2: (number) y of the bottom edge,\n     o     y: (number) y of the top edge\n     o }\n    \\*/\n    elproto.getBBox = function (isWithoutTransform) {\n        if (this.type == \"tspan\") {\n            return Snap._.box(this.node.getClientRects().item(0));\n        }\n        if (!Snap.Matrix || !Snap.path) {\n            return this.node.getBBox();\n        }\n        var el = this,\n            m = new Snap.Matrix;\n        if (el.removed) {\n            return Snap._.box();\n        }\n        while (el.type == \"use\") {\n            if (!isWithoutTransform) {\n                m = m.add(el.transform().localMatrix.translate(el.attr(\"x\") || 0, el.attr(\"y\") || 0));\n            }\n            if (el.original) {\n                el = el.original;\n            } else {\n                var href = el.attr(\"xlink:href\");\n                el = el.original = el.node.ownerDocument.getElementById(href.substring(href.indexOf(\"#\") + 1));\n            }\n        }\n        var _ = el._,\n            pathfinder = Snap.path.get[el.type] || Snap.path.get.deflt;\n        try {\n            if (isWithoutTransform) {\n                _.bboxwt = pathfinder ? Snap.path.getBBox(el.realPath = pathfinder(el)) : Snap._.box(el.node.getBBox());\n                return Snap._.box(_.bboxwt);\n            } else {\n                el.realPath = pathfinder(el);\n                el.matrix = el.transform().localMatrix;\n                _.bbox = Snap.path.getBBox(Snap.path.map(el.realPath, m.add(el.matrix)));\n                return Snap._.box(_.bbox);\n            }\n        } catch (e) {\n            // Firefox doesn’t give you bbox of hidden element\n            return Snap._.box();\n        }\n    };\n    var propString = function () {\n        return this.string;\n    };\n    function extractTransform(el, tstr) {\n        if (tstr == null) {\n            var doReturn = true;\n            if (el.type == \"linearGradient\" || el.type == \"radialGradient\") {\n                tstr = el.node.getAttribute(\"gradientTransform\");\n            } else if (el.type == \"pattern\") {\n                tstr = el.node.getAttribute(\"patternTransform\");\n            } else {\n                tstr = el.node.getAttribute(\"transform\");\n            }\n            if (!tstr) {\n                return new Snap.Matrix;\n            }\n            tstr = Snap._.svgTransform2string(tstr);\n        } else {\n            if (!Snap._.rgTransform.test(tstr)) {\n                tstr = Snap._.svgTransform2string(tstr);\n            } else {\n                tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || \"\");\n            }\n            if (is(tstr, \"array\")) {\n                tstr = Snap.path ? Snap.path.toString.call(tstr) : Str(tstr);\n            }\n            el._.transform = tstr;\n        }\n        var m = Snap._.transform2matrix(tstr, el.getBBox(1));\n        if (doReturn) {\n            return m;\n        } else {\n            el.matrix = m;\n        }\n    }\n    /*\\\n     * Element.transform\n     [ method ]\n     **\n     * Gets or sets transformation of the element\n     **\n     - tstr (string) transform string in Snap or SVG format\n     = (Element) the current element\n     * or\n     = (object) transformation descriptor:\n     o {\n     o     string (string) transform string,\n     o     globalMatrix (Matrix) matrix of all transformations applied to element or its parents,\n     o     localMatrix (Matrix) matrix of transformations applied only to the element,\n     o     diffMatrix (Matrix) matrix of difference between global and local transformations,\n     o     global (string) global transformation as string,\n     o     local (string) local transformation as string,\n     o     toString (function) returns `string` property\n     o }\n    \\*/\n    elproto.transform = function (tstr) {\n        var _ = this._;\n        if (tstr == null) {\n            var papa = this,\n                global = new Snap.Matrix(this.node.getCTM()),\n                local = extractTransform(this),\n                ms = [local],\n                m = new Snap.Matrix,\n                i,\n                localString = local.toTransformString(),\n                string = Str(local) == Str(this.matrix) ?\n                            Str(_.transform) : localString;\n            while (papa.type != \"svg\" && (papa = papa.parent())) {\n                ms.push(extractTransform(papa));\n            }\n            i = ms.length;\n            while (i--) {\n                m.add(ms[i]);\n            }\n            return {\n                string: string,\n                globalMatrix: global,\n                totalMatrix: m,\n                localMatrix: local,\n                diffMatrix: global.clone().add(local.invert()),\n                global: global.toTransformString(),\n                total: m.toTransformString(),\n                local: localString,\n                toString: propString\n            };\n        }\n        if (tstr instanceof Snap.Matrix) {\n            this.matrix = tstr;\n            this._.transform = tstr.toTransformString();\n        } else {\n            extractTransform(this, tstr);\n        }\n\n        if (this.node) {\n            if (this.type == \"linearGradient\" || this.type == \"radialGradient\") {\n                $(this.node, {gradientTransform: this.matrix});\n            } else if (this.type == \"pattern\") {\n                $(this.node, {patternTransform: this.matrix});\n            } else {\n                $(this.node, {transform: this.matrix});\n            }\n        }\n\n        return this;\n    };\n    /*\\\n     * Element.parent\n     [ method ]\n     **\n     * Returns the element's parent\n     **\n     = (Element) the parent element\n    \\*/\n    elproto.parent = function () {\n        return wrap(this.node.parentNode);\n    };\n    /*\\\n     * Element.append\n     [ method ]\n     **\n     * Appends the given element to current one\n     **\n     - el (Element|Set) element to append\n     = (Element) the parent element\n    \\*/\n    /*\\\n     * Element.add\n     [ method ]\n     **\n     * See @Element.append\n    \\*/\n    elproto.append = elproto.add = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this;\n                el.forEach(function (el) {\n                    it.add(el);\n                });\n                return this;\n            }\n            el = wrap(el);\n            this.node.appendChild(el.node);\n            el.paper = this.paper;\n        }\n        return this;\n    };\n    /*\\\n     * Element.appendTo\n     [ method ]\n     **\n     * Appends the current element to the given one\n     **\n     - el (Element) parent element to append to\n     = (Element) the child element\n    \\*/\n    elproto.appendTo = function (el) {\n        if (el) {\n            el = wrap(el);\n            el.append(this);\n        }\n        return this;\n    };\n    /*\\\n     * Element.prepend\n     [ method ]\n     **\n     * Prepends the given element to the current one\n     **\n     - el (Element) element to prepend\n     = (Element) the parent element\n    \\*/\n    elproto.prepend = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this,\n                    first;\n                el.forEach(function (el) {\n                    if (first) {\n                        first.after(el);\n                    } else {\n                        it.prepend(el);\n                    }\n                    first = el;\n                });\n                return this;\n            }\n            el = wrap(el);\n            var parent = el.parent();\n            this.node.insertBefore(el.node, this.node.firstChild);\n            this.add && this.add();\n            el.paper = this.paper;\n            this.parent() && this.parent().add();\n            parent && parent.add();\n        }\n        return this;\n    };\n    /*\\\n     * Element.prependTo\n     [ method ]\n     **\n     * Prepends the current element to the given one\n     **\n     - el (Element) parent element to prepend to\n     = (Element) the child element\n    \\*/\n    elproto.prependTo = function (el) {\n        el = wrap(el);\n        el.prepend(this);\n        return this;\n    };\n    /*\\\n     * Element.before\n     [ method ]\n     **\n     * Inserts given element before the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.before = function (el) {\n        if (el.type == \"set\") {\n            var it = this;\n            el.forEach(function (el) {\n                var parent = el.parent();\n                it.node.parentNode.insertBefore(el.node, it.node);\n                parent && parent.add();\n            });\n            this.parent().add();\n            return this;\n        }\n        el = wrap(el);\n        var parent = el.parent();\n        this.node.parentNode.insertBefore(el.node, this.node);\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.after\n     [ method ]\n     **\n     * Inserts given element after the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.after = function (el) {\n        el = wrap(el);\n        var parent = el.parent();\n        if (this.node.nextSibling) {\n            this.node.parentNode.insertBefore(el.node, this.node.nextSibling);\n        } else {\n            this.node.parentNode.appendChild(el.node);\n        }\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.insertBefore\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertBefore = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.insertAfter\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertAfter = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node.nextSibling);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.remove\n     [ method ]\n     **\n     * Removes element from the DOM\n     = (Element) the detached element\n    \\*/\n    elproto.remove = function () {\n        var parent = this.parent();\n        this.node.parentNode && this.node.parentNode.removeChild(this.node);\n        delete this.paper;\n        this.removed = true;\n        parent && parent.add();\n        return this;\n    };\n    /*\\\n     * Element.select\n     [ method ]\n     **\n     * Gathers the nested @Element matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Element) result of query selection\n    \\*/\n    elproto.select = function (query) {\n        return wrap(this.node.querySelector(query));\n    };\n    /*\\\n     * Element.selectAll\n     [ method ]\n     **\n     * Gathers nested @Element objects matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Set|array) result of query selection\n    \\*/\n    elproto.selectAll = function (query) {\n        var nodelist = this.node.querySelectorAll(query),\n            set = (Snap.set || Array)();\n        for (var i = 0; i < nodelist.length; i++) {\n            set.push(wrap(nodelist[i]));\n        }\n        return set;\n    };\n    /*\\\n     * Element.asPX\n     [ method ]\n     **\n     * Returns given attribute of the element as a `px` value (not %, em, etc.)\n     **\n     - attr (string) attribute name\n     - value (string) #optional attribute value\n     = (Element) result of query selection\n    \\*/\n    elproto.asPX = function (attr, value) {\n        if (value == null) {\n            value = this.attr(attr);\n        }\n        return +unit2px(this, attr, value);\n    };\n    // SIERRA Element.use(): I suggest adding a note about how to access the original element the returned <use> instantiates. It's a part of SVG with which ordinary web developers may be least familiar.\n    /*\\\n     * Element.use\n     [ method ]\n     **\n     * Creates a `<use>` element linked to the current element\n     **\n     = (Element) the `<use>` element\n    \\*/\n    elproto.use = function () {\n        var use,\n            id = this.node.id;\n        if (!id) {\n            id = this.id;\n            $(this.node, {\n                id: id\n            });\n        }\n        if (this.type == \"linearGradient\" || this.type == \"radialGradient\" ||\n            this.type == \"pattern\") {\n            use = make(this.type, this.node.parentNode);\n        } else {\n            use = make(\"use\", this.node.parentNode);\n        }\n        $(use.node, {\n            \"xlink:href\": \"#\" + id\n        });\n        use.original = this;\n        return use;\n    };\n    function fixids(el) {\n        var els = el.selectAll(\"*\"),\n            it,\n            url = /^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/,\n            ids = [],\n            uses = {};\n        function urltest(it, name) {\n            var val = $(it.node, name);\n            val = val && val.match(url);\n            val = val && val[2];\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    var attr = {};\n                    attr[name] = Snap.url(id);\n                    $(it.node, attr);\n                });\n            }\n        }\n        function linktest(it) {\n            var val = $(it.node, \"xlink:href\");\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    it.attr(\"xlink:href\", \"#\" + id);\n                });\n            }\n        }\n        for (var i = 0, ii = els.length; i < ii; i++) {\n            it = els[i];\n            urltest(it, \"fill\");\n            urltest(it, \"stroke\");\n            urltest(it, \"filter\");\n            urltest(it, \"mask\");\n            urltest(it, \"clip-path\");\n            linktest(it);\n            var oldid = $(it.node, \"id\");\n            if (oldid) {\n                $(it.node, {id: it.id});\n                ids.push({\n                    old: oldid,\n                    id: it.id\n                });\n            }\n        }\n        for (i = 0, ii = ids.length; i < ii; i++) {\n            var fs = uses[ids[i].old];\n            if (fs) {\n                for (var j = 0, jj = fs.length; j < jj; j++) {\n                    fs[j](ids[i].id);\n                }\n            }\n        }\n    }\n    /*\\\n     * Element.clone\n     [ method ]\n     **\n     * Creates a clone of the element and inserts it after the element\n     **\n     = (Element) the clone\n    \\*/\n    elproto.clone = function () {\n        var clone = wrap(this.node.cloneNode(true));\n        if ($(clone.node, \"id\")) {\n            $(clone.node, {id: clone.id});\n        }\n        fixids(clone);\n        clone.insertAfter(this);\n        return clone;\n    };\n    /*\\\n     * Element.toDefs\n     [ method ]\n     **\n     * Moves element to the shared `<defs>` area\n     **\n     = (Element) the element\n    \\*/\n    elproto.toDefs = function () {\n        var defs = getSomeDefs(this);\n        defs.appendChild(this.node);\n        return this;\n    };\n    /*\\\n     * Element.toPattern\n     [ method ]\n     **\n     * Creates a `<pattern>` element from the current element\n     **\n     * To create a pattern you have to specify the pattern rect:\n     - x (string|number)\n     - y (string|number)\n     - width (string|number)\n     - height (string|number)\n     = (Element) the `<pattern>` element\n     * You can use pattern later on as an argument for `fill` attribute:\n     | var p = paper.path(\"M10-5-10,15M15,0,0,15M0-5-20,15\").attr({\n     |         fill: \"none\",\n     |         stroke: \"#bada55\",\n     |         strokeWidth: 5\n     |     }).pattern(0, 0, 10, 10),\n     |     c = paper.circle(200, 200, 100);\n     | c.attr({\n     |     fill: p\n     | });\n    \\*/\n    elproto.pattern = elproto.toPattern = function (x, y, width, height) {\n        var p = make(\"pattern\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        $(p.node, {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            patternUnits: \"userSpaceOnUse\",\n            id: p.id,\n            viewBox: [x, y, width, height].join(\" \")\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n// SIERRA Element.marker(): clarify what a reference point is. E.g., helps you offset the object from its edge such as when centering it over a path.\n// SIERRA Element.marker(): I suggest the method should accept default reference point values.  Perhaps centered with (refX = width/2) and (refY = height/2)? Also, couldn't it assume the element's current _width_ and _height_? And please specify what _x_ and _y_ mean: offsets? If so, from where?  Couldn't they also be assigned default values?\n    /*\\\n     * Element.marker\n     [ method ]\n     **\n     * Creates a `<marker>` element from the current element\n     **\n     * To create a marker you have to specify the bounding rect and reference point:\n     - x (number)\n     - y (number)\n     - width (number)\n     - height (number)\n     - refX (number)\n     - refY (number)\n     = (Element) the `<marker>` element\n     * You can specify the marker later as an argument for `marker-start`, `marker-end`, `marker-mid`, and `marker` attributes. The `marker` attribute places the marker at every point along the path, and `marker-mid` places them at every point except the start and end.\n    \\*/\n    // TODO add usage for markers\n    elproto.marker = function (x, y, width, height, refX, refY) {\n        var p = make(\"marker\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            refX = x.refX || x.cx;\n            refY = x.refY || x.cy;\n            x = x.x;\n        }\n        $(p.node, {\n            viewBox: [x, y, width, height].join(\" \"),\n            markerWidth: width,\n            markerHeight: height,\n            orient: \"auto\",\n            refX: refX || 0,\n            refY: refY || 0,\n            id: p.id\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n    var eldata = {};\n    /*\\\n     * Element.data\n     [ method ]\n     **\n     * Adds or retrieves given value associated with given key. (Don’t confuse\n     * with `data-` attributes)\n     *\n     * See also @Element.removeData\n     - key (string) key to store data\n     - value (any) #optional value to store\n     = (object) @Element\n     * or, if value is not specified:\n     = (any) value\n     > Usage\n     | for (var i = 0, i < 5, i++) {\n     |     paper.circle(10 + 15 * i, 10, 10)\n     |          .attr({fill: \"#000\"})\n     |          .data(\"i\", i)\n     |          .click(function () {\n     |             alert(this.data(\"i\"));\n     |          });\n     | }\n    \\*/\n    elproto.data = function (key, value) {\n        var data = eldata[this.id] = eldata[this.id] || {};\n        if (arguments.length == 0){\n            eve(\"snap.data.get.\" + this.id, this, data, null);\n            return data;\n        }\n        if (arguments.length == 1) {\n            if (Snap.is(key, \"object\")) {\n                for (var i in key) if (key[has](i)) {\n                    this.data(i, key[i]);\n                }\n                return this;\n            }\n            eve(\"snap.data.get.\" + this.id, this, data[key], key);\n            return data[key];\n        }\n        data[key] = value;\n        eve(\"snap.data.set.\" + this.id, this, value, key);\n        return this;\n    };\n    /*\\\n     * Element.removeData\n     [ method ]\n     **\n     * Removes value associated with an element by given key.\n     * If key is not provided, removes all the data of the element.\n     - key (string) #optional key\n     = (object) @Element\n    \\*/\n    elproto.removeData = function (key) {\n        if (key == null) {\n            eldata[this.id] = {};\n        } else {\n            eldata[this.id] && delete eldata[this.id][key];\n        }\n        return this;\n    };\n    /*\\\n     * Element.outerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element, equivalent to HTML's `outerHTML`.\n     *\n     * See also @Element.innerSVG\n     = (string) SVG code for the element\n    \\*/\n    /*\\\n     * Element.toString\n     [ method ]\n     **\n     * See @Element.outerSVG\n    \\*/\n    elproto.outerSVG = elproto.toString = toString(1);\n    /*\\\n     * Element.innerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element's contents, equivalent to HTML's `innerHTML`\n     = (string) SVG code for the element\n    \\*/\n    elproto.innerSVG = toString();\n    function toString(type) {\n        return function () {\n            var res = type ? \"<\" + this.type : \"\",\n                attr = this.node.attributes,\n                chld = this.node.childNodes;\n            if (type) {\n                for (var i = 0, ii = attr.length; i < ii; i++) {\n                    res += \" \" + attr[i].name + '=\"' +\n                            attr[i].value.replace(/\"/g, '\\\\\"') + '\"';\n                }\n            }\n            if (chld.length) {\n                type && (res += \">\");\n                for (i = 0, ii = chld.length; i < ii; i++) {\n                    if (chld[i].nodeType == 3) {\n                        res += chld[i].nodeValue;\n                    } else if (chld[i].nodeType == 1) {\n                        res += wrap(chld[i]).toString();\n                    }\n                }\n                type && (res += \"</\" + this.type + \">\");\n            } else {\n                type && (res += \"/>\");\n            }\n            return res;\n        };\n    }\n    elproto.toDataURL = function () {\n        if (window && window.btoa) {\n            var bb = this.getBBox(),\n                svg = Snap.format('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"{width}\" height=\"{height}\" viewBox=\"{x} {y} {width} {height}\">{contents}</svg>', {\n                x: +bb.x.toFixed(3),\n                y: +bb.y.toFixed(3),\n                width: +bb.width.toFixed(3),\n                height: +bb.height.toFixed(3),\n                contents: this.outerSVG()\n            });\n            return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svg)));\n        }\n    };\n    /*\\\n     * Fragment.select\n     [ method ]\n     **\n     * See @Element.select\n    \\*/\n    Fragment.prototype.select = elproto.select;\n    /*\\\n     * Fragment.selectAll\n     [ method ]\n     **\n     * See @Element.selectAll\n    \\*/\n    Fragment.prototype.selectAll = elproto.selectAll;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var objectToString = Object.prototype.toString,\n        Str = String,\n        math = Math,\n        E = \"\";\n    function Matrix(a, b, c, d, e, f) {\n        if (b == null && objectToString.call(a) == \"[object SVGMatrix]\") {\n            this.a = a.a;\n            this.b = a.b;\n            this.c = a.c;\n            this.d = a.d;\n            this.e = a.e;\n            this.f = a.f;\n            return;\n        }\n        if (a != null) {\n            this.a = +a;\n            this.b = +b;\n            this.c = +c;\n            this.d = +d;\n            this.e = +e;\n            this.f = +f;\n        } else {\n            this.a = 1;\n            this.b = 0;\n            this.c = 0;\n            this.d = 1;\n            this.e = 0;\n            this.f = 0;\n        }\n    }\n    (function (matrixproto) {\n        /*\\\n         * Matrix.add\n         [ method ]\n         **\n         * Adds the given matrix to existing one\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        matrixproto.add = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.add(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + b * this.c,\n                bNew = a * this.b + b * this.d;\n            this.e += e * this.a + f * this.c;\n            this.f += e * this.b + f * this.d;\n            this.c = c * this.a + d * this.c;\n            this.d = c * this.b + d * this.d;\n\n            this.a = aNew;\n            this.b = bNew;\n            return this;\n        };\n        /*\\\n         * Matrix.multLeft\n         [ method ]\n         **\n         * Multiplies a passed affine transform to the left: M * this.\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        Matrix.prototype.multLeft = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.multLeft(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + c * this.b,\n                cNew = a * this.c + c * this.d,\n                eNew = a * this.e + c * this.f + e;\n            this.b = b * this.a + d * this.b;\n            this.d = b * this.c + d * this.d;\n            this.f = b * this.e + d * this.f + f;\n\n            this.a = aNew;\n            this.c = cNew;\n            this.e = eNew;\n            return this;\n        };\n        /*\\\n         * Matrix.invert\n         [ method ]\n         **\n         * Returns an inverted version of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.invert = function () {\n            var me = this,\n                x = me.a * me.d - me.b * me.c;\n            return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\n        };\n        /*\\\n         * Matrix.clone\n         [ method ]\n         **\n         * Returns a copy of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.clone = function () {\n            return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n        };\n        /*\\\n         * Matrix.translate\n         [ method ]\n         **\n         * Translate the matrix\n         - x (number) horizontal offset distance\n         - y (number) vertical offset distance\n        \\*/\n        matrixproto.translate = function (x, y) {\n            this.e += x * this.a + y * this.c;\n            this.f += x * this.b + y * this.d;\n            return this;\n        };\n        /*\\\n         * Matrix.scale\n         [ method ]\n         **\n         * Scales the matrix\n         - x (number) amount to be scaled, with `1` resulting in no change\n         - y (number) #optional amount to scale along the vertical axis. (Otherwise `x` applies to both axes.)\n         - cx (number) #optional horizontal origin point from which to scale\n         - cy (number) #optional vertical origin point from which to scale\n         * Default cx, cy is the middle point of the element.\n        \\*/\n        matrixproto.scale = function (x, y, cx, cy) {\n            y == null && (y = x);\n            (cx || cy) && this.translate(cx, cy);\n            this.a *= x;\n            this.b *= x;\n            this.c *= y;\n            this.d *= y;\n            (cx || cy) && this.translate(-cx, -cy);\n            return this;\n        };\n        /*\\\n         * Matrix.rotate\n         [ method ]\n         **\n         * Rotates the matrix\n         - a (number) angle of rotation, in degrees\n         - x (number) horizontal origin point from which to rotate\n         - y (number) vertical origin point from which to rotate\n        \\*/\n        matrixproto.rotate = function (a, x, y) {\n            a = Snap.rad(a);\n            x = x || 0;\n            y = y || 0;\n            var cos = +math.cos(a).toFixed(9),\n                sin = +math.sin(a).toFixed(9);\n            this.add(cos, sin, -sin, cos, x, y);\n            return this.add(1, 0, 0, 1, -x, -y);\n        };\n        /*\\\n         * Matrix.skewX\n         [ method ]\n         **\n         * Skews the matrix along the x-axis\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skewX = function (x) {\n            return this.skew(x, 0);\n        };\n        /*\\\n         * Matrix.skewY\n         [ method ]\n         **\n         * Skews the matrix along the y-axis\n         - y (number) Angle to skew along the y-axis (in degrees).\n        \\*/\n        matrixproto.skewY = function (y) {\n            return this.skew(0, y);\n        };\n        /*\\\n         * Matrix.skew\n         [ method ]\n         **\n         * Skews the matrix\n         - y (number) Angle to skew along the y-axis (in degrees).\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skew = function (x, y) {\n            x = x || 0;\n            y = y || 0;\n            x = Snap.rad(x);\n            y = Snap.rad(y);\n            var c = math.tan(x).toFixed(9);\n            var b = math.tan(y).toFixed(9);\n            return this.add(1, b, c, 1, 0, 0);\n        };\n        /*\\\n         * Matrix.x\n         [ method ]\n         **\n         * Returns x coordinate for given point after transformation described by the matrix. See also @Matrix.y\n         - x (number)\n         - y (number)\n         = (number) x\n        \\*/\n        matrixproto.x = function (x, y) {\n            return x * this.a + y * this.c + this.e;\n        };\n        /*\\\n         * Matrix.y\n         [ method ]\n         **\n         * Returns y coordinate for given point after transformation described by the matrix. See also @Matrix.x\n         - x (number)\n         - y (number)\n         = (number) y\n        \\*/\n        matrixproto.y = function (x, y) {\n            return x * this.b + y * this.d + this.f;\n        };\n        matrixproto.get = function (i) {\n            return +this[Str.fromCharCode(97 + i)].toFixed(4);\n        };\n        matrixproto.toString = function () {\n            return \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\";\n        };\n        matrixproto.offset = function () {\n            return [this.e.toFixed(4), this.f.toFixed(4)];\n        };\n        function norm(a) {\n            return a[0] * a[0] + a[1] * a[1];\n        }\n        function normalize(a) {\n            var mag = math.sqrt(norm(a));\n            a[0] && (a[0] /= mag);\n            a[1] && (a[1] /= mag);\n        }\n        /*\\\n         * Matrix.determinant\n         [ method ]\n         **\n         * Finds determinant of the given matrix.\n         = (number) determinant\n        \\*/\n        matrixproto.determinant = function () {\n            return this.a * this.d - this.b * this.c;\n        };\n        /*\\\n         * Matrix.split\n         [ method ]\n         **\n         * Splits matrix into primitive transformations\n         = (object) in format:\n         o dx (number) translation by x\n         o dy (number) translation by y\n         o scalex (number) scale by x\n         o scaley (number) scale by y\n         o shear (number) shear\n         o rotate (number) rotation in deg\n         o isSimple (boolean) could it be represented via simple transformations\n        \\*/\n        matrixproto.split = function () {\n            var out = {};\n            // translation\n            out.dx = this.e;\n            out.dy = this.f;\n\n            // scale and shear\n            var row = [[this.a, this.b], [this.c, this.d]];\n            out.scalex = math.sqrt(norm(row[0]));\n            normalize(row[0]);\n\n            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\n            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\n\n            out.scaley = math.sqrt(norm(row[1]));\n            normalize(row[1]);\n            out.shear /= out.scaley;\n\n            if (this.determinant() < 0) {\n                out.scalex = -out.scalex;\n            }\n\n            // rotation\n            var sin = row[0][1],\n                cos = row[1][1];\n            if (cos < 0) {\n                out.rotate = Snap.deg(math.acos(cos));\n                if (sin < 0) {\n                    out.rotate = 360 - out.rotate;\n                }\n            } else {\n                out.rotate = Snap.deg(math.asin(sin));\n            }\n\n            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\n            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\n            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\n            return out;\n        };\n        /*\\\n         * Matrix.toTransformString\n         [ method ]\n         **\n         * Returns transform string that represents given matrix\n         = (string) transform string\n        \\*/\n        matrixproto.toTransformString = function (shorter) {\n            var s = shorter || this.split();\n            if (!+s.shear.toFixed(9)) {\n                s.scalex = +s.scalex.toFixed(4);\n                s.scaley = +s.scaley.toFixed(4);\n                s.rotate = +s.rotate.toFixed(4);\n                return  (s.dx || s.dy ? \"t\" + [+s.dx.toFixed(4), +s.dy.toFixed(4)] : E) +\n                        (s.rotate ? \"r\" + [+s.rotate.toFixed(4), 0, 0] : E) +\n                        (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E);\n            } else {\n                return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\n            }\n        };\n    })(Matrix.prototype);\n    /*\\\n     * Snap.Matrix\n     [ method ]\n     **\n     * Matrix constructor, extend on your own risk.\n     * To create matrices use @Snap.matrix.\n    \\*/\n    Snap.Matrix = Matrix;\n    /*\\\n     * Snap.matrix\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns a matrix based on the given parameters\n     - a (number)\n     - b (number)\n     - c (number)\n     - d (number)\n     - e (number)\n     - f (number)\n     * or\n     - svgMatrix (SVGMatrix)\n     = (object) @Matrix\n    \\*/\n    Snap.matrix = function (a, b, c, d, e, f) {\n        return new Matrix(a, b, c, d, e, f);\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var has = \"hasOwnProperty\",\n        make = Snap._.make,\n        wrap = Snap._.wrap,\n        is = Snap.is,\n        getSomeDefs = Snap._.getSomeDefs,\n        reURLValue = /^url\\((['\"]?)([^)]+)\\1\\)$/,\n        $ = Snap._.$,\n        URL = Snap.url,\n        Str = String,\n        separator = Snap._.separator,\n        E = \"\";\n    /*\\\n     * Snap.deurl\n     [ method ]\n     **\n     * Unwraps path from `\"url(<path>)\"`.\n     - value (string) url path\n     = (string) unwrapped path\n    \\*/\n    Snap.deurl = function (value) {\n        var res = String(value).match(reURLValue);\n        return res ? res[2] : value;\n    }\n    // Attributes event handlers\n    eve.on(\"snap.util.attr.mask\", function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value.type == \"mask\") {\n                var mask = value;\n            } else {\n                mask = make(\"mask\", getSomeDefs(this));\n                mask.node.appendChild(value.node);\n            }\n            !mask.node.id && $(mask.node, {\n                id: mask.id\n            });\n            $(this.node, {\n                mask: URL(mask.id)\n            });\n        }\n    });\n    (function (clipIt) {\n        eve.on(\"snap.util.attr.clip\", clipIt);\n        eve.on(\"snap.util.attr.clip-path\", clipIt);\n        eve.on(\"snap.util.attr.clipPath\", clipIt);\n    }(function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            var clip,\n                node = value.node;\n            while (node) {\n                if (node.nodeName === \"clipPath\") {\n                    clip = new Element(node);\n                    break;\n                }\n                if (node.nodeName === \"svg\") {\n                    clip = undefined;\n                    break;\n                }\n                node = node.parentNode;\n            }\n            if (!clip) {\n                clip = make(\"clipPath\", getSomeDefs(this));\n                clip.node.appendChild(value.node);\n                !clip.node.id && $(clip.node, {\n                    id: clip.id\n                });\n            }\n            $(this.node, {\n                \"clip-path\": URL(clip.node.id || clip.id)\n            });\n        }\n    }));\n    function fillStroke(name) {\n        return function (value) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1 &&\n                (value.node.firstChild.tagName == \"radialGradient\" ||\n                value.node.firstChild.tagName == \"linearGradient\" ||\n                value.node.firstChild.tagName == \"pattern\")) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value instanceof Element) {\n                if (value.type == \"radialGradient\" || value.type == \"linearGradient\"\n                   || value.type == \"pattern\") {\n                    if (!value.node.id) {\n                        $(value.node, {\n                            id: value.id\n                        });\n                    }\n                    var fill = URL(value.node.id);\n                } else {\n                    fill = value.attr(name);\n                }\n            } else {\n                fill = Snap.color(value);\n                if (fill.error) {\n                    var grad = Snap(getSomeDefs(this).ownerSVGElement).gradient(value);\n                    if (grad) {\n                        if (!grad.node.id) {\n                            $(grad.node, {\n                                id: grad.id\n                            });\n                        }\n                        fill = URL(grad.node.id);\n                    } else {\n                        fill = value;\n                    }\n                } else {\n                    fill = Str(fill);\n                }\n            }\n            var attrs = {};\n            attrs[name] = fill;\n            $(this.node, attrs);\n            this.node.style[name] = E;\n        };\n    }\n    eve.on(\"snap.util.attr.fill\", fillStroke(\"fill\"));\n    eve.on(\"snap.util.attr.stroke\", fillStroke(\"stroke\"));\n    var gradrg = /^([lr])(?:\\(([^)]*)\\))?(.*)$/i;\n    eve.on(\"snap.util.grad.parse\", function parseGrad(string) {\n        string = Str(string);\n        var tokens = string.match(gradrg);\n        if (!tokens) {\n            return null;\n        }\n        var type = tokens[1],\n            params = tokens[2],\n            stops = tokens[3];\n        params = params.split(/\\s*,\\s*/).map(function (el) {\n            return +el == el ? +el : el;\n        });\n        if (params.length == 1 && params[0] == 0) {\n            params = [];\n        }\n        stops = stops.split(\"-\");\n        stops = stops.map(function (el) {\n            el = el.split(\":\");\n            var out = {\n                color: el[0]\n            };\n            if (el[1]) {\n                out.offset = parseFloat(el[1]);\n            }\n            return out;\n        });\n        var len = stops.length,\n            start = 0,\n            j = 0;\n        function seed(i, end) {\n            var step = (end - start) / (i - j);\n            for (var k = j; k < i; k++) {\n                stops[k].offset = +(+start + step * (k - j)).toFixed(2);\n            }\n            j = i;\n            start = end;\n        }\n        len--;\n        for (var i = 0; i < len; i++) if (\"offset\" in stops[i]) {\n            seed(i, stops[i].offset);\n        }\n        stops[len].offset = stops[len].offset || 100;\n        seed(len, stops[len].offset);\n        return {\n            type: type,\n            params: params,\n            stops: stops\n        };\n    });\n\n    eve.on(\"snap.util.attr.d\", function (value) {\n        eve.stop();\n        if (is(value, \"array\") && is(value[0], \"array\")) {\n            value = Snap.path.toString.call(value);\n        }\n        value = Str(value);\n        if (value.match(/[ruo]/i)) {\n            value = Snap.path.toAbsolute(value);\n        }\n        $(this.node, {d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.#text\", function (value) {\n        eve.stop();\n        value = Str(value);\n        var txt = glob.doc.createTextNode(value);\n        while (this.node.firstChild) {\n            this.node.removeChild(this.node.firstChild);\n        }\n        this.node.appendChild(txt);\n    })(-1);\n    eve.on(\"snap.util.attr.path\", function (value) {\n        eve.stop();\n        this.attr({d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.class\", function (value) {\n        eve.stop();\n        this.node.className.baseVal = value;\n    })(-1);\n    eve.on(\"snap.util.attr.viewBox\", function (value) {\n        var vb;\n        if (is(value, \"object\") && \"x\" in value) {\n            vb = [value.x, value.y, value.width, value.height].join(\" \");\n        } else if (is(value, \"array\")) {\n            vb = value.join(\" \");\n        } else {\n            vb = value;\n        }\n        $(this.node, {\n            viewBox: vb\n        });\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.transform\", function (value) {\n        this.transform(value);\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.r\", function (value) {\n        if (this.type == \"rect\") {\n            eve.stop();\n            $(this.node, {\n                rx: value,\n                ry: value\n            });\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.textpath\", function (value) {\n        eve.stop();\n        if (this.type == \"text\") {\n            var id, tp, node;\n            if (!value && this.textPath) {\n                tp = this.textPath;\n                while (tp.node.firstChild) {\n                    this.node.appendChild(tp.node.firstChild);\n                }\n                tp.remove();\n                delete this.textPath;\n                return;\n            }\n            if (is(value, \"string\")) {\n                var defs = getSomeDefs(this),\n                    path = wrap(defs.parentNode).path(value);\n                defs.appendChild(path.node);\n                id = path.id;\n                path.attr({id: id});\n            } else {\n                value = wrap(value);\n                if (value instanceof Element) {\n                    id = value.attr(\"id\");\n                    if (!id) {\n                        id = value.id;\n                        value.attr({id: id});\n                    }\n                }\n            }\n            if (id) {\n                tp = this.textPath;\n                node = this.node;\n                if (tp) {\n                    tp.attr({\"xlink:href\": \"#\" + id});\n                } else {\n                    tp = $(\"textPath\", {\n                        \"xlink:href\": \"#\" + id\n                    });\n                    while (node.firstChild) {\n                        tp.appendChild(node.firstChild);\n                    }\n                    node.appendChild(tp);\n                    this.textPath = wrap(tp);\n                }\n            }\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.text\", function (value) {\n        if (this.type == \"text\") {\n            var i = 0,\n                node = this.node,\n                tuner = function (chunk) {\n                    var out = $(\"tspan\");\n                    if (is(chunk, \"array\")) {\n                        for (var i = 0; i < chunk.length; i++) {\n                            out.appendChild(tuner(chunk[i]));\n                        }\n                    } else {\n                        out.appendChild(glob.doc.createTextNode(chunk));\n                    }\n                    out.normalize && out.normalize();\n                    return out;\n                };\n            while (node.firstChild) {\n                node.removeChild(node.firstChild);\n            }\n            var tuned = tuner(value);\n            while (tuned.firstChild) {\n                node.appendChild(tuned.firstChild);\n            }\n        }\n        eve.stop();\n    })(-1);\n    function setFontSize(value) {\n        eve.stop();\n        if (value == +value) {\n            value += \"px\";\n        }\n        this.node.style.fontSize = value;\n    }\n    eve.on(\"snap.util.attr.fontSize\", setFontSize)(-1);\n    eve.on(\"snap.util.attr.font-size\", setFontSize)(-1);\n\n\n    eve.on(\"snap.util.getattr.transform\", function () {\n        eve.stop();\n        return this.transform();\n    })(-1);\n    eve.on(\"snap.util.getattr.textpath\", function () {\n        eve.stop();\n        return this.textPath;\n    })(-1);\n    // Markers\n    (function () {\n        function getter(end) {\n            return function () {\n                eve.stop();\n                var style = glob.doc.defaultView.getComputedStyle(this.node, null).getPropertyValue(\"marker-\" + end);\n                if (style == \"none\") {\n                    return style;\n                } else {\n                    return Snap(glob.doc.getElementById(style.match(reURLValue)[1]));\n                }\n            };\n        }\n        function setter(end) {\n            return function (value) {\n                eve.stop();\n                var name = \"marker\" + end.charAt(0).toUpperCase() + end.substring(1);\n                if (value == \"\" || !value) {\n                    this.node.style[name] = \"none\";\n                    return;\n                }\n                if (value.type == \"marker\") {\n                    var id = value.node.id;\n                    if (!id) {\n                        $(value.node, {id: value.id});\n                    }\n                    this.node.style[name] = URL(id);\n                    return;\n                }\n            };\n        }\n        eve.on(\"snap.util.getattr.marker-end\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.markerEnd\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.marker-start\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.markerStart\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.marker-mid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.getattr.markerMid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.marker-end\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.markerEnd\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.marker-start\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.markerStart\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.marker-mid\", setter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.markerMid\", setter(\"mid\"))(-1);\n    }());\n    eve.on(\"snap.util.getattr.r\", function () {\n        if (this.type == \"rect\" && $(this.node, \"rx\") == $(this.node, \"ry\")) {\n            eve.stop();\n            return $(this.node, \"rx\");\n        }\n    })(-1);\n    function textExtract(node) {\n        var out = [];\n        var children = node.childNodes;\n        for (var i = 0, ii = children.length; i < ii; i++) {\n            var chi = children[i];\n            if (chi.nodeType == 3) {\n                out.push(chi.nodeValue);\n            }\n            if (chi.tagName == \"tspan\") {\n                if (chi.childNodes.length == 1 && chi.firstChild.nodeType == 3) {\n                    out.push(chi.firstChild.nodeValue);\n                } else {\n                    out.push(textExtract(chi));\n                }\n            }\n        }\n        return out;\n    }\n    eve.on(\"snap.util.getattr.text\", function () {\n        if (this.type == \"text\" || this.type == \"tspan\") {\n            eve.stop();\n            var out = textExtract(this.node);\n            return out.length == 1 ? out[0] : out;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.#text\", function () {\n        return this.node.textContent;\n    })(-1);\n    eve.on(\"snap.util.getattr.fill\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.fill\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.stroke\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.stroke\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.viewBox\", function () {\n        eve.stop();\n        var vb = $(this.node, \"viewBox\");\n        if (vb) {\n            vb = vb.split(separator);\n            return Snap._.box(+vb[0], +vb[1], +vb[2], +vb[3]);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.points\", function () {\n        var p = $(this.node, \"points\");\n        eve.stop();\n        if (p) {\n            return p.split(separator);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.path\", function () {\n        var p = $(this.node, \"d\");\n        eve.stop();\n        return p;\n    })(-1);\n    eve.on(\"snap.util.getattr.class\", function () {\n        return this.node.className.baseVal;\n    })(-1);\n    function getFontSize() {\n        eve.stop();\n        return this.node.style.fontSize;\n    }\n    eve.on(\"snap.util.getattr.fontSize\", getFontSize)(-1);\n    eve.on(\"snap.util.getattr.font-size\", getFontSize)(-1);\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var rgNotSpace = /\\S+/g,\n        rgBadSpace = /[\\t\\r\\n\\f]/g,\n        rgTrim = /(^\\s+|\\s+$)/g,\n        Str = String,\n        elproto = Element.prototype;\n    /*\\\n     * Element.addClass\n     [ method ]\n     **\n     * Adds given class name or list of class names to the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.addClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n\n        if (classes.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (!~pos) {\n                    curClasses.push(clazz);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.removeClass\n     [ method ]\n     **\n     * Removes given class name or list of class names from the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.removeClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        if (curClasses.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (~pos) {\n                    curClasses.splice(pos, 1);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.hasClass\n     [ method ]\n     **\n     * Checks if the element has a given class name in the list of class names applied to it.\n     - value (string) class name\n     **\n     = (boolean) `true` if the element has given class\n    \\*/\n    elproto.hasClass = function (value) {\n        var elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [];\n        return !!~curClasses.indexOf(value);\n    };\n    /*\\\n     * Element.toggleClass\n     [ method ]\n     **\n     * Add or remove one or more classes from the element, depending on either\n     * the class’s presence or the value of the `flag` argument.\n     - value (string) class name or space separated list of class names\n     - flag (boolean) value to determine whether the class should be added or removed\n     **\n     = (Element) original element.\n    \\*/\n    elproto.toggleClass = function (value, flag) {\n        if (flag != null) {\n            if (flag) {\n                return this.addClass(value);\n            } else {\n                return this.removeClass(value);\n            }\n        }\n        var classes = (value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        j = 0;\n        while (clazz = classes[j++]) {\n            pos = curClasses.indexOf(clazz);\n            if (~pos) {\n                curClasses.splice(pos, 1);\n            } else {\n                curClasses.push(clazz);\n            }\n        }\n\n        finalValue = curClasses.join(\" \");\n        if (className != finalValue) {\n            elem.className.baseVal = finalValue;\n        }\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var operators = {\n            \"+\": function (x, y) {\n                    return x + y;\n                },\n            \"-\": function (x, y) {\n                    return x - y;\n                },\n            \"/\": function (x, y) {\n                    return x / y;\n                },\n            \"*\": function (x, y) {\n                    return x * y;\n                }\n        },\n        Str = String,\n        reUnit = /[a-z]+$/i,\n        reAddon = /^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    eve.on(\"snap.util.attr\", function (val) {\n        var plus = Str(val).match(reAddon);\n        if (plus) {\n            var evnt = eve.nt(),\n                name = evnt.substring(evnt.lastIndexOf(\".\") + 1),\n                a = this.attr(name),\n                atr = {};\n            eve.stop();\n            var unit = plus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[plus[1]];\n            if (aUnit && aUnit == unit) {\n                val = op(parseFloat(a), +plus[2]);\n            } else {\n                a = this.asPX(name);\n                val = op(this.asPX(name), this.asPX(name, plus[2] + unit));\n            }\n            if (isNaN(a) || isNaN(val)) {\n                return;\n            }\n            atr[name] = val;\n            this.attr(atr);\n        }\n    })(-10);\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this,\n            bplus = Str(b).match(reAddon);\n        if (bplus) {\n            eve.stop();\n            var unit = bplus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[bplus[1]];\n            if (aUnit && aUnit == unit) {\n                return {\n                    from: parseFloat(a),\n                    to: op(parseFloat(a), +bplus[2]),\n                    f: getUnit(aUnit)\n                };\n            } else {\n                a = this.asPX(name);\n                return {\n                    from: a,\n                    to: op(a, this.asPX(name, bplus[2] + unit)),\n                    f: getNumber\n                };\n            }\n        }\n    })(-10);\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var proto = Paper.prototype,\n        is = Snap.is;\n    /*\\\n     * Paper.rect\n     [ method ]\n     *\n     * Draws a rectangle\n     **\n     - x (number) x coordinate of the top left corner\n     - y (number) y coordinate of the top left corner\n     - width (number) width\n     - height (number) height\n     - rx (number) #optional horizontal radius for rounded corners, default is 0\n     - ry (number) #optional vertical radius for rounded corners, default is rx or 0\n     = (object) the `rect` element\n     **\n     > Usage\n     | // regular rectangle\n     | var c = paper.rect(10, 10, 50, 50);\n     | // rectangle with rounded corners\n     | var c = paper.rect(40, 40, 50, 50, 10);\n    \\*/\n    proto.rect = function (x, y, w, h, rx, ry) {\n        var attr;\n        if (ry == null) {\n            ry = rx;\n        }\n        if (is(x, \"object\") && x == \"[object Object]\") {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                width: w,\n                height: h\n            };\n            if (rx != null) {\n                attr.rx = rx;\n                attr.ry = ry;\n            }\n        }\n        return this.el(\"rect\", attr);\n    };\n    /*\\\n     * Paper.circle\n     [ method ]\n     **\n     * Draws a circle\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - r (number) radius\n     = (object) the `circle` element\n     **\n     > Usage\n     | var c = paper.circle(50, 50, 40);\n    \\*/\n    proto.circle = function (cx, cy, r) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr = {\n                cx: cx,\n                cy: cy,\n                r: r\n            };\n        }\n        return this.el(\"circle\", attr);\n    };\n\n    var preload = (function () {\n        function onerror() {\n            this.parentNode.removeChild(this);\n        }\n        return function (src, f) {\n            var img = glob.doc.createElement(\"img\"),\n                body = glob.doc.body;\n            img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\n            img.onload = function () {\n                f.call(img);\n                img.onload = img.onerror = null;\n                body.removeChild(img);\n            };\n            img.onerror = onerror;\n            body.appendChild(img);\n            img.src = src;\n        };\n    }());\n\n    /*\\\n     * Paper.image\n     [ method ]\n     **\n     * Places an image on the surface\n     **\n     - src (string) URI of the source image\n     - x (number) x offset position\n     - y (number) y offset position\n     - width (number) width of the image\n     - height (number) height of the image\n     = (object) the `image` element\n     * or\n     = (object) Snap element object with type `image`\n     **\n     > Usage\n     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\n    \\*/\n    proto.image = function (src, x, y, width, height) {\n        var el = this.el(\"image\");\n        if (is(src, \"object\") && \"src\" in src) {\n            el.attr(src);\n        } else if (src != null) {\n            var set = {\n                \"xlink:href\": src,\n                preserveAspectRatio: \"none\"\n            };\n            if (x != null && y != null) {\n                set.x = x;\n                set.y = y;\n            }\n            if (width != null && height != null) {\n                set.width = width;\n                set.height = height;\n            } else {\n                preload(src, function () {\n                    Snap._.$(el.node, {\n                        width: this.offsetWidth,\n                        height: this.offsetHeight\n                    });\n                });\n            }\n            Snap._.$(el.node, set);\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ellipse\n     [ method ]\n     **\n     * Draws an ellipse\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - rx (number) horizontal radius\n     - ry (number) vertical radius\n     = (object) the `ellipse` element\n     **\n     > Usage\n     | var c = paper.ellipse(50, 50, 40, 20);\n    \\*/\n    proto.ellipse = function (cx, cy, rx, ry) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr ={\n                cx: cx,\n                cy: cy,\n                rx: rx,\n                ry: ry\n            };\n        }\n        return this.el(\"ellipse\", attr);\n    };\n    // SIERRA Paper.path(): Unclear from the link what a Catmull-Rom curveto is, and why it would make life any easier.\n    /*\\\n     * Paper.path\n     [ method ]\n     **\n     * Creates a `<path>` element using the given string as the path's definition\n     - pathString (string) #optional path string in SVG format\n     * Path string consists of one-letter commands, followed by comma seprarated arguments in numerical form. Example:\n     | \"M10,20L30,40\"\n     * This example features two commands: `M`, with arguments `(10, 20)` and `L` with arguments `(30, 40)`. Uppercase letter commands express coordinates in absolute terms, while lowercase commands express them in relative terms from the most recently declared coordinates.\n     *\n     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a> or <a href=\"https://developer.mozilla.org/en/SVG/Tutorial/Paths\">article about path strings at MDN</a>.</p>\n     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\n     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\n     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\n     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\n     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\n     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\n     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\n     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\n     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\n     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\n     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\n     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\n     * * _Catmull-Rom curveto_ is a not standard SVG command and added to make life easier.\n     * Note: there is a special case when a path consists of only three commands: `M10,10R…z`. In this case the path connects back to its starting point.\n     > Usage\n     | var c = paper.path(\"M10 10L90 90\");\n     | // draw a diagonal line:\n     | // move to 10,10, line to 90,90\n    \\*/\n    proto.path = function (d) {\n        var attr;\n        if (is(d, \"object\") && !is(d, \"array\")) {\n            attr = d;\n        } else if (d) {\n            attr = {d: d};\n        }\n        return this.el(\"path\", attr);\n    };\n    /*\\\n     * Paper.g\n     [ method ]\n     **\n     * Creates a group element\n     **\n     - varargs (…) #optional elements to nest within the group\n     = (object) the `g` element\n     **\n     > Usage\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g(c2, c1); // note that the order of elements is different\n     * or\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g();\n     | g.add(c2, c1);\n    \\*/\n    /*\\\n     * Paper.group\n     [ method ]\n     **\n     * See @Paper.g\n    \\*/\n    proto.group = proto.g = function (first) {\n        var attr,\n            el = this.el(\"g\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.svg\n     [ method ]\n     **\n     * Creates a nested SVG element.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `svg` element\n     **\n    \\*/\n    proto.svg = function (x, y, width, height, vbx, vby, vbw, vbh) {\n        var attrs = {};\n        if (is(x, \"object\") && y == null) {\n            attrs = x;\n        } else {\n            if (x != null) {\n                attrs.x = x;\n            }\n            if (y != null) {\n                attrs.y = y;\n            }\n            if (width != null) {\n                attrs.width = width;\n            }\n            if (height != null) {\n                attrs.height = height;\n            }\n            if (vbx != null && vby != null && vbw != null && vbh != null) {\n                attrs.viewBox = [vbx, vby, vbw, vbh];\n            }\n        }\n        return this.el(\"svg\", attrs);\n    };\n    /*\\\n     * Paper.mask\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a mask.\n     **\n     = (object) the `mask` element\n     **\n    \\*/\n    proto.mask = function (first) {\n        var attr,\n            el = this.el(\"mask\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ptrn\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a pattern.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `pattern` element\n     **\n    \\*/\n    proto.ptrn = function (x, y, width, height, vx, vy, vw, vh) {\n        if (is(x, \"object\")) {\n            var attr = x;\n        } else {\n            attr = {patternUnits: \"userSpaceOnUse\"};\n            if (x) {\n                attr.x = x;\n            }\n            if (y) {\n                attr.y = y;\n            }\n            if (width != null) {\n                attr.width = width;\n            }\n            if (height != null) {\n                attr.height = height;\n            }\n            if (vx != null && vy != null && vw != null && vh != null) {\n                attr.viewBox = [vx, vy, vw, vh];\n            } else {\n                attr.viewBox = [x || 0, y || 0, width || 0, height || 0];\n            }\n        }\n        return this.el(\"pattern\", attr);\n    };\n    /*\\\n     * Paper.use\n     [ method ]\n     **\n     * Creates a <use> element.\n     - id (string) @optional id of element to link\n     * or\n     - id (Element) @optional element to link\n     **\n     = (object) the `use` element\n     **\n    \\*/\n    proto.use = function (id) {\n        if (id != null) {\n            if (id instanceof Element) {\n                if (!id.attr(\"id\")) {\n                    id.attr({id: Snap._.id(id)});\n                }\n                id = id.attr(\"id\");\n            }\n            if (String(id).charAt() == \"#\") {\n                id = id.substring(1);\n            }\n            return this.el(\"use\", {\"xlink:href\": \"#\" + id});\n        } else {\n            return Element.prototype.use.call(this);\n        }\n    };\n    /*\\\n     * Paper.symbol\n     [ method ]\n     **\n     * Creates a <symbol> element.\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     = (object) the `symbol` element\n     **\n    \\*/\n    proto.symbol = function (vx, vy, vw, vh) {\n        var attr = {};\n        if (vx != null && vy != null && vw != null && vh != null) {\n            attr.viewBox = [vx, vy, vw, vh];\n        }\n\n        return this.el(\"symbol\", attr);\n    };\n    /*\\\n     * Paper.text\n     [ method ]\n     **\n     * Draws a text string\n     **\n     - x (number) x coordinate position\n     - y (number) y coordinate position\n     - text (string|array) The text string to draw or array of strings to nest within separate `<tspan>` elements\n     = (object) the `text` element\n     **\n     > Usage\n     | var t1 = paper.text(50, 50, \"Snap\");\n     | var t2 = paper.text(50, 50, [\"S\",\"n\",\"a\",\"p\"]);\n     | // Text path usage\n     | t1.attr({textpath: \"M10,10L100,100\"});\n     | // or\n     | var pth = paper.path(\"M10,10L100,100\");\n     | t1.attr({textpath: pth});\n    \\*/\n    proto.text = function (x, y, text) {\n        var attr = {};\n        if (is(x, \"object\")) {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                text: text || \"\"\n            };\n        }\n        return this.el(\"text\", attr);\n    };\n    /*\\\n     * Paper.line\n     [ method ]\n     **\n     * Draws a line\n     **\n     - x1 (number) x coordinate position of the start\n     - y1 (number) y coordinate position of the start\n     - x2 (number) x coordinate position of the end\n     - y2 (number) y coordinate position of the end\n     = (object) the `line` element\n     **\n     > Usage\n     | var t1 = paper.line(50, 50, 100, 100);\n    \\*/\n    proto.line = function (x1, y1, x2, y2) {\n        var attr = {};\n        if (is(x1, \"object\")) {\n            attr = x1;\n        } else if (x1 != null) {\n            attr = {\n                x1: x1,\n                x2: x2,\n                y1: y1,\n                y2: y2\n            };\n        }\n        return this.el(\"line\", attr);\n    };\n    /*\\\n     * Paper.polyline\n     [ method ]\n     **\n     * Draws a polyline\n     **\n     - points (array) array of points\n     * or\n     - varargs (…) points\n     = (object) the `polyline` element\n     **\n     > Usage\n     | var p1 = paper.polyline([10, 10, 100, 100]);\n     | var p2 = paper.polyline(10, 10, 100, 100);\n    \\*/\n    proto.polyline = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polyline\", attr);\n    };\n    /*\\\n     * Paper.polygon\n     [ method ]\n     **\n     * Draws a polygon. See @Paper.polyline\n    \\*/\n    proto.polygon = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polygon\", attr);\n    };\n    // gradients\n    (function () {\n        var $ = Snap._.$;\n        // gradients' helpers\n        /*\\\n         * Element.stops\n         [ method ]\n         **\n         * Only for gradients!\n         * Returns array of gradient stops elements.\n         = (array) the stops array.\n        \\*/\n        function Gstops() {\n            return this.selectAll(\"stop\");\n        }\n        /*\\\n         * Element.addStop\n         [ method ]\n         **\n         * Only for gradients!\n         * Adds another stop to the gradient.\n         - color (string) stops color\n         - offset (number) stops offset 0..100\n         = (object) gradient element\n        \\*/\n        function GaddStop(color, offset) {\n            var stop = $(\"stop\"),\n                attr = {\n                    offset: +offset + \"%\"\n                };\n            color = Snap.color(color);\n            attr[\"stop-color\"] = color.hex;\n            if (color.opacity < 1) {\n                attr[\"stop-opacity\"] = color.opacity;\n            }\n            $(stop, attr);\n            var stops = this.stops(),\n                inserted;\n            for (var i = 0; i < stops.length; i++) {\n                var stopOffset = parseFloat(stops[i].attr(\"offset\"));\n                if (stopOffset > offset) {\n                    this.node.insertBefore(stop, stops[i].node);\n                    inserted = true;\n                    break;\n                }\n            }\n            if (!inserted) {\n                this.node.appendChild(stop);\n            }\n            return this;\n        }\n        function GgetBBox() {\n            if (this.type == \"linearGradient\") {\n                var x1 = $(this.node, \"x1\") || 0,\n                    x2 = $(this.node, \"x2\") || 1,\n                    y1 = $(this.node, \"y1\") || 0,\n                    y2 = $(this.node, \"y2\") || 0;\n                return Snap._.box(x1, y1, math.abs(x2 - x1), math.abs(y2 - y1));\n            } else {\n                var cx = this.node.cx || .5,\n                    cy = this.node.cy || .5,\n                    r = this.node.r || 0;\n                return Snap._.box(cx - r, cy - r, r * 2, r * 2);\n            }\n        }\n        /*\\\n         * Element.setStops\n         [ method ]\n         **\n         * Only for gradients!\n         * Updates stops of the gradient based on passed gradient descriptor. See @Ppaer.gradient\n         - str (string) gradient descriptor part after `()`.\n         = (object) gradient element\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         | g.setStops(\"#fff-#000-#f00-#fc0\");\n        \\*/\n        function GsetStops(str) {\n            var grad = str,\n                stops = this.stops();\n            if (typeof str == \"string\") {\n                grad = eve(\"snap.util.grad.parse\", null, \"l(0,0,0,1)\" + str).firstDefined().stops;\n            }\n            if (!Snap.is(grad, \"array\")) {\n                return;\n            }\n            for (var i = 0; i < stops.length; i++) {\n                if (grad[i]) {\n                    var color = Snap.color(grad[i].color),\n                        attr = {\"offset\": grad[i].offset + \"%\"};\n                    attr[\"stop-color\"] = color.hex;\n                    if (color.opacity < 1) {\n                        attr[\"stop-opacity\"] = color.opacity;\n                    }\n                    stops[i].attr(attr);\n                } else {\n                    stops[i].remove();\n                }\n            }\n            for (i = stops.length; i < grad.length; i++) {\n                this.addStop(grad[i].color, grad[i].offset);\n            }\n            return this;\n        }\n        function gradient(defs, str) {\n            var grad = eve(\"snap.util.grad.parse\", null, str).firstDefined(),\n                el;\n            if (!grad) {\n                return null;\n            }\n            grad.params.unshift(defs);\n            if (grad.type.toLowerCase() == \"l\") {\n                el = gradientLinear.apply(0, grad.params);\n            } else {\n                el = gradientRadial.apply(0, grad.params);\n            }\n            if (grad.type != grad.type.toLowerCase()) {\n                $(el.node, {\n                    gradientUnits: \"userSpaceOnUse\"\n                });\n            }\n            var stops = grad.stops,\n                len = stops.length;\n            for (var i = 0; i < len; i++) {\n                var stop = stops[i];\n                el.addStop(stop.color, stop.offset);\n            }\n            return el;\n        }\n        function gradientLinear(defs, x1, y1, x2, y2) {\n            var el = Snap._.make(\"linearGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            el.setStops = GsetStops;\n            if (x1 != null) {\n                $(el.node, {\n                    x1: x1,\n                    y1: y1,\n                    x2: x2,\n                    y2: y2\n                });\n            }\n            return el;\n        }\n        function gradientRadial(defs, cx, cy, r, fx, fy) {\n            var el = Snap._.make(\"radialGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            if (cx != null) {\n                $(el.node, {\n                    cx: cx,\n                    cy: cy,\n                    r: r\n                });\n            }\n            if (fx != null && fy != null) {\n                $(el.node, {\n                    fx: fx,\n                    fy: fy\n                });\n            }\n            return el;\n        }\n        /*\\\n         * Paper.gradient\n         [ method ]\n         **\n         * Creates a gradient element\n         **\n         - gradient (string) gradient descriptor\n         > Gradient Descriptor\n         * The gradient descriptor is an expression formatted as\n         * follows: `<type>(<coords>)<colors>`.  The `<type>` can be\n         * either linear or radial.  The uppercase `L` or `R` letters\n         * indicate absolute coordinates offset from the SVG surface.\n         * Lowercase `l` or `r` letters indicate coordinates\n         * calculated relative to the element to which the gradient is\n         * applied.  Coordinates specify a linear gradient vector as\n         * `x1`, `y1`, `x2`, `y2`, or a radial gradient as `cx`, `cy`,\n         * `r` and optional `fx`, `fy` specifying a focal point away\n         * from the center of the circle. Specify `<colors>` as a list\n         * of dash-separated CSS color values.  Each color may be\n         * followed by a custom offset value, separated with a colon\n         * character.\n         > Examples\n         * Linear gradient, relative from top-left corner to bottom-right\n         * corner, from black through red to white:\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         * Linear gradient, absolute from (0, 0) to (100, 100), from black\n         * through red at 25% to white:\n         | var g = paper.gradient(\"L(0, 0, 100, 100)#000-#f00:25-#fff\");\n         * Radial gradient, relative from the center of the element with radius\n         * half the width, from black to white:\n         | var g = paper.gradient(\"r(0.5, 0.5, 0.5)#000-#fff\");\n         * To apply the gradient:\n         | paper.circle(50, 50, 40).attr({\n         |     fill: g\n         | });\n         = (object) the `gradient` element\n        \\*/\n        proto.gradient = function (str) {\n            return gradient(this.defs, str);\n        };\n        proto.gradientLinear = function (x1, y1, x2, y2) {\n            return gradientLinear(this.defs, x1, y1, x2, y2);\n        };\n        proto.gradientRadial = function (cx, cy, r, fx, fy) {\n            return gradientRadial(this.defs, cx, cy, r, fx, fy);\n        };\n        /*\\\n         * Paper.toString\n         [ method ]\n         **\n         * Returns SVG code for the @Paper\n         = (string) SVG code for the @Paper\n        \\*/\n        proto.toString = function () {\n            var doc = this.node.ownerDocument,\n                f = doc.createDocumentFragment(),\n                d = doc.createElement(\"div\"),\n                svg = this.node.cloneNode(true),\n                res;\n            f.appendChild(d);\n            d.appendChild(svg);\n            Snap._.$(svg, {xmlns: \"http://www.w3.org/2000/svg\"});\n            res = d.innerHTML;\n            f.removeChild(f.firstChild);\n            return res;\n        };\n        /*\\\n         * Paper.toDataURL\n         [ method ]\n         **\n         * Returns SVG code for the @Paper as Data URI string.\n         = (string) Data URI string\n        \\*/\n        proto.toDataURL = function () {\n            if (window && window.btoa) {\n                return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(this)));\n            }\n        };\n        /*\\\n         * Paper.clear\n         [ method ]\n         **\n         * Removes all child nodes of the paper, except <defs>.\n        \\*/\n        proto.clear = function () {\n            var node = this.node.firstChild,\n                next;\n            while (node) {\n                next = node.nextSibling;\n                if (node.tagName != \"defs\") {\n                    node.parentNode.removeChild(node);\n                } else {\n                    proto.clear.call({node: node});\n                }\n                node = next;\n            }\n        };\n    }());\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        clone = Snap._.clone,\n        has = \"hasOwnProperty\",\n        p2s = /,?([a-z]),?/gi,\n        toFloat = parseFloat,\n        math = Math,\n        PI = math.PI,\n        mmin = math.min,\n        mmax = math.max,\n        pow = math.pow,\n        abs = math.abs;\n    function paths(ps) {\n        var p = paths.ps = paths.ps || {};\n        if (p[ps]) {\n            p[ps].sleep = 100;\n        } else {\n            p[ps] = {\n                sleep: 100\n            };\n        }\n        setTimeout(function () {\n            for (var key in p) if (p[has](key) && key != ps) {\n                p[key].sleep--;\n                !p[key].sleep && delete p[key];\n            }\n        });\n        return p[ps];\n    }\n    function box(x, y, width, height) {\n        if (x == null) {\n            x = y = width = height = 0;\n        }\n        if (y == null) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        return {\n            x: x,\n            y: y,\n            width: width,\n            w: width,\n            height: height,\n            h: height,\n            x2: x + width,\n            y2: y + height,\n            cx: x + width / 2,\n            cy: y + height / 2,\n            r1: math.min(width, height) / 2,\n            r2: math.max(width, height) / 2,\n            r0: math.sqrt(width * width + height * height) / 2,\n            path: rectPath(x, y, width, height),\n            vb: [x, y, width, height].join(\" \")\n        };\n    }\n    function toString() {\n        return this.join(\",\").replace(p2s, \"$1\");\n    }\n    function pathClone(pathArray) {\n        var res = clone(pathArray);\n        res.toString = toString;\n        return res;\n    }\n    function getPointAtSegmentLength(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\n        if (length == null) {\n            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n        } else {\n            return findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y,\n                getTotLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n        }\n    }\n    function getLengthFactory(istotal, subpath) {\n        function O(val) {\n            return +(+val).toFixed(3);\n        }\n        return Snap._.cacher(function (path, length, onlystart) {\n            if (path instanceof Element) {\n                path = path.attr(\"d\");\n            }\n            path = path2curve(path);\n            var x, y, p, l, sp = \"\", subpaths = {}, point,\n                len = 0;\n            for (var i = 0, ii = path.length; i < ii; i++) {\n                p = path[i];\n                if (p[0] == \"M\") {\n                    x = +p[1];\n                    y = +p[2];\n                } else {\n                    l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                    if (len + l > length) {\n                        if (subpath && !subpaths.start) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            sp += [\n                                \"C\" + O(point.start.x),\n                                O(point.start.y),\n                                O(point.m.x),\n                                O(point.m.y),\n                                O(point.x),\n                                O(point.y)\n                            ];\n                            if (onlystart) {return sp;}\n                            subpaths.start = sp;\n                            sp = [\n                                \"M\" + O(point.x),\n                                O(point.y) + \"C\" + O(point.n.x),\n                                O(point.n.y),\n                                O(point.end.x),\n                                O(point.end.y),\n                                O(p[5]),\n                                O(p[6])\n                            ].join();\n                            len += l;\n                            x = +p[5];\n                            y = +p[6];\n                            continue;\n                        }\n                        if (!istotal && !subpath) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            return point;\n                        }\n                    }\n                    len += l;\n                    x = +p[5];\n                    y = +p[6];\n                }\n                sp += p.shift() + p;\n            }\n            subpaths.end = sp;\n            point = istotal ? len : subpath ? subpaths : findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n            return point;\n        }, null, Snap._.clone);\n    }\n    var getTotalLength = getLengthFactory(1),\n        getPointAtLength = getLengthFactory(),\n        getSubpathsAtLength = getLengthFactory(0, 1);\n    function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t,\n            t13 = pow(t1, 3),\n            t12 = pow(t1, 2),\n            t2 = t * t,\n            t3 = t2 * t,\n            x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n            y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n            mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n            my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n            nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n            ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n            ax = t1 * p1x + t * c1x,\n            ay = t1 * p1y + t * c1y,\n            cx = t1 * c2x + t * p2x,\n            cy = t1 * c2y + t * p2y,\n            alpha = 90 - math.atan2(mx - nx, my - ny) * 180 / PI;\n        // (mx > nx || my < ny) && (alpha += 180);\n        return {\n            x: x,\n            y: y,\n            m: {x: mx, y: my},\n            n: {x: nx, y: ny},\n            start: {x: ax, y: ay},\n            end: {x: cx, y: cy},\n            alpha: alpha\n        };\n    }\n    function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n        if (!Snap.is(p1x, \"array\")) {\n            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n        }\n        var bbox = curveDim.apply(null, p1x);\n        return box(\n            bbox.min.x,\n            bbox.min.y,\n            bbox.max.x - bbox.min.x,\n            bbox.max.y - bbox.min.y\n        );\n    }\n    function isPointInsideBBox(bbox, x, y) {\n        return  x >= bbox.x &&\n                x <= bbox.x + bbox.width &&\n                y >= bbox.y &&\n                y <= bbox.y + bbox.height;\n    }\n    function isBBoxIntersect(bbox1, bbox2) {\n        bbox1 = box(bbox1);\n        bbox2 = box(bbox2);\n        return isPointInsideBBox(bbox2, bbox1.x, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2)\n            || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x\n                || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\n            && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y\n                || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n    }\n    function base3(t, p1, p2, p3, p4) {\n        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n            t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n        return t * t2 - 3 * p1 + 3 * p2;\n    }\n    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n        if (z == null) {\n            z = 1;\n        }\n        z = z > 1 ? 1 : z < 0 ? 0 : z;\n        var z2 = z / 2,\n            n = 12,\n            Tvalues = [-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],\n            Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\n            sum = 0;\n        for (var i = 0; i < n; i++) {\n            var ct = z2 * Tvalues[i] + z2,\n                xbase = base3(ct, x1, x2, x3, x4),\n                ybase = base3(ct, y1, y2, y3, y4),\n                comb = xbase * xbase + ybase * ybase;\n            sum += Cvalues[i] * math.sqrt(comb);\n        }\n        return z2 * sum;\n    }\n    function getTotLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n            return;\n        }\n        var t = 1,\n            step = t / 2,\n            t2 = t - step,\n            l,\n            e = .01;\n        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        while (abs(l - ll) > e) {\n            step /= 2;\n            t2 += (l < ll ? 1 : -1) * step;\n            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        }\n        return t2;\n    }\n    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        if (\n            mmax(x1, x2) < mmin(x3, x4) ||\n            mmin(x1, x2) > mmax(x3, x4) ||\n            mmax(y1, y2) < mmin(y3, y4) ||\n            mmin(y1, y2) > mmax(y3, y4)\n        ) {\n            return;\n        }\n        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n            ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n            denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n        if (!denominator) {\n            return;\n        }\n        var px = nx / denominator,\n            py = ny / denominator,\n            px2 = +px.toFixed(2),\n            py2 = +py.toFixed(2);\n        if (\n            px2 < +mmin(x1, x2).toFixed(2) ||\n            px2 > +mmax(x1, x2).toFixed(2) ||\n            px2 < +mmin(x3, x4).toFixed(2) ||\n            px2 > +mmax(x3, x4).toFixed(2) ||\n            py2 < +mmin(y1, y2).toFixed(2) ||\n            py2 > +mmax(y1, y2).toFixed(2) ||\n            py2 < +mmin(y3, y4).toFixed(2) ||\n            py2 > +mmax(y3, y4).toFixed(2)\n        ) {\n            return;\n        }\n        return {x: px, y: py};\n    }\n    function inter(bez1, bez2) {\n        return interHelper(bez1, bez2);\n    }\n    function interCount(bez1, bez2) {\n        return interHelper(bez1, bez2, 1);\n    }\n    function interHelper(bez1, bez2, justCount) {\n        var bbox1 = bezierBBox(bez1),\n            bbox2 = bezierBBox(bez2);\n        if (!isBBoxIntersect(bbox1, bbox2)) {\n            return justCount ? 0 : [];\n        }\n        var l1 = bezlen.apply(0, bez1),\n            l2 = bezlen.apply(0, bez2),\n            n1 = ~~(l1 / 8),\n            n2 = ~~(l2 / 8),\n            dots1 = [],\n            dots2 = [],\n            xy = {},\n            res = justCount ? 0 : [];\n        for (var i = 0; i < n1 + 1; i++) {\n            var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n            dots1.push({x: p.x, y: p.y, t: i / n1});\n        }\n        for (i = 0; i < n2 + 1; i++) {\n            p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n            dots2.push({x: p.x, y: p.y, t: i / n2});\n        }\n        for (i = 0; i < n1; i++) {\n            for (var j = 0; j < n2; j++) {\n                var di = dots1[i],\n                    di1 = dots1[i + 1],\n                    dj = dots2[j],\n                    dj1 = dots2[j + 1],\n                    ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\n                    cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\n                    is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n                if (is) {\n                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\n                        continue;\n                    }\n                    xy[is.x.toFixed(4)] = is.y.toFixed(4);\n                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n                        t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n                    if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n                        if (justCount) {\n                            res++;\n                        } else {\n                            res.push({\n                                x: is.x,\n                                y: is.y,\n                                t1: t1,\n                                t2: t2\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function pathIntersection(path1, path2) {\n        return interPathHelper(path1, path2);\n    }\n    function pathIntersectionNumber(path1, path2) {\n        return interPathHelper(path1, path2, 1);\n    }\n    function interPathHelper(path1, path2, justCount) {\n        path1 = path2curve(path1);\n        path2 = path2curve(path2);\n        var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\n            res = justCount ? 0 : [];\n        for (var i = 0, ii = path1.length; i < ii; i++) {\n            var pi = path1[i];\n            if (pi[0] == \"M\") {\n                x1 = x1m = pi[1];\n                y1 = y1m = pi[2];\n            } else {\n                if (pi[0] == \"C\") {\n                    bez1 = [x1, y1].concat(pi.slice(1));\n                    x1 = bez1[6];\n                    y1 = bez1[7];\n                } else {\n                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n                    x1 = x1m;\n                    y1 = y1m;\n                }\n                for (var j = 0, jj = path2.length; j < jj; j++) {\n                    var pj = path2[j];\n                    if (pj[0] == \"M\") {\n                        x2 = x2m = pj[1];\n                        y2 = y2m = pj[2];\n                    } else {\n                        if (pj[0] == \"C\") {\n                            bez2 = [x2, y2].concat(pj.slice(1));\n                            x2 = bez2[6];\n                            y2 = bez2[7];\n                        } else {\n                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n                            x2 = x2m;\n                            y2 = y2m;\n                        }\n                        var intr = interHelper(bez1, bez2, justCount);\n                        if (justCount) {\n                            res += intr;\n                        } else {\n                            for (var k = 0, kk = intr.length; k < kk; k++) {\n                                intr[k].segment1 = i;\n                                intr[k].segment2 = j;\n                                intr[k].bez1 = bez1;\n                                intr[k].bez2 = bez2;\n                            }\n                            res = res.concat(intr);\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function isPointInsidePath(path, x, y) {\n        var bbox = pathBBox(path);\n        return isPointInsideBBox(bbox, x, y) &&\n               interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\n    }\n    function pathBBox(path) {\n        var pth = paths(path);\n        if (pth.bbox) {\n            return clone(pth.bbox);\n        }\n        if (!path) {\n            return box();\n        }\n        path = path2curve(path);\n        var x = 0,\n            y = 0,\n            X = [],\n            Y = [],\n            p;\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            p = path[i];\n            if (p[0] == \"M\") {\n                x = p[1];\n                y = p[2];\n                X.push(x);\n                Y.push(y);\n            } else {\n                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                X = X.concat(dim.min.x, dim.max.x);\n                Y = Y.concat(dim.min.y, dim.max.y);\n                x = p[5];\n                y = p[6];\n            }\n        }\n        var xmin = mmin.apply(0, X),\n            ymin = mmin.apply(0, Y),\n            xmax = mmax.apply(0, X),\n            ymax = mmax.apply(0, Y),\n            bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\n        pth.bbox = clone(bb);\n        return bb;\n    }\n    function rectPath(x, y, w, h, r) {\n        if (r) {\n            return [\n                [\"M\", +x + +r, y],\n                [\"l\", w - r * 2, 0],\n                [\"a\", r, r, 0, 0, 1, r, r],\n                [\"l\", 0, h - r * 2],\n                [\"a\", r, r, 0, 0, 1, -r, r],\n                [\"l\", r * 2 - w, 0],\n                [\"a\", r, r, 0, 0, 1, -r, -r],\n                [\"l\", 0, r * 2 - h],\n                [\"a\", r, r, 0, 0, 1, r, -r],\n                [\"z\"]\n            ];\n        }\n        var res = [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\n        res.toString = toString;\n        return res;\n    }\n    function ellipsePath(x, y, rx, ry, a) {\n        if (a == null && ry == null) {\n            ry = rx;\n        }\n        x = +x;\n        y = +y;\n        rx = +rx;\n        ry = +ry;\n        if (a != null) {\n            var rad = Math.PI / 180,\n                x1 = x + rx * Math.cos(-ry * rad),\n                x2 = x + rx * Math.cos(-a * rad),\n                y1 = y + rx * Math.sin(-ry * rad),\n                y2 = y + rx * Math.sin(-a * rad),\n                res = [[\"M\", x1, y1], [\"A\", rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n        } else {\n            res = [\n                [\"M\", x, y],\n                [\"m\", 0, -ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry],\n                [\"z\"]\n            ];\n        }\n        res.toString = toString;\n        return res;\n    }\n    var unit2px = Snap._unit2px,\n        getPath = {\n        path: function (el) {\n            return el.attr(\"path\");\n        },\n        circle: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx, attr.cy, attr.r);\n        },\n        ellipse: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx || 0, attr.cy || 0, attr.rx, attr.ry);\n        },\n        rect: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height, attr.rx, attr.ry);\n        },\n        image: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height);\n        },\n        line: function (el) {\n            return \"M\" + [el.attr(\"x1\") || 0, el.attr(\"y1\") || 0, el.attr(\"x2\"), el.attr(\"y2\")];\n        },\n        polyline: function (el) {\n            return \"M\" + el.attr(\"points\");\n        },\n        polygon: function (el) {\n            return \"M\" + el.attr(\"points\") + \"z\";\n        },\n        deflt: function (el) {\n            var bbox = el.node.getBBox();\n            return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n        }\n    };\n    function pathToRelative(pathArray) {\n        var pth = paths(pathArray),\n            lowerCase = String.prototype.toLowerCase;\n        if (pth.rel) {\n            return pathClone(pth.rel);\n        }\n        if (!Snap.is(pathArray, \"array\") || !Snap.is(pathArray && pathArray[0], \"array\")) {\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0;\n        if (pathArray[0][0] == \"M\") {\n            x = pathArray[0][1];\n            y = pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res.push([\"M\", x, y]);\n        }\n        for (var i = start, ii = pathArray.length; i < ii; i++) {\n            var r = res[i] = [],\n                pa = pathArray[i];\n            if (pa[0] != lowerCase.call(pa[0])) {\n                r[0] = lowerCase.call(pa[0]);\n                switch (r[0]) {\n                    case \"a\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +(pa[6] - x).toFixed(3);\n                        r[7] = +(pa[7] - y).toFixed(3);\n                        break;\n                    case \"v\":\n                        r[1] = +(pa[1] - y).toFixed(3);\n                        break;\n                    case \"m\":\n                        mx = pa[1];\n                        my = pa[2];\n                    default:\n                        for (var j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +(pa[j] - (j % 2 ? x : y)).toFixed(3);\n                        }\n                }\n            } else {\n                r = res[i] = [];\n                if (pa[0] == \"m\") {\n                    mx = pa[1] + x;\n                    my = pa[2] + y;\n                }\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    res[i][k] = pa[k];\n                }\n            }\n            var len = res[i].length;\n            switch (res[i][0]) {\n                case \"z\":\n                    x = mx;\n                    y = my;\n                    break;\n                case \"h\":\n                    x += +res[i][len - 1];\n                    break;\n                case \"v\":\n                    y += +res[i][len - 1];\n                    break;\n                default:\n                    x += +res[i][len - 2];\n                    y += +res[i][len - 1];\n            }\n        }\n        res.toString = toString;\n        pth.rel = pathClone(res);\n        return res;\n    }\n    function pathToAbsolute(pathArray) {\n        var pth = paths(pathArray);\n        if (pth.abs) {\n            return pathClone(pth.abs);\n        }\n        if (!is(pathArray, \"array\") || !is(pathArray && pathArray[0], \"array\")) { // rough assumption\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        if (!pathArray || !pathArray.length) {\n            return [[\"M\", 0, 0]];\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0,\n            pa0;\n        if (pathArray[0][0] == \"M\") {\n            x = +pathArray[0][1];\n            y = +pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res[0] = [\"M\", x, y];\n        }\n        var crz = pathArray.length == 3 &&\n            pathArray[0][0] == \"M\" &&\n            pathArray[1][0].toUpperCase() == \"R\" &&\n            pathArray[2][0].toUpperCase() == \"Z\";\n        for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n            res.push(r = []);\n            pa = pathArray[i];\n            pa0 = pa[0];\n            if (pa0 != pa0.toUpperCase()) {\n                r[0] = pa0.toUpperCase();\n                switch (r[0]) {\n                    case \"A\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +pa[6] + x;\n                        r[7] = +pa[7] + y;\n                        break;\n                    case \"V\":\n                        r[1] = +pa[1] + y;\n                        break;\n                    case \"H\":\n                        r[1] = +pa[1] + x;\n                        break;\n                    case \"R\":\n                        var dots = [x, y].concat(pa.slice(1));\n                        for (var j = 2, jj = dots.length; j < jj; j++) {\n                            dots[j] = +dots[j] + x;\n                            dots[++j] = +dots[j] + y;\n                        }\n                        res.pop();\n                        res = res.concat(catmullRom2bezier(dots, crz));\n                        break;\n                    case \"O\":\n                        res.pop();\n                        dots = ellipsePath(x, y, pa[1], pa[2]);\n                        dots.push(dots[0]);\n                        res = res.concat(dots);\n                        break;\n                    case \"U\":\n                        res.pop();\n                        res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                        r = [\"U\"].concat(res[res.length - 1].slice(-2));\n                        break;\n                    case \"M\":\n                        mx = +pa[1] + x;\n                        my = +pa[2] + y;\n                    default:\n                        for (j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +pa[j] + (j % 2 ? x : y);\n                        }\n                }\n            } else if (pa0 == \"R\") {\n                dots = [x, y].concat(pa.slice(1));\n                res.pop();\n                res = res.concat(catmullRom2bezier(dots, crz));\n                r = [\"R\"].concat(pa.slice(-2));\n            } else if (pa0 == \"O\") {\n                res.pop();\n                dots = ellipsePath(x, y, pa[1], pa[2]);\n                dots.push(dots[0]);\n                res = res.concat(dots);\n            } else if (pa0 == \"U\") {\n                res.pop();\n                res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                r = [\"U\"].concat(res[res.length - 1].slice(-2));\n            } else {\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    r[k] = pa[k];\n                }\n            }\n            pa0 = pa0.toUpperCase();\n            if (pa0 != \"O\") {\n                switch (r[0]) {\n                    case \"Z\":\n                        x = +mx;\n                        y = +my;\n                        break;\n                    case \"H\":\n                        x = r[1];\n                        break;\n                    case \"V\":\n                        y = r[1];\n                        break;\n                    case \"M\":\n                        mx = r[r.length - 2];\n                        my = r[r.length - 1];\n                    default:\n                        x = r[r.length - 2];\n                        y = r[r.length - 1];\n                }\n            }\n        }\n        res.toString = toString;\n        pth.abs = pathClone(res);\n        return res;\n    }\n    function l2c(x1, y1, x2, y2) {\n        return [x1, y1, x2, y2, x2, y2];\n    }\n    function q2c(x1, y1, ax, ay, x2, y2) {\n        var _13 = 1 / 3,\n            _23 = 2 / 3;\n        return [\n                _13 * x1 + _23 * ax,\n                _13 * y1 + _23 * ay,\n                _13 * x2 + _23 * ax,\n                _13 * y2 + _23 * ay,\n                x2,\n                y2\n            ];\n    }\n    function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n        // for more information of where this math came from visit:\n        // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n        var _120 = PI * 120 / 180,\n            rad = PI / 180 * (+angle || 0),\n            res = [],\n            xy,\n            rotate = Snap._.cacher(function (x, y, rad) {\n                var X = x * math.cos(rad) - y * math.sin(rad),\n                    Y = x * math.sin(rad) + y * math.cos(rad);\n                return {x: X, y: Y};\n            });\n        if (!rx || !ry) {\n            return [x1, y1, x2, y2, x2, y2];\n        }\n        if (!recursive) {\n            xy = rotate(x1, y1, -rad);\n            x1 = xy.x;\n            y1 = xy.y;\n            xy = rotate(x2, y2, -rad);\n            x2 = xy.x;\n            y2 = xy.y;\n            var cos = math.cos(PI / 180 * angle),\n                sin = math.sin(PI / 180 * angle),\n                x = (x1 - x2) / 2,\n                y = (y1 - y2) / 2;\n            var h = x * x / (rx * rx) + y * y / (ry * ry);\n            if (h > 1) {\n                h = math.sqrt(h);\n                rx = h * rx;\n                ry = h * ry;\n            }\n            var rx2 = rx * rx,\n                ry2 = ry * ry,\n                k = (large_arc_flag == sweep_flag ? -1 : 1) *\n                    math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n                cx = k * rx * y / ry + (x1 + x2) / 2,\n                cy = k * -ry * x / rx + (y1 + y2) / 2,\n                f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n                f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n\n            f1 = x1 < cx ? PI - f1 : f1;\n            f2 = x2 < cx ? PI - f2 : f2;\n            f1 < 0 && (f1 = PI * 2 + f1);\n            f2 < 0 && (f2 = PI * 2 + f2);\n            if (sweep_flag && f1 > f2) {\n                f1 = f1 - PI * 2;\n            }\n            if (!sweep_flag && f2 > f1) {\n                f2 = f2 - PI * 2;\n            }\n        } else {\n            f1 = recursive[0];\n            f2 = recursive[1];\n            cx = recursive[2];\n            cy = recursive[3];\n        }\n        var df = f2 - f1;\n        if (abs(df) > _120) {\n            var f2old = f2,\n                x2old = x2,\n                y2old = y2;\n            f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n            x2 = cx + rx * math.cos(f2);\n            y2 = cy + ry * math.sin(f2);\n            res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n        }\n        df = f2 - f1;\n        var c1 = math.cos(f1),\n            s1 = math.sin(f1),\n            c2 = math.cos(f2),\n            s2 = math.sin(f2),\n            t = math.tan(df / 4),\n            hx = 4 / 3 * rx * t,\n            hy = 4 / 3 * ry * t,\n            m1 = [x1, y1],\n            m2 = [x1 + hx * s1, y1 - hy * c1],\n            m3 = [x2 + hx * s2, y2 - hy * c2],\n            m4 = [x2, y2];\n        m2[0] = 2 * m1[0] - m2[0];\n        m2[1] = 2 * m1[1] - m2[1];\n        if (recursive) {\n            return [m2, m3, m4].concat(res);\n        } else {\n            res = [m2, m3, m4].concat(res).join().split(\",\");\n            var newres = [];\n            for (var i = 0, ii = res.length; i < ii; i++) {\n                newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n            }\n            return newres;\n        }\n    }\n    function findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t;\n        return {\n            x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\n            y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\n        };\n    }\n\n    // Returns bounding box of cubic bezier curve.\n    // Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    // Original version: NISHIO Hirokazu\n    // Modifications: https://github.com/timo22345\n    function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\n        var tvalues = [],\n            bounds = [[], []],\n            a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n        for (var i = 0; i < 2; ++i) {\n            if (i == 0) {\n                b = 6 * x0 - 12 * x1 + 6 * x2;\n                a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n                c = 3 * x1 - 3 * x0;\n            } else {\n                b = 6 * y0 - 12 * y1 + 6 * y2;\n                a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n                c = 3 * y1 - 3 * y0;\n            }\n            if (abs(a) < 1e-12) {\n                if (abs(b) < 1e-12) {\n                    continue;\n                }\n                t = -c / b;\n                if (0 < t && t < 1) {\n                    tvalues.push(t);\n                }\n                continue;\n            }\n            b2ac = b * b - 4 * c * a;\n            sqrtb2ac = math.sqrt(b2ac);\n            if (b2ac < 0) {\n                continue;\n            }\n            t1 = (-b + sqrtb2ac) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n                tvalues.push(t1);\n            }\n            t2 = (-b - sqrtb2ac) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n                tvalues.push(t2);\n            }\n        }\n\n        var x, y, j = tvalues.length,\n            jlen = j,\n            mt;\n        while (j--) {\n            t = tvalues[j];\n            mt = 1 - t;\n            bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n            bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n        }\n\n        bounds[0][jlen] = x0;\n        bounds[1][jlen] = y0;\n        bounds[0][jlen + 1] = x3;\n        bounds[1][jlen + 1] = y3;\n        bounds[0].length = bounds[1].length = jlen + 2;\n\n\n        return {\n          min: {x: mmin.apply(0, bounds[0]), y: mmin.apply(0, bounds[1])},\n          max: {x: mmax.apply(0, bounds[0]), y: mmax.apply(0, bounds[1])}\n        };\n    }\n\n    function path2curve(path, path2) {\n        var pth = !path2 && paths(path);\n        if (!path2 && pth.curve) {\n            return pathClone(pth.curve);\n        }\n        var p = pathToAbsolute(path),\n            p2 = path2 && pathToAbsolute(path2),\n            attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            processPath = function (path, d, pcom) {\n                var nx, ny;\n                if (!path) {\n                    return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n                }\n                !(path[0] in {T: 1, Q: 1}) && (d.qx = d.qy = null);\n                switch (path[0]) {\n                    case \"M\":\n                        d.X = path[1];\n                        d.Y = path[2];\n                        break;\n                    case \"A\":\n                        path = [\"C\"].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n                        break;\n                    case \"S\":\n                        if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\n                            nx = d.x * 2 - d.bx;          // And reflect the previous\n                            ny = d.y * 2 - d.by;          // command's control point relative to the current point.\n                        }\n                        else {                            // or some else or nothing\n                            nx = d.x;\n                            ny = d.y;\n                        }\n                        path = [\"C\", nx, ny].concat(path.slice(1));\n                        break;\n                    case \"T\":\n                        if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\n                            d.qx = d.x * 2 - d.qx;        // And make a reflection similar\n                            d.qy = d.y * 2 - d.qy;        // to case \"S\".\n                        }\n                        else {                            // or something else or nothing\n                            d.qx = d.x;\n                            d.qy = d.y;\n                        }\n                        path = [\"C\"].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n                        break;\n                    case \"Q\":\n                        d.qx = path[1];\n                        d.qy = path[2];\n                        path = [\"C\"].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n                        break;\n                    case \"L\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], path[2]));\n                        break;\n                    case \"H\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], d.y));\n                        break;\n                    case \"V\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.x, path[1]));\n                        break;\n                    case \"Z\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.X, d.Y));\n                        break;\n                }\n                return path;\n            },\n            fixArc = function (pp, i) {\n                if (pp[i].length > 7) {\n                    pp[i].shift();\n                    var pi = pp[i];\n                    while (pi.length) {\n                        pcoms1[i] = \"A\"; // if created multiple C:s, their original seg is saved\n                        p2 && (pcoms2[i] = \"A\"); // the same as above\n                        pp.splice(i++, 0, [\"C\"].concat(pi.splice(0, 6)));\n                    }\n                    pp.splice(i, 1);\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            fixM = function (path1, path2, a1, a2, i) {\n                if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n                    path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n                    a1.bx = 0;\n                    a1.by = 0;\n                    a1.x = path1[i][1];\n                    a1.y = path1[i][2];\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            pcoms1 = [], // path commands of original path p\n            pcoms2 = [], // path commands of original path p2\n            pfirst = \"\", // temporary holder for original path command\n            pcom = \"\"; // holder for previous path command of original path\n        for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n            p[i] && (pfirst = p[i][0]); // save current path command\n\n            if (pfirst != \"C\") // C is not saved yet, because it may be result of conversion\n            {\n                pcoms1[i] = pfirst; // Save current path command\n                i && ( pcom = pcoms1[i - 1]); // Get previous path command pcom\n            }\n            p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n            if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n            // which may produce multiple C:s\n            // so we have to make sure that C is also C in original path\n\n            fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n            if (p2) { // the same procedures is done to p2\n                p2[i] && (pfirst = p2[i][0]);\n                if (pfirst != \"C\") {\n                    pcoms2[i] = pfirst;\n                    i && (pcom = pcoms2[i - 1]);\n                }\n                p2[i] = processPath(p2[i], attrs2, pcom);\n\n                if (pcoms2[i] != \"A\" && pfirst == \"C\") {\n                    pcoms2[i] = \"C\";\n                }\n\n                fixArc(p2, i);\n            }\n            fixM(p, p2, attrs, attrs2, i);\n            fixM(p2, p, attrs2, attrs, i);\n            var seg = p[i],\n                seg2 = p2 && p2[i],\n                seglen = seg.length,\n                seg2len = p2 && seg2.length;\n            attrs.x = seg[seglen - 2];\n            attrs.y = seg[seglen - 1];\n            attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n            attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n            attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n            attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n            attrs2.x = p2 && seg2[seg2len - 2];\n            attrs2.y = p2 && seg2[seg2len - 1];\n        }\n        if (!p2) {\n            pth.curve = pathClone(p);\n        }\n        return p2 ? [p, p2] : p;\n    }\n    function mapPath(path, matrix) {\n        if (!matrix) {\n            return path;\n        }\n        var x, y, i, j, ii, jj, pathi;\n        path = path2curve(path);\n        for (i = 0, ii = path.length; i < ii; i++) {\n            pathi = path[i];\n            for (j = 1, jj = pathi.length; j < jj; j += 2) {\n                x = matrix.x(pathi[j], pathi[j + 1]);\n                y = matrix.y(pathi[j], pathi[j + 1]);\n                pathi[j] = x;\n                pathi[j + 1] = y;\n            }\n        }\n        return path;\n    }\n\n    // http://schepers.cc/getting-to-the-point\n    function catmullRom2bezier(crp, z) {\n        var d = [];\n        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n            var p = [\n                        {x: +crp[i - 2], y: +crp[i - 1]},\n                        {x: +crp[i],     y: +crp[i + 1]},\n                        {x: +crp[i + 2], y: +crp[i + 3]},\n                        {x: +crp[i + 4], y: +crp[i + 5]}\n                    ];\n            if (z) {\n                if (!i) {\n                    p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\n                } else if (iLen - 4 == i) {\n                    p[3] = {x: +crp[0], y: +crp[1]};\n                } else if (iLen - 2 == i) {\n                    p[2] = {x: +crp[0], y: +crp[1]};\n                    p[3] = {x: +crp[2], y: +crp[3]};\n                }\n            } else {\n                if (iLen - 4 == i) {\n                    p[3] = p[2];\n                } else if (!i) {\n                    p[0] = {x: +crp[i], y: +crp[i + 1]};\n                }\n            }\n            d.push([\"C\",\n                  (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n                  (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n                  (p[1].x + 6 * p[2].x - p[3].x) / 6,\n                  (p[1].y + 6*p[2].y - p[3].y) / 6,\n                  p[2].x,\n                  p[2].y\n            ]);\n        }\n\n        return d;\n    }\n\n    // export\n    Snap.path = paths;\n\n    /*\\\n     * Snap.path.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the given path in pixels\n     **\n     - path (string) SVG path string\n     **\n     = (number) length\n    \\*/\n    Snap.path.getTotalLength = getTotalLength;\n    /*\\\n     * Snap.path.getPointAtLength\n     [ method ]\n     **\n     * Returns the coordinates of the point located at the given length along the given path\n     **\n     - path (string) SVG path string\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    Snap.path.getPointAtLength = getPointAtLength;\n    /*\\\n     * Snap.path.getSubpath\n     [ method ]\n     **\n     * Returns the subpath of a given path between given start and end lengths\n     **\n     - path (string) SVG path string\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    Snap.path.getSubpath = function (path, from, to) {\n        if (this.getTotalLength(path) - to < 1e-6) {\n            return getSubpathsAtLength(path, from).end;\n        }\n        var a = getSubpathsAtLength(path, to, 1);\n        return from ? getSubpathsAtLength(a, from).end : a;\n    };\n    /*\\\n     * Element.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the path in pixels (only works for `path` elements)\n     = (number) length\n    \\*/\n    elproto.getTotalLength = function () {\n        if (this.node.getTotalLength) {\n            return this.node.getTotalLength();\n        }\n    };\n    // SIERRA Element.getPointAtLength()/Element.getTotalLength(): If a <path> is broken into different segments, is the jump distance to the new coordinates set by the _M_ or _m_ commands calculated as part of the path's total length?\n    /*\\\n     * Element.getPointAtLength\n     [ method ]\n     **\n     * Returns coordinates of the point located at the given length on the given path (only works for `path` elements)\n     **\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    elproto.getPointAtLength = function (length) {\n        return getPointAtLength(this.attr(\"d\"), length);\n    };\n    // SIERRA Element.getSubpath(): Similar to the problem for Element.getPointAtLength(). Unclear how this would work for a segmented path. Overall, the concept of _subpath_ and what I'm calling a _segment_ (series of non-_M_ or _Z_ commands) is unclear.\n    /*\\\n     * Element.getSubpath\n     [ method ]\n     **\n     * Returns subpath of a given element from given start and end lengths (only works for `path` elements)\n     **\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    elproto.getSubpath = function (from, to) {\n        return Snap.path.getSubpath(this.attr(\"d\"), from, to);\n    };\n    Snap._.box = box;\n    /*\\\n     * Snap.path.findDotsAtSegment\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds dot coordinates on the given cubic beziér curve at the given t\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     - t (number) position on the curve (0..1)\n     = (object) point information in format:\n     o {\n     o     x: (number) x coordinate of the point,\n     o     y: (number) y coordinate of the point,\n     o     m: {\n     o         x: (number) x coordinate of the left anchor,\n     o         y: (number) y coordinate of the left anchor\n     o     },\n     o     n: {\n     o         x: (number) x coordinate of the right anchor,\n     o         y: (number) y coordinate of the right anchor\n     o     },\n     o     start: {\n     o         x: (number) x coordinate of the start of the curve,\n     o         y: (number) y coordinate of the start of the curve\n     o     },\n     o     end: {\n     o         x: (number) x coordinate of the end of the curve,\n     o         y: (number) y coordinate of the end of the curve\n     o     },\n     o     alpha: (number) angle of the curve derivative at the point\n     o }\n    \\*/\n    Snap.path.findDotsAtSegment = findDotsAtSegment;\n    /*\\\n     * Snap.path.bezierBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given cubic beziér curve\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     * or\n     - bez (array) array of six points for beziér curve\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.bezierBBox = bezierBBox;\n    /*\\\n     * Snap.path.isPointInsideBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside bounding box\n     - bbox (string) bounding box\n     - x (string) x coordinate of the point\n     - y (string) y coordinate of the point\n     = (boolean) `true` if point is inside\n    \\*/\n    Snap.path.isPointInsideBBox = isPointInsideBBox;\n    Snap.closest = function (x, y, X, Y) {\n        var r = 100,\n            b = box(x - r / 2, y - r / 2, r, r),\n            inside = [],\n            getter = X[0].hasOwnProperty(\"x\") ? function (i) {\n                return {\n                    x: X[i].x,\n                    y: X[i].y\n                };\n            } : function (i) {\n                return {\n                    x: X[i],\n                    y: Y[i]\n                };\n            },\n            found = 0;\n        while (r <= 1e6 && !found) {\n            for (var i = 0, ii = X.length; i < ii; i++) {\n                var xy = getter(i);\n                if (isPointInsideBBox(b, xy.x, xy.y)) {\n                    found++;\n                    inside.push(xy);\n                    break;\n                }\n            }\n            if (!found) {\n                r *= 2;\n                b = box(x - r / 2, y - r / 2, r, r)\n            }\n        }\n        if (r == 1e6) {\n            return;\n        }\n        var len = Infinity,\n            res;\n        for (i = 0, ii = inside.length; i < ii; i++) {\n            var l = Snap.len(x, y, inside[i].x, inside[i].y);\n            if (len > l) {\n                len = l;\n                inside[i].len = l;\n                res = inside[i];\n            }\n        }\n        return res;\n    };\n    /*\\\n     * Snap.path.isBBoxIntersect\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if two bounding boxes intersect\n     - bbox1 (string) first bounding box\n     - bbox2 (string) second bounding box\n     = (boolean) `true` if bounding boxes intersect\n    \\*/\n    Snap.path.isBBoxIntersect = isBBoxIntersect;\n    /*\\\n     * Snap.path.intersection\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds intersections of two paths\n     - path1 (string) path string\n     - path2 (string) path string\n     = (array) dots of intersection\n     o [\n     o     {\n     o         x: (number) x coordinate of the point,\n     o         y: (number) y coordinate of the point,\n     o         t1: (number) t value for segment of path1,\n     o         t2: (number) t value for segment of path2,\n     o         segment1: (number) order number for segment of path1,\n     o         segment2: (number) order number for segment of path2,\n     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1,\n     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\n     o     }\n     o ]\n    \\*/\n    Snap.path.intersection = pathIntersection;\n    Snap.path.intersectionNumber = pathIntersectionNumber;\n    /*\\\n     * Snap.path.isPointInside\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside a given closed path.\n     *\n     * Note: fill mode doesn’t affect the result of this method.\n     - path (string) path string\n     - x (number) x of the point\n     - y (number) y of the point\n     = (boolean) `true` if point is inside the path\n    \\*/\n    Snap.path.isPointInside = isPointInsidePath;\n    /*\\\n     * Snap.path.getBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given path\n     - path (string) path string\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.getBBox = pathBBox;\n    Snap.path.get = getPath;\n    /*\\\n     * Snap.path.toRelative\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into relative values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toRelative = pathToRelative;\n    /*\\\n     * Snap.path.toAbsolute\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into absolute values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toAbsolute = pathToAbsolute;\n    /*\\\n     * Snap.path.toCubic\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path to a new path where all segments are cubic beziér curves\n     - pathString (string|array) path string or array of segments\n     = (array) array of segments\n    \\*/\n    Snap.path.toCubic = path2curve;\n    /*\\\n     * Snap.path.map\n     [ method ]\n     **\n     * Transform the path string with the given matrix\n     - path (string) path string\n     - matrix (object) see @Matrix\n     = (string) transformed path string\n    \\*/\n    Snap.path.map = mapPath;\n    Snap.path.toString = toString;\n    Snap.path.clone = pathClone;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var mmax = Math.max,\n        mmin = Math.min;\n\n    // Set\n    var Set = function (items) {\n        this.items = [];\n\tthis.bindings = {};\n        this.length = 0;\n        this.type = \"set\";\n        if (items) {\n            for (var i = 0, ii = items.length; i < ii; i++) {\n                if (items[i]) {\n                    this[this.items.length] = this.items[this.items.length] = items[i];\n                    this.length++;\n                }\n            }\n        }\n    },\n    setproto = Set.prototype;\n    /*\\\n     * Set.push\n     [ method ]\n     **\n     * Adds each argument to the current set\n     = (object) original element\n    \\*/\n    setproto.push = function () {\n        var item,\n            len;\n        for (var i = 0, ii = arguments.length; i < ii; i++) {\n            item = arguments[i];\n            if (item) {\n                len = this.items.length;\n                this[len] = this.items[len] = item;\n                this.length++;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.pop\n     [ method ]\n     **\n     * Removes last element and returns it\n     = (object) element\n    \\*/\n    setproto.pop = function () {\n        this.length && delete this[this.length--];\n        return this.items.pop();\n    };\n    /*\\\n     * Set.forEach\n     [ method ]\n     **\n     * Executes given function for each element in the set\n     *\n     * If the function returns `false`, the loop stops running.\n     **\n     - callback (function) function to run\n     - thisArg (object) context object for the callback\n     = (object) Set object\n    \\*/\n    setproto.forEach = function (callback, thisArg) {\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            if (callback.call(thisArg, this.items[i], i) === false) {\n                return this;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.animate\n     [ method ]\n     **\n     * Animates each element in set in sync.\n     *\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     * or\n     - animation (array) array of animation parameter for each element in set in format `[attrs, duration, easing, callback]`\n     > Usage\n     | // animate all elements in set to radius 10\n     | set.animate({r: 10}, 500, mina.easein);\n     | // or\n     | // animate first element to radius 10, but second to radius 20 and in different time\n     | set.animate([{r: 10}, 500, mina.easein], [{r: 20}, 1500, mina.easein]);\n     = (Element) the current element\n    \\*/\n    setproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Snap._.Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = easing.dur;\n            attrs = attrs.attr;\n        }\n        var args = arguments;\n        if (Snap.is(attrs, \"array\") && Snap.is(args[args.length - 1], \"array\")) {\n            var each = true;\n        }\n        var begin,\n            handler = function () {\n                if (begin) {\n                    this.b = begin;\n                } else {\n                    begin = this.b;\n                }\n            },\n            cb = 0,\n            set = this,\n            callbacker = callback && function () {\n                if (++cb == set.length) {\n                    callback.call(this);\n                }\n            };\n        return this.forEach(function (el, i) {\n            eve.once(\"snap.animcreated.\" + el.id, handler);\n            if (each) {\n                args[i] && el.animate.apply(el, args[i]);\n            } else {\n                el.animate(attrs, ms, easing, callbacker);\n            }\n        });\n    };\n    /*\\\n     * Set.remove\n     [ method ]\n     **\n     * Removes all children of the set.\n     *\n     = (object) Set object\n    \\*/\n    setproto.remove = function () {\n        while (this.length) {\n            this.pop().remove();\n        }\n        return this;\n    };\n    /*\\\n     * Set.bind\n     [ method ]\n     **\n     * Specifies how to handle a specific attribute when applied\n     * to a set.\n     *\n     **\n     - attr (string) attribute name\n     - callback (function) function to run\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     - eattr (string) attribute on the element to bind the attribute to\n     = (object) Set object\n    \\*/\n    setproto.bind = function (attr, a, b) {\n        var data = {};\n        if (typeof a == \"function\") {\n            this.bindings[attr] = a;\n        } else {\n            var aname = b || attr;\n            this.bindings[attr] = function (v) {\n                data[aname] = v;\n                a.attr(data);\n            };\n        }\n        return this;\n    };\n    /*\\\n     * Set.attr\n     [ method ]\n     **\n     * Equivalent of @Element.attr.\n     = (object) Set object\n    \\*/\n    setproto.attr = function (value) {\n        var unbound = {};\n        for (var k in value) {\n            if (this.bindings[k]) {\n                this.bindings[k](value[k]);\n            } else {\n                unbound[k] = value[k];\n            }\n        }\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            this.items[i].attr(unbound);\n        }\n        return this;\n    };\n    /*\\\n     * Set.clear\n     [ method ]\n     **\n     * Removes all elements from the set\n    \\*/\n    setproto.clear = function () {\n        while (this.length) {\n            this.pop();\n        }\n    };\n    /*\\\n     * Set.splice\n     [ method ]\n     **\n     * Removes range of elements from the set\n     **\n     - index (number) position of the deletion\n     - count (number) number of element to remove\n     - insertion… (object) #optional elements to insert\n     = (object) set elements that were deleted\n    \\*/\n    setproto.splice = function (index, count, insertion) {\n        index = index < 0 ? mmax(this.length + index, 0) : index;\n        count = mmax(0, mmin(this.length - index, count));\n        var tail = [],\n            todel = [],\n            args = [],\n            i;\n        for (i = 2; i < arguments.length; i++) {\n            args.push(arguments[i]);\n        }\n        for (i = 0; i < count; i++) {\n            todel.push(this[index + i]);\n        }\n        for (; i < this.length - index; i++) {\n            tail.push(this[index + i]);\n        }\n        var arglen = args.length;\n        for (i = 0; i < arglen + tail.length; i++) {\n            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\n        }\n        i = this.items.length = this.length -= count - arglen;\n        while (this[i]) {\n            delete this[i++];\n        }\n        return new Set(todel);\n    };\n    /*\\\n     * Set.exclude\n     [ method ]\n     **\n     * Removes given element from the set\n     **\n     - element (object) element to remove\n     = (boolean) `true` if object was found and removed from the set\n    \\*/\n    setproto.exclude = function (el) {\n        for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\n            this.splice(i, 1);\n            return true;\n        }\n        return false;\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Inserts set elements after given element.\n     **\n     - element (object) set will be inserted after this element\n     = (object) Set object\n    \\*/\n    setproto.insertAfter = function (el) {\n        var i = this.items.length;\n        while (i--) {\n            this.items[i].insertAfter(el);\n        }\n        return this;\n    };\n    /*\\\n     * Set.getBBox\n     [ method ]\n     **\n     * Union of all bboxes of the set. See @Element.getBBox.\n     = (object) bounding box descriptor. See @Element.getBBox.\n    \\*/\n    setproto.getBBox = function () {\n        var x = [],\n            y = [],\n            x2 = [],\n            y2 = [];\n        for (var i = this.items.length; i--;) if (!this.items[i].removed) {\n            var box = this.items[i].getBBox();\n            x.push(box.x);\n            y.push(box.y);\n            x2.push(box.x + box.width);\n            y2.push(box.y + box.height);\n        }\n        x = mmin.apply(0, x);\n        y = mmin.apply(0, y);\n        x2 = mmax.apply(0, x2);\n        y2 = mmax.apply(0, y2);\n        return {\n            x: x,\n            y: y,\n            x2: x2,\n            y2: y2,\n            width: x2 - x,\n            height: y2 - y,\n            cx: x + (x2 - x) / 2,\n            cy: y + (y2 - y) / 2\n        };\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Creates a clone of the set.\n     **\n     = (object) New Set object\n    \\*/\n    setproto.clone = function (s) {\n        s = new Set;\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            s.push(this.items[i].clone());\n        }\n        return s;\n    };\n    setproto.toString = function () {\n        return \"Snap\\u2018s set\";\n    };\n    setproto.type = \"set\";\n    // export\n    /*\\\n     * Snap.Set\n     [ property ]\n     **\n     * Set constructor.\n    \\*/\n    Snap.Set = Set;\n    /*\\\n     * Snap.set\n     [ method ]\n     **\n     * Creates a set and fills it with list of arguments.\n     **\n     = (object) New Set object\n     | var r = paper.rect(0, 0, 10, 10),\n     |     s1 = Snap.set(), // empty set\n     |     s2 = Snap.set(r, paper.circle(100, 100, 20)); // prefilled set\n    \\*/\n    Snap.set = function () {\n        var set = new Set;\n        if (arguments.length) {\n            set.push.apply(set, Array.prototype.slice.call(arguments, 0));\n        }\n        return set;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var names = {},\n        reUnit = /[%a-z]+$/i,\n        Str = String;\n    names.stroke = names.fill = \"colour\";\n    function getEmpty(item) {\n        var l = item[0];\n        switch (l.toLowerCase()) {\n            case \"t\": return [l, 0, 0];\n            case \"m\": return [l, 1, 0, 0, 1, 0, 0];\n            case \"r\": if (item.length == 4) {\n                return [l, 0, item[2], item[3]];\n            } else {\n                return [l, 0];\n            }\n            case \"s\": if (item.length == 5) {\n                return [l, 1, 1, item[3], item[4]];\n            } else if (item.length == 3) {\n                return [l, 1, 1];\n            } else {\n                return [l, 1];\n            }\n        }\n    }\n    function equaliseTransform(t1, t2, getBBox) {\n        t1 = t1 || new Snap.Matrix;\n        t2 = t2 || new Snap.Matrix;\n        t1 = Snap.parseTransformString(t1.toTransformString()) || [];\n        t2 = Snap.parseTransformString(t2.toTransformString()) || [];\n        var maxlength = Math.max(t1.length, t2.length),\n            from = [],\n            to = [],\n            i = 0, j, jj,\n            tt1, tt2;\n        for (; i < maxlength; i++) {\n            tt1 = t1[i] || getEmpty(t2[i]);\n            tt2 = t2[i] || getEmpty(tt1);\n            if (tt1[0] != tt2[0] ||\n                tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3]) ||\n                tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4])\n                ) {\n                    t1 = Snap._.transform2matrix(t1, getBBox());\n                    t2 = Snap._.transform2matrix(t2, getBBox());\n                    from = [[\"m\", t1.a, t1.b, t1.c, t1.d, t1.e, t1.f]];\n                    to = [[\"m\", t2.a, t2.b, t2.c, t2.d, t2.e, t2.f]];\n                    break;\n            }\n            from[i] = [];\n            to[i] = [];\n            for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\n                j in tt1 && (from[i][j] = tt1[j]);\n                j in tt2 && (to[i][j] = tt2[j]);\n            }\n        }\n        return {\n            from: path2array(from),\n            to: path2array(to),\n            f: getPath(from)\n        };\n    }\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    function getViewBox(val) {\n        return val.join(\" \");\n    }\n    function getColour(clr) {\n        return Snap.rgb(clr[0], clr[1], clr[2], clr[3]);\n    }\n    function getPath(path) {\n        var k = 0, i, ii, j, jj, out, a, b = [];\n        for (i = 0, ii = path.length; i < ii; i++) {\n            out = \"[\";\n            a = ['\"' + path[i][0] + '\"'];\n            for (j = 1, jj = path[i].length; j < jj; j++) {\n                a[j] = \"val[\" + k++ + \"]\";\n            }\n            out += a + \"]\";\n            b[i] = out;\n        }\n        return Function(\"val\", \"return Snap.path.toString.call([\" + b + \"])\");\n    }\n    function path2array(path) {\n        var out = [];\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            for (var j = 1, jj = path[i].length; j < jj; j++) {\n                out.push(path[i][j]);\n            }\n        }\n        return out;\n    }\n    function isNumeric(obj) {\n        return isFinite(obj);\n    }\n    function arrayEqual(arr1, arr2) {\n        if (!Snap.is(arr1, \"array\") || !Snap.is(arr2, \"array\")) {\n            return false;\n        }\n        return arr1.toString() == arr2.toString();\n    }\n    Element.prototype.equal = function (name, b) {\n        return eve(\"snap.util.equal\", this, name, b).firstDefined();\n    };\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this;\n        if (names[name] == \"colour\") {\n            A = Snap.color(a);\n            B = Snap.color(b);\n            return {\n                from: [A.r, A.g, A.b, A.opacity],\n                to: [B.r, B.g, B.b, B.opacity],\n                f: getColour\n            };\n        }\n        if (name == \"viewBox\") {\n            A = this.attr(name).vb.split(\" \").map(Number);\n            B = b.split(\" \").map(Number);\n            return {\n                from: A,\n                to: B,\n                f: getViewBox\n            };\n        }\n        if (name == \"transform\" || name == \"gradientTransform\" || name == \"patternTransform\") {\n            if (typeof b == \"string\") {\n                b = Str(b).replace(/\\.{3}|\\u2026/g, a);\n            }\n            a = this.matrix;\n            if (!Snap._.rgTransform.test(b)) {\n                b = Snap._.transform2matrix(Snap._.svgTransform2string(b), this.getBBox());\n            } else {\n                b = Snap._.transform2matrix(b, this.getBBox());\n            }\n            return equaliseTransform(a, b, function () {\n                return el.getBBox(1);\n            });\n        }\n        if (name == \"d\" || name == \"path\") {\n            A = Snap.path.toCubic(a, b);\n            return {\n                from: path2array(A[0]),\n                to: path2array(A[1]),\n                f: getPath(A[0])\n            };\n        }\n        if (name == \"points\") {\n            A = Str(a).split(Snap._.separator);\n            B = Str(b).split(Snap._.separator);\n            return {\n                from: A,\n                to: B,\n                f: function (val) { return val; }\n            };\n        }\n        if (isNumeric(a) && isNumeric(b)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getNumber\n            };\n        }\n        var aUnit = a.match(reUnit),\n            bUnit = Str(b).match(reUnit);\n        if (aUnit && arrayEqual(aUnit, bUnit)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getUnit(aUnit)\n            };\n        } else {\n            return {\n                from: this.asPX(name),\n                to: this.asPX(name, b),\n                f: getNumber\n            };\n        }\n    });\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n    has = \"hasOwnProperty\",\n    supportsTouch = \"createTouch\" in glob.doc,\n    events = [\n        \"click\", \"dblclick\", \"mousedown\", \"mousemove\", \"mouseout\",\n        \"mouseover\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\",\n        \"touchcancel\"\n    ],\n    touchMap = {\n        mousedown: \"touchstart\",\n        mousemove: \"touchmove\",\n        mouseup: \"touchend\"\n    },\n    getScroll = function (xy, el) {\n        var name = xy == \"y\" ? \"scrollTop\" : \"scrollLeft\",\n            doc = el && el.node ? el.node.ownerDocument : glob.doc;\n        return doc[name in doc.documentElement ? \"documentElement\" : \"body\"][name];\n    },\n    preventDefault = function () {\n        this.returnValue = false;\n    },\n    preventTouch = function () {\n        return this.originalEvent.preventDefault();\n    },\n    stopPropagation = function () {\n        this.cancelBubble = true;\n    },\n    stopTouch = function () {\n        return this.originalEvent.stopPropagation();\n    },\n    addEvent = function (obj, type, fn, element) {\n        var realName = supportsTouch && touchMap[type] ? touchMap[type] : type,\n            f = function (e) {\n                var scrollY = getScroll(\"y\", element),\n                    scrollX = getScroll(\"x\", element);\n                if (supportsTouch && touchMap[has](type)) {\n                    for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\n                        if (e.targetTouches[i].target == obj || obj.contains(e.targetTouches[i].target)) {\n                            var olde = e;\n                            e = e.targetTouches[i];\n                            e.originalEvent = olde;\n                            e.preventDefault = preventTouch;\n                            e.stopPropagation = stopTouch;\n                            break;\n                        }\n                    }\n                }\n                var x = e.clientX + scrollX,\n                    y = e.clientY + scrollY;\n                return fn.call(element, e, x, y);\n            };\n\n        if (type !== realName) {\n            obj.addEventListener(type, f, false);\n        }\n\n        obj.addEventListener(realName, f, false);\n\n        return function () {\n            if (type !== realName) {\n                obj.removeEventListener(type, f, false);\n            }\n\n            obj.removeEventListener(realName, f, false);\n            return true;\n        };\n    },\n    drag = [],\n    dragMove = function (e) {\n        var x = e.clientX,\n            y = e.clientY,\n            scrollY = getScroll(\"y\"),\n            scrollX = getScroll(\"x\"),\n            dragi,\n            j = drag.length;\n        while (j--) {\n            dragi = drag[j];\n            if (supportsTouch) {\n                var i = e.touches && e.touches.length,\n                    touch;\n                while (i--) {\n                    touch = e.touches[i];\n                    if (touch.identifier == dragi.el._drag.id || dragi.el.node.contains(touch.target)) {\n                        x = touch.clientX;\n                        y = touch.clientY;\n                        (e.originalEvent ? e.originalEvent : e).preventDefault();\n                        break;\n                    }\n                }\n            } else {\n                e.preventDefault();\n            }\n            var node = dragi.el.node,\n                o,\n                next = node.nextSibling,\n                parent = node.parentNode,\n                display = node.style.display;\n            // glob.win.opera && parent.removeChild(node);\n            // node.style.display = \"none\";\n            // o = dragi.el.paper.getElementByPoint(x, y);\n            // node.style.display = display;\n            // glob.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\n            // o && eve(\"snap.drag.over.\" + dragi.el.id, dragi.el, o);\n            x += scrollX;\n            y += scrollY;\n            eve(\"snap.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\n        }\n    },\n    dragUp = function (e) {\n        Snap.unmousemove(dragMove).unmouseup(dragUp);\n        var i = drag.length,\n            dragi;\n        while (i--) {\n            dragi = drag[i];\n            dragi.el._drag = {};\n            eve(\"snap.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\n            eve.off(\"snap.drag.*.\" + dragi.el.id);\n        }\n        drag = [];\n    };\n    /*\\\n     * Element.click\n     [ method ]\n     **\n     * Adds a click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unclick\n     [ method ]\n     **\n     * Removes a click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.dblclick\n     [ method ]\n     **\n     * Adds a double click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.undblclick\n     [ method ]\n     **\n     * Removes a double click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousedown\n     [ method ]\n     **\n     * Adds a mousedown event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousedown\n     [ method ]\n     **\n     * Removes a mousedown event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousemove\n     [ method ]\n     **\n     * Adds a mousemove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousemove\n     [ method ]\n     **\n     * Removes a mousemove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseout\n     [ method ]\n     **\n     * Adds a mouseout event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseout\n     [ method ]\n     **\n     * Removes a mouseout event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseover\n     [ method ]\n     **\n     * Adds a mouseover event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseover\n     [ method ]\n     **\n     * Removes a mouseover event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseup\n     [ method ]\n     **\n     * Adds a mouseup event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseup\n     [ method ]\n     **\n     * Removes a mouseup event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchstart\n     [ method ]\n     **\n     * Adds a touchstart event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchstart\n     [ method ]\n     **\n     * Removes a touchstart event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchmove\n     [ method ]\n     **\n     * Adds a touchmove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchmove\n     [ method ]\n     **\n     * Removes a touchmove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchend\n     [ method ]\n     **\n     * Adds a touchend event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchend\n     [ method ]\n     **\n     * Removes a touchend event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchcancel\n     [ method ]\n     **\n     * Adds a touchcancel event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchcancel\n     [ method ]\n     **\n     * Removes a touchcancel event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    for (var i = events.length; i--;) {\n        (function (eventName) {\n            Snap[eventName] = elproto[eventName] = function (fn, scope) {\n                if (Snap.is(fn, \"function\")) {\n                    this.events = this.events || [];\n                    this.events.push({\n                        name: eventName,\n                        f: fn,\n                        unbind: addEvent(this.node || document, eventName, fn, scope || this)\n                    });\n                } else {\n                    for (var i = 0, ii = this.events.length; i < ii; i++) if (this.events[i].name == eventName) {\n                        try {\n                            this.events[i].f.call(this);\n                        } catch (e) {}\n                    }\n                }\n                return this;\n            };\n            Snap[\"un\" + eventName] =\n            elproto[\"un\" + eventName] = function (fn) {\n                var events = this.events || [],\n                    l = events.length;\n                while (l--) if (events[l].name == eventName &&\n                               (events[l].f == fn || !fn)) {\n                    events[l].unbind();\n                    events.splice(l, 1);\n                    !events.length && delete this.events;\n                    return this;\n                }\n                return this;\n            };\n        })(events[i]);\n    }\n    /*\\\n     * Element.hover\n     [ method ]\n     **\n     * Adds hover event handlers to the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     - icontext (object) #optional context for hover in handler\n     - ocontext (object) #optional context for hover out handler\n     = (object) @Element\n    \\*/\n    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\n        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\n    };\n    /*\\\n     * Element.unhover\n     [ method ]\n     **\n     * Removes hover event handlers from the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     = (object) @Element\n    \\*/\n    elproto.unhover = function (f_in, f_out) {\n        return this.unmouseover(f_in).unmouseout(f_out);\n    };\n    var draggable = [];\n    // SIERRA unclear what _context_ refers to for starting, ending, moving the drag gesture.\n    // SIERRA Element.drag(): _x position of the mouse_: Where are the x/y values offset from?\n    // SIERRA Element.drag(): much of this member's doc appears to be duplicated for some reason.\n    // SIERRA Unclear about this sentence: _Additionally following drag events will be triggered: drag.start.<id> on start, drag.end.<id> on end and drag.move.<id> on every move._ Is there a global _drag_ object to which you can assign handlers keyed by an element's ID?\n    /*\\\n     * Element.drag\n     [ method ]\n     **\n     * Adds event handlers for an element's drag gesture\n     **\n     - onmove (function) handler for moving\n     - onstart (function) handler for drag start\n     - onend (function) handler for drag end\n     - mcontext (object) #optional context for moving handler\n     - scontext (object) #optional context for drag start handler\n     - econtext (object) #optional context for drag end handler\n     * Additionaly following `drag` events are triggered: `drag.start.<id>` on start, \n     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element is dragged over another element \n     * `drag.over.<id>` fires as well.\n     *\n     * Start event and start handler are called in specified context or in context of the element with following parameters:\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * Move event and move handler are called in specified context or in context of the element with following parameters:\n     o dx (number) shift by x from the start point\n     o dy (number) shift by y from the start point\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * End event and end handler are called in specified context or in context of the element with following parameters:\n     o event (object) DOM event object\n     = (object) @Element\n    \\*/\n    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\n        var el = this;\n        if (!arguments.length) {\n            var origTransform;\n            return el.drag(function (dx, dy) {\n                this.attr({\n                    transform: origTransform + (origTransform ? \"T\" : \"t\") + [dx, dy]\n                });\n            }, function () {\n                origTransform = this.transform().local;\n            });\n        }\n        function start(e, x, y) {\n            (e.originalEvent || e).preventDefault();\n            el._drag.x = x;\n            el._drag.y = y;\n            el._drag.id = e.identifier;\n            !drag.length && Snap.mousemove(dragMove).mouseup(dragUp);\n            drag.push({el: el, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope});\n            onstart && eve.on(\"snap.drag.start.\" + el.id, onstart);\n            onmove && eve.on(\"snap.drag.move.\" + el.id, onmove);\n            onend && eve.on(\"snap.drag.end.\" + el.id, onend);\n            eve(\"snap.drag.start.\" + el.id, start_scope || move_scope || el, x, y, e);\n        }\n        function init(e, x, y) {\n            eve(\"snap.draginit.\" + el.id, el, e, x, y);\n        }\n        eve.on(\"snap.draginit.\" + el.id, start);\n        el._drag = {};\n        draggable.push({el: el, start: start, init: init});\n        el.mousedown(init);\n        return el;\n    };\n    /*\n     * Element.onDragOver\n     [ method ]\n     **\n     * Shortcut to assign event handler for `drag.over.<id>` event, where `id` is the element's `id` (see @Element.id)\n     - f (function) handler for event, first argument would be the element you are dragging over\n    \\*/\n    // elproto.onDragOver = function (f) {\n    //     f ? eve.on(\"snap.drag.over.\" + this.id, f) : eve.unbind(\"snap.drag.over.\" + this.id);\n    // };\n    /*\\\n     * Element.undrag\n     [ method ]\n     **\n     * Removes all drag event handlers from the given element\n    \\*/\n    elproto.undrag = function () {\n        var i = draggable.length;\n        while (i--) if (draggable[i].el == this) {\n            this.unmousedown(draggable[i].init);\n            draggable.splice(i, 1);\n            eve.unbind(\"snap.drag.*.\" + this.id);\n            eve.unbind(\"snap.draginit.\" + this.id);\n        }\n        !draggable.length && Snap.unmousemove(dragMove).unmouseup(dragUp);\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        pproto = Paper.prototype,\n        rgurl = /^\\s*url\\((.+)\\)/,\n        Str = String,\n        $ = Snap._.$;\n    Snap.filter = {};\n    /*\\\n     * Paper.filter\n     [ method ]\n     **\n     * Creates a `<filter>` element\n     **\n     - filstr (string) SVG fragment of filter provided as a string\n     = (object) @Element\n     * Note: It is recommended to use filters embedded into the page inside an empty SVG element.\n     > Usage\n     | var f = paper.filter('<feGaussianBlur stdDeviation=\"2\"/>'),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    pproto.filter = function (filstr) {\n        var paper = this;\n        if (paper.type != \"svg\") {\n            paper = paper.paper;\n        }\n        var f = Snap.parse(Str(filstr)),\n            id = Snap._.id(),\n            width = paper.node.offsetWidth,\n            height = paper.node.offsetHeight,\n            filter = $(\"filter\");\n        $(filter, {\n            id: id,\n            filterUnits: \"userSpaceOnUse\"\n        });\n        filter.appendChild(f.node);\n        paper.defs.appendChild(filter);\n        return new Element(filter);\n    };\n\n    eve.on(\"snap.util.getattr.filter\", function () {\n        eve.stop();\n        var p = $(this.node, \"filter\");\n        if (p) {\n            var match = Str(p).match(rgurl);\n            return match && Snap.select(match[1]);\n        }\n    });\n    eve.on(\"snap.util.attr.filter\", function (value) {\n        if (value instanceof Element && value.type == \"filter\") {\n            eve.stop();\n            var id = value.node.id;\n            if (!id) {\n                $(value.node, {id: value.id});\n                id = value.id;\n            }\n            $(this.node, {\n                filter: Snap.url(id)\n            });\n        }\n        if (!value || value == \"none\") {\n            eve.stop();\n            this.node.removeAttribute(\"filter\");\n        }\n    });\n    /*\\\n     * Snap.filter.blur\n     [ method ]\n     **\n     * Returns an SVG markup string for the blur filter\n     **\n     - x (number) amount of horizontal blur, in pixels\n     - y (number) #optional amount of vertical blur, in pixels\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.blur(5, 10)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.blur = function (x, y) {\n        if (x == null) {\n            x = 2;\n        }\n        var def = y == null ? x : [x, y];\n        return Snap.format('\\<feGaussianBlur stdDeviation=\"{def}\"/>', {\n            def: def\n        });\n    };\n    Snap.filter.blur.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.shadow\n     [ method ]\n     **\n     * Returns an SVG markup string for the shadow filter\n     **\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - blur (number) #optional amount of blur\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * which makes blur default to `4`. Or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - opacity (number) #optional `0..1` opacity of the shadow\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.shadow(0, 2, .3)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.shadow = function (dx, dy, blur, color, opacity) {\n        if (opacity == null) {\n            if (color == null) {\n                opacity = blur;\n                blur = 4;\n                color = \"#000\";\n            } else {\n                opacity = color;\n                color = blur;\n                blur = 4;\n            }\n        }\n        if (blur == null) {\n            blur = 4;\n        }\n        if (opacity == null) {\n            opacity = 1;\n        }\n        if (dx == null) {\n            dx = 0;\n            dy = 2;\n        }\n        if (dy == null) {\n            dy = dx;\n        }\n        color = Snap.color(color);\n        return Snap.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>', {\n            color: color,\n            dx: dx,\n            dy: dy,\n            blur: blur,\n            opacity: opacity\n        });\n    };\n    Snap.filter.shadow.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.grayscale\n     [ method ]\n     **\n     * Returns an SVG markup string for the grayscale filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.grayscale = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>', {\n            a: 0.2126 + 0.7874 * (1 - amount),\n            b: 0.7152 - 0.7152 * (1 - amount),\n            c: 0.0722 - 0.0722 * (1 - amount),\n            d: 0.2126 - 0.2126 * (1 - amount),\n            e: 0.7152 + 0.2848 * (1 - amount),\n            f: 0.0722 - 0.0722 * (1 - amount),\n            g: 0.2126 - 0.2126 * (1 - amount),\n            h: 0.0722 + 0.9278 * (1 - amount)\n        });\n    };\n    Snap.filter.grayscale.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.sepia\n     [ method ]\n     **\n     * Returns an SVG markup string for the sepia filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.sepia = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>', {\n            a: 0.393 + 0.607 * (1 - amount),\n            b: 0.769 - 0.769 * (1 - amount),\n            c: 0.189 - 0.189 * (1 - amount),\n            d: 0.349 - 0.349 * (1 - amount),\n            e: 0.686 + 0.314 * (1 - amount),\n            f: 0.168 - 0.168 * (1 - amount),\n            g: 0.272 - 0.272 * (1 - amount),\n            h: 0.534 - 0.534 * (1 - amount),\n            i: 0.131 + 0.869 * (1 - amount)\n        });\n    };\n    Snap.filter.sepia.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.saturate\n     [ method ]\n     **\n     * Returns an SVG markup string for the saturate filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.saturate = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>', {\n            amount: 1 - amount\n        });\n    };\n    Snap.filter.saturate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.hueRotate\n     [ method ]\n     **\n     * Returns an SVG markup string for the hue-rotate filter\n     **\n     - angle (number) angle of rotation\n     = (string) filter representation\n    \\*/\n    Snap.filter.hueRotate = function (angle) {\n        angle = angle || 0;\n        return Snap.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>', {\n            angle: angle\n        });\n    };\n    Snap.filter.hueRotate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.invert\n     [ method ]\n     **\n     * Returns an SVG markup string for the invert filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.invert = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n//        <feColorMatrix type=\"matrix\" values=\"-1 0 0 0 1  0 -1 0 0 1  0 0 -1 0 1  0 0 0 1 0\" color-interpolation-filters=\"sRGB\"/>\n        return Snap.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: 1 - amount\n        });\n    };\n    Snap.filter.invert.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.brightness\n     [ method ]\n     **\n     * Returns an SVG markup string for the brightness filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.brightness = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>', {\n            amount: amount\n        });\n    };\n    Snap.filter.brightness.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.contrast\n     [ method ]\n     **\n     * Returns an SVG markup string for the contrast filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.contrast = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: .5 - amount / 2\n        });\n    };\n    Snap.filter.contrast.toString = function () {\n        return this();\n    };\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var box = Snap._.box,\n        is = Snap.is,\n        firstLetter = /^[^a-z]*([tbmlrc])/i,\n        toString = function () {\n            return \"T\" + this.dx + \",\" + this.dy;\n        };\n    /*\\\n     * Element.getAlign\n     [ method ]\n     **\n     * Returns shift needed to align the element relatively to given element.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object|string) Object in format `{dx: , dy: }` also has a string representation as a transformation string\n     > Usage\n     | el.transform(el.getAlign(el2, \"top\"));\n     * or\n     | var dy = el.getAlign(el2, \"top\").dy;\n    \\*/\n    Element.prototype.getAlign = function (el, way) {\n        if (way == null && is(el, \"string\")) {\n            way = el;\n            el = null;\n        }\n        el = el || this.paper;\n        var bx = el.getBBox ? el.getBBox() : box(el),\n            bb = this.getBBox(),\n            out = {};\n        way = way && way.match(firstLetter);\n        way = way ? way[1].toLowerCase() : \"c\";\n        switch (way) {\n            case \"t\":\n                out.dx = 0;\n                out.dy = bx.y - bb.y;\n            break;\n            case \"b\":\n                out.dx = 0;\n                out.dy = bx.y2 - bb.y2;\n            break;\n            case \"m\":\n                out.dx = 0;\n                out.dy = bx.cy - bb.cy;\n            break;\n            case \"l\":\n                out.dx = bx.x - bb.x;\n                out.dy = 0;\n            break;\n            case \"r\":\n                out.dx = bx.x2 - bb.x2;\n                out.dy = 0;\n            break;\n            default:\n                out.dx = bx.cx - bb.cx;\n                out.dy = 0;\n            break;\n        }\n        out.toString = toString;\n        return out;\n    };\n    /*\\\n     * Element.align\n     [ method ]\n     **\n     * Aligns the element relatively to given one via transformation.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object) this element\n     > Usage\n     | el.align(el2, \"top\");\n     * or\n     | el.align(\"middle\");\n    \\*/\n    Element.prototype.align = function (el, way) {\n        return this.transform(\"...\" + this.getAlign(el, way));\n    };\n});\n\n// Copyright (c) 2016 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        has = \"hasOwnProperty\";\n    function slice(from, to, f) {\n        return function (arr) {\n            var res = arr.slice(from, to);\n            if (res.length == 1) {\n                res = res[0];\n            }\n            return f ? f(res) : res;\n        };\n    }\n    var Animation = function (attr, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        this.attr = attr;\n        this.dur = ms;\n        easing && (this.easing = easing);\n        callback && (this.callback = callback);\n    };\n    Snap._.Animation = Animation;\n    /*\\\n     * Snap.animation\n     [ method ]\n     **\n     * Creates an animation object\n     **\n     - attr (object) attributes of final destination\n     - duration (number) duration of the animation, in milliseconds\n     - easing (function) #optional one of easing functions of @mina or custom one\n     - callback (function) #optional callback function that fires when animation ends\n     = (object) animation object\n    \\*/\n    Snap.animation = function (attr, ms, easing, callback) {\n        return new Animation(attr, ms, easing, callback);\n    };\n    /*\\\n     * Element.inAnim\n     [ method ]\n     **\n     * Returns a set of animations that may be able to manipulate the current element\n     **\n     = (object) in format:\n     o {\n     o     anim (object) animation object,\n     o     mina (object) @mina object,\n     o     curStatus (number) 0..1 — status of the animation: 0 — just started, 1 — just finished,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n    \\*/\n    elproto.inAnim = function () {\n        var el = this,\n            res = [];\n        for (var id in el.anims) if (el.anims[has](id)) {\n            (function (a) {\n                res.push({\n                    anim: new Animation(a._attrs, a.dur, a.easing, a._callback),\n                    mina: a,\n                    curStatus: a.status(),\n                    status: function (val) {\n                        return a.status(val);\n                    },\n                    stop: function () {\n                        a.stop();\n                    }\n                });\n            }(el.anims[id]));\n        }\n        return res;\n    };\n    /*\\\n     * Snap.animate\n     [ method ]\n     **\n     * Runs generic animation of one number into another with a caring function\n     **\n     - from (number|array) number or array of numbers\n     - to (number|array) number or array of numbers\n     - setter (function) caring function that accepts one number argument\n     - duration (number) duration, in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function to execute when animation ends\n     = (object) animation object in @mina format\n     o {\n     o     id (string) animation id, consider it read-only,\n     o     duration (function) gets or sets the duration of the animation,\n     o     easing (function) easing,\n     o     speed (function) gets or sets the speed of the animation,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n     | var rect = Snap().rect(0, 0, 10, 10);\n     | Snap.animate(0, 10, function (val) {\n     |     rect.attr({\n     |         x: val\n     |     });\n     | }, 1000);\n     | // in given context is equivalent to\n     | rect.animate({x: 10}, 1000);\n    \\*/\n    Snap.animate = function (from, to, setter, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        var now = mina.time(),\n            anim = mina(from, to, now, now + ms, mina.time, setter, easing);\n        callback && eve.once(\"mina.finish.\" + anim.id, callback);\n        return anim;\n    };\n    /*\\\n     * Element.stop\n     [ method ]\n     **\n     * Stops all the animations for the current element\n     **\n     = (Element) the current element\n    \\*/\n    elproto.stop = function () {\n        var anims = this.inAnim();\n        for (var i = 0, ii = anims.length; i < ii; i++) {\n            anims[i].stop();\n        }\n        return this;\n    };\n    /*\\\n     * Element.animate\n     [ method ]\n     **\n     * Animates the given attributes of the element\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     = (Element) the current element\n    \\*/\n    elproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = attrs.dur;\n            attrs = attrs.attr;\n        }\n        var fkeys = [], tkeys = [], keys = {}, from, to, f, eq,\n            el = this;\n        for (var key in attrs) if (attrs[has](key)) {\n            if (el.equal) {\n                eq = el.equal(key, Str(attrs[key]));\n                from = eq.from;\n                to = eq.to;\n                f = eq.f;\n            } else {\n                from = +el.attr(key);\n                to = +attrs[key];\n            }\n            var len = is(from, \"array\") ? from.length : 1;\n            keys[key] = slice(fkeys.length, fkeys.length + len, f);\n            fkeys = fkeys.concat(from);\n            tkeys = tkeys.concat(to);\n        }\n        var now = mina.time(),\n            anim = mina(fkeys, tkeys, now, now + ms, mina.time, function (val) {\n                var attr = {};\n                for (var key in keys) if (keys[has](key)) {\n                    attr[key] = keys[key](val);\n                }\n                el.attr(attr);\n            }, easing);\n        el.anims[anim.id] = anim;\n        anim._attrs = attrs;\n        anim._callback = callback;\n        eve(\"snap.animcreated.\" + el.id, anim);\n        eve.once(\"mina.finish.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n            callback && callback.call(el);\n        });\n        eve.once(\"mina.stop.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n        });\n        return el;\n    };\n});\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    // Colours are from https://www.materialui.co\n    var red         = \"#ffebee#ffcdd2#ef9a9a#e57373#ef5350#f44336#e53935#d32f2f#c62828#b71c1c#ff8a80#ff5252#ff1744#d50000\",\n        pink        = \"#FCE4EC#F8BBD0#F48FB1#F06292#EC407A#E91E63#D81B60#C2185B#AD1457#880E4F#FF80AB#FF4081#F50057#C51162\",\n        purple      = \"#F3E5F5#E1BEE7#CE93D8#BA68C8#AB47BC#9C27B0#8E24AA#7B1FA2#6A1B9A#4A148C#EA80FC#E040FB#D500F9#AA00FF\",\n        deeppurple  = \"#EDE7F6#D1C4E9#B39DDB#9575CD#7E57C2#673AB7#5E35B1#512DA8#4527A0#311B92#B388FF#7C4DFF#651FFF#6200EA\",\n        indigo      = \"#E8EAF6#C5CAE9#9FA8DA#7986CB#5C6BC0#3F51B5#3949AB#303F9F#283593#1A237E#8C9EFF#536DFE#3D5AFE#304FFE\",\n        blue        = \"#E3F2FD#BBDEFB#90CAF9#64B5F6#64B5F6#2196F3#1E88E5#1976D2#1565C0#0D47A1#82B1FF#448AFF#2979FF#2962FF\",\n        lightblue   = \"#E1F5FE#B3E5FC#81D4FA#4FC3F7#29B6F6#03A9F4#039BE5#0288D1#0277BD#01579B#80D8FF#40C4FF#00B0FF#0091EA\",\n        cyan        = \"#E0F7FA#B2EBF2#80DEEA#4DD0E1#26C6DA#00BCD4#00ACC1#0097A7#00838F#006064#84FFFF#18FFFF#00E5FF#00B8D4\",\n        teal        = \"#E0F2F1#B2DFDB#80CBC4#4DB6AC#26A69A#009688#00897B#00796B#00695C#004D40#A7FFEB#64FFDA#1DE9B6#00BFA5\",\n        green       = \"#E8F5E9#C8E6C9#A5D6A7#81C784#66BB6A#4CAF50#43A047#388E3C#2E7D32#1B5E20#B9F6CA#69F0AE#00E676#00C853\",\n        lightgreen  = \"#F1F8E9#DCEDC8#C5E1A5#AED581#9CCC65#8BC34A#7CB342#689F38#558B2F#33691E#CCFF90#B2FF59#76FF03#64DD17\",\n        lime        = \"#F9FBE7#F0F4C3#E6EE9C#DCE775#D4E157#CDDC39#C0CA33#AFB42B#9E9D24#827717#F4FF81#EEFF41#C6FF00#AEEA00\",\n        yellow      = \"#FFFDE7#FFF9C4#FFF59D#FFF176#FFEE58#FFEB3B#FDD835#FBC02D#F9A825#F57F17#FFFF8D#FFFF00#FFEA00#FFD600\",\n        amber       = \"#FFF8E1#FFECB3#FFE082#FFD54F#FFCA28#FFC107#FFB300#FFA000#FF8F00#FF6F00#FFE57F#FFD740#FFC400#FFAB00\",\n        orange      = \"#FFF3E0#FFE0B2#FFCC80#FFB74D#FFA726#FF9800#FB8C00#F57C00#EF6C00#E65100#FFD180#FFAB40#FF9100#FF6D00\",\n        deeporange  = \"#FBE9E7#FFCCBC#FFAB91#FF8A65#FF7043#FF5722#F4511E#E64A19#D84315#BF360C#FF9E80#FF6E40#FF3D00#DD2C00\",\n        brown       = \"#EFEBE9#D7CCC8#BCAAA4#A1887F#8D6E63#795548#6D4C41#5D4037#4E342E#3E2723\",\n        grey        = \"#FAFAFA#F5F5F5#EEEEEE#E0E0E0#BDBDBD#9E9E9E#757575#616161#424242#212121\",\n        bluegrey    = \"#ECEFF1#CFD8DC#B0BEC5#90A4AE#78909C#607D8B#546E7A#455A64#37474F#263238\";\n    /*\\\n     * Snap.mui\n     [ property ]\n     **\n     * Contain Material UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.mui.deeppurple, stroke: Snap.mui.amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.mui = {};\n    /*\\\n     * Snap.flat\n     [ property ]\n     **\n     * Contain Flat UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.flat.carrot, stroke: Snap.flat.wetasphalt});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.flat = {};\n    function saveColor(colors) {\n        colors = colors.split(/(?=#)/);\n        var color = new String(colors[5]);\n        color[50] = colors[0];\n        color[100] = colors[1];\n        color[200] = colors[2];\n        color[300] = colors[3];\n        color[400] = colors[4];\n        color[500] = colors[5];\n        color[600] = colors[6];\n        color[700] = colors[7];\n        color[800] = colors[8];\n        color[900] = colors[9];\n        if (colors[10]) {\n            color.A100 = colors[10];\n            color.A200 = colors[11];\n            color.A400 = colors[12];\n            color.A700 = colors[13];\n        }\n        return color;\n    }\n    Snap.mui.red = saveColor(red);\n    Snap.mui.pink = saveColor(pink);\n    Snap.mui.purple = saveColor(purple);\n    Snap.mui.deeppurple = saveColor(deeppurple);\n    Snap.mui.indigo = saveColor(indigo);\n    Snap.mui.blue = saveColor(blue);\n    Snap.mui.lightblue = saveColor(lightblue);\n    Snap.mui.cyan = saveColor(cyan);\n    Snap.mui.teal = saveColor(teal);\n    Snap.mui.green = saveColor(green);\n    Snap.mui.lightgreen = saveColor(lightgreen);\n    Snap.mui.lime = saveColor(lime);\n    Snap.mui.yellow = saveColor(yellow);\n    Snap.mui.amber = saveColor(amber);\n    Snap.mui.orange = saveColor(orange);\n    Snap.mui.deeporange = saveColor(deeporange);\n    Snap.mui.brown = saveColor(brown);\n    Snap.mui.grey = saveColor(grey);\n    Snap.mui.bluegrey = saveColor(bluegrey);\n    Snap.flat.turquoise = \"#1abc9c\";\n    Snap.flat.greensea = \"#16a085\";\n    Snap.flat.sunflower = \"#f1c40f\";\n    Snap.flat.orange = \"#f39c12\";\n    Snap.flat.emerland = \"#2ecc71\";\n    Snap.flat.nephritis = \"#27ae60\";\n    Snap.flat.carrot = \"#e67e22\";\n    Snap.flat.pumpkin = \"#d35400\";\n    Snap.flat.peterriver = \"#3498db\";\n    Snap.flat.belizehole = \"#2980b9\";\n    Snap.flat.alizarin = \"#e74c3c\";\n    Snap.flat.pomegranate = \"#c0392b\";\n    Snap.flat.amethyst = \"#9b59b6\";\n    Snap.flat.wisteria = \"#8e44ad\";\n    Snap.flat.clouds = \"#ecf0f1\";\n    Snap.flat.silver = \"#bdc3c7\";\n    Snap.flat.wetasphalt = \"#34495e\";\n    Snap.flat.midnightblue = \"#2c3e50\";\n    Snap.flat.concrete = \"#95a5a6\";\n    Snap.flat.asbestos = \"#7f8c8d\";\n    /*\\\n     * Snap.importMUIColors\n     [ method ]\n     **\n     * Imports Material UI colours into global object.\n     | Snap.importMUIColors();\n     | Snap().rect(0, 0, 10, 10).attr({fill: deeppurple, stroke: amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.importMUIColors = function () {\n        for (var color in Snap.mui) {\n            if (Snap.mui.hasOwnProperty(color)) {\n                window[color] = Snap.mui[color];\n            }\n        }\n    };\n});\n\nmodule.exports = Snap\n","// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// ┌────────────────────────────────────────────────────────────┐ \\\\\n// │ Eve 0.5.4 - JavaScript Events Library                      │ \\\\\n// ├────────────────────────────────────────────────────────────┤ \\\\\n// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\n// └────────────────────────────────────────────────────────────┘ \\\\\n\n(function (glob) {\n    var version = \"0.5.4\",\n        has = \"hasOwnProperty\",\n        separator = /[\\.\\/]/,\n        comaseparator = /\\s*,\\s*/,\n        wildcard = \"*\",\n        numsort = function (a, b) {\n            return a - b;\n        },\n        current_event,\n        stop,\n        events = {n: {}},\n        firstDefined = function () {\n            for (var i = 0, ii = this.length; i < ii; i++) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        lastDefined = function () {\n            var i = this.length;\n            while (--i) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        objtos = Object.prototype.toString,\n        Str = String,\n        isArray = Array.isArray || function (ar) {\n            return ar instanceof Array || objtos.call(ar) == \"[object Array]\";\n        },\n    /*\\\n     * eve\n     [ method ]\n\n     * Fires event with given `name`, given scope and other parameters.\n\n     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\n     - scope (object) context for the event handlers\n     - varargs (...) the rest of arguments will be sent to event handlers\n\n     = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\n    \\*/\n        eve = function (name, scope) {\n            var oldstop = stop,\n                args = Array.prototype.slice.call(arguments, 2),\n                listeners = eve.listeners(name),\n                z = 0,\n                l,\n                indexed = [],\n                queue = {},\n                out = [],\n                ce = current_event;\n            out.firstDefined = firstDefined;\n            out.lastDefined = lastDefined;\n            current_event = name;\n            stop = 0;\n            for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\n                indexed.push(listeners[i].zIndex);\n                if (listeners[i].zIndex < 0) {\n                    queue[listeners[i].zIndex] = listeners[i];\n                }\n            }\n            indexed.sort(numsort);\n            while (indexed[z] < 0) {\n                l = queue[indexed[z++]];\n                out.push(l.apply(scope, args));\n                if (stop) {\n                    stop = oldstop;\n                    return out;\n                }\n            }\n            for (i = 0; i < ii; i++) {\n                l = listeners[i];\n                if (\"zIndex\" in l) {\n                    if (l.zIndex == indexed[z]) {\n                        out.push(l.apply(scope, args));\n                        if (stop) {\n                            break;\n                        }\n                        do {\n                            z++;\n                            l = queue[indexed[z]];\n                            l && out.push(l.apply(scope, args));\n                            if (stop) {\n                                break;\n                            }\n                        } while (l)\n                    } else {\n                        queue[l.zIndex] = l;\n                    }\n                } else {\n                    out.push(l.apply(scope, args));\n                    if (stop) {\n                        break;\n                    }\n                }\n            }\n            stop = oldstop;\n            current_event = ce;\n            return out;\n        };\n    // Undocumented. Debug only.\n    eve._events = events;\n    /*\\\n     * eve.listeners\n     [ method ]\n\n     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\n\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated\n\n     = (array) array of event handlers\n    \\*/\n    eve.listeners = function (name) {\n        var names = isArray(name) ? name : name.split(separator),\n            e = events,\n            item,\n            items,\n            k,\n            i,\n            ii,\n            j,\n            jj,\n            nes,\n            es = [e],\n            out = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            nes = [];\n            for (j = 0, jj = es.length; j < jj; j++) {\n                e = es[j].n;\n                items = [e[names[i]], e[wildcard]];\n                k = 2;\n                while (k--) {\n                    item = items[k];\n                    if (item) {\n                        nes.push(item);\n                        out = out.concat(item.f || []);\n                    }\n                }\n            }\n            es = nes;\n        }\n        return out;\n    };\n    /*\\\n     * eve.separator\n     [ method ]\n\n     * If for some reasons you don’t like default separators (`.` or `/`) you can specify yours\n     * here. Be aware that if you pass a string longer than one character it will be treated as\n     * a list of characters.\n\n     - separator (string) new separator. Empty string resets to default: `.` or `/`.\n    \\*/\n    eve.separator = function (sep) {\n        if (sep) {\n            sep = Str(sep).replace(/(?=[\\.\\^\\]\\[\\-])/g, \"\\\\\");\n            sep = \"[\" + sep + \"]\";\n            separator = new RegExp(sep);\n        } else {\n            separator = /[\\.\\/]/;\n        }\n    };\n    /*\\\n     * eve.on\n     [ method ]\n     **\n     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\n     | eve.on(\"*.under.*\", f);\n     | eve(\"mouse.under.floor\"); // triggers f\n     * Use @eve to trigger the listener.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     - name (array) if you don’t want to use separators, you can use array of strings\n     - f (function) event handler function\n     **\n     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment.\n     > Example:\n     | eve.on(\"mouse\", eatIt)(2);\n     | eve.on(\"mouse\", scream);\n     | eve.on(\"mouse\", catchIt)(1);\n     * This will ensure that `catchIt` function will be called before `eatIt`.\n     *\n     * If you want to put your handler before non-indexed handlers, specify a negative value.\n     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\n    \\*/\n    eve.on = function (name, f) {\n        if (typeof f != \"function\") {\n            return function () {};\n        }\n        var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n        for (var i = 0, ii = names.length; i < ii; i++) {\n            (function (name) {\n                var names = isArray(name) ? name : Str(name).split(separator),\n                    e = events,\n                    exist;\n                for (var i = 0, ii = names.length; i < ii; i++) {\n                    e = e.n;\n                    e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\n                }\n                e.f = e.f || [];\n                for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\n                    exist = true;\n                    break;\n                }\n                !exist && e.f.push(f);\n            }(names[i]));\n        }\n        return function (zIndex) {\n            if (+zIndex == +zIndex) {\n                f.zIndex = +zIndex;\n            }\n        };\n    };\n    /*\\\n     * eve.f\n     [ method ]\n     **\n     * Returns function that will fire given event with optional arguments.\n     * Arguments that will be passed to the result function will be also\n     * concated to the list of final arguments.\n     | el.onclick = eve.f(\"click\", 1, 2);\n     | eve.on(\"click\", function (a, b, c) {\n     |     console.log(a, b, c); // 1, 2, [event object]\n     | });\n     - event (string) event name\n     - varargs (…) and any other arguments\n     = (function) possible event handler function\n    \\*/\n    eve.f = function (event) {\n        var attrs = [].slice.call(arguments, 1);\n        return function () {\n            eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\n        };\n    };\n    /*\\\n     * eve.stop\n     [ method ]\n     **\n     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\n    \\*/\n    eve.stop = function () {\n        stop = 1;\n    };\n    /*\\\n     * eve.nt\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     - subname (string) #optional subname of the event\n     **\n     = (string) name of the event, if `subname` is not specified\n     * or\n     = (boolean) `true`, if current event’s name contains `subname`\n    \\*/\n    eve.nt = function (subname) {\n        var cur = isArray(current_event) ? current_event.join(\".\") : current_event;\n        if (subname) {\n            return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(cur);\n        }\n        return cur;\n    };\n    /*\\\n     * eve.nts\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     **\n     = (array) names of the event\n    \\*/\n    eve.nts = function () {\n        return isArray(current_event) ? current_event : current_event.split(separator);\n    };\n    /*\\\n     * eve.off\n     [ method ]\n     **\n     * Removes given function from the list of event listeners assigned to given name.\n     * If no arguments specified all the events will be cleared.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n    \\*/\n    /*\\\n     * eve.unbind\n     [ method ]\n     **\n     * See @eve.off\n    \\*/\n    eve.off = eve.unbind = function (name, f) {\n        if (!name) {\n            eve._events = events = {n: {}};\n            return;\n        }\n        var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n        if (names.length > 1) {\n            for (var i = 0, ii = names.length; i < ii; i++) {\n                eve.off(names[i], f);\n            }\n            return;\n        }\n        names = isArray(name) ? name : Str(name).split(separator);\n        var e,\n            key,\n            splice,\n            i, ii, j, jj,\n            cur = [events],\n            inodes = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            for (j = 0; j < cur.length; j += splice.length - 2) {\n                splice = [j, 1];\n                e = cur[j].n;\n                if (names[i] != wildcard) {\n                    if (e[names[i]]) {\n                        splice.push(e[names[i]]);\n                        inodes.unshift({\n                            n: e,\n                            name: names[i]\n                        });\n                    }\n                } else {\n                    for (key in e) if (e[has](key)) {\n                        splice.push(e[key]);\n                        inodes.unshift({\n                            n: e,\n                            name: key\n                        });\n                    }\n                }\n                cur.splice.apply(cur, splice);\n            }\n        }\n        for (i = 0, ii = cur.length; i < ii; i++) {\n            e = cur[i];\n            while (e.n) {\n                if (f) {\n                    if (e.f) {\n                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\n                            e.f.splice(j, 1);\n                            break;\n                        }\n                        !e.f.length && delete e.f;\n                    }\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        var funcs = e.n[key].f;\n                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\n                            funcs.splice(j, 1);\n                            break;\n                        }\n                        !funcs.length && delete e.n[key].f;\n                    }\n                } else {\n                    delete e.f;\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        delete e.n[key].f;\n                    }\n                }\n                e = e.n;\n            }\n        }\n        // prune inner nodes in path\n        prune: for (i = 0, ii = inodes.length; i < ii; i++) {\n            e = inodes[i];\n            for (key in e.n[e.name].f) {\n                // not empty (has listeners)\n                continue prune;\n            }\n            for (key in e.n[e.name].n) {\n                // not empty (has children)\n                continue prune;\n            }\n            // is empty\n            delete e.n[e.name];\n        }\n    };\n    /*\\\n     * eve.once\n     [ method ]\n     **\n     * Binds given event handler with a given name to only run once then unbind itself.\n     | eve.once(\"login\", f);\n     | eve(\"login\"); // triggers f\n     | eve(\"login\"); // no listeners\n     * Use @eve to trigger the listener.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     = (function) same return function as @eve.on\n    \\*/\n    eve.once = function (name, f) {\n        var f2 = function () {\n            eve.off(name, f2);\n            return f.apply(this, arguments);\n        };\n        return eve.on(name, f2);\n    };\n    /*\\\n     * eve.version\n     [ property (string) ]\n     **\n     * Current version of the library.\n    \\*/\n    eve.version = version;\n    eve.toString = function () {\n        return \"You are running Eve \" + version;\n    };\n    glob.eve = eve;\n    typeof module != \"undefined\" && module.exports ? module.exports = eve : typeof define === \"function\" && define.amd ? define(\"eve\", [], function () { return eve; }) : glob.eve = eve;\n})(typeof window != \"undefined\" ? window : this);\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _snapsvgImporter = require('../snapsvgImporter');\n\nvar _snapsvgImporter2 = _interopRequireDefault(_snapsvgImporter);\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  svg: {\n    lib: _snapsvgImporter2['default'],\n    pathInitial: 'M-7.312,0H0c0,0,0,113.839,0,400c0,264.506,0,400,0,400h-7.312V0z',\n    pathOpen: 'M-7.312,0H15c0,0,66,113.339,66,399.5C81,664.006,15,800,15,800H-7.312V0z;M-7.312,0H100c0,0,0,113.839,0,400c0,264.506,0,400,0,400H-7.312V0z',\n    animate: function animate(path) {\n      var pos = 0;\n      var steps = this.pathOpen.split(';');\n      var stepsTotal = steps.length;\n      var mina = window.mina;\n\n      var nextStep = function nextStep() {\n        if (pos > stepsTotal - 1) return;\n\n        path.animate({ path: steps[pos] }, pos === 0 ? 400 : 500, pos === 0 ? mina.easein : mina.elastic, function () {\n          nextStep();\n        });\n\n        pos++;\n      };\n\n      nextStep();\n    }\n  },\n\n  morphShape: function morphShape(isOpen, width, right) {\n    return {\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      right: right ? 'inherit' : 0,\n      left: right ? 0 : 'inherit',\n      MozTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      MsTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      OTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      WebkitTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      transform: right ? 'rotateY(180deg)' : 'rotateY(0deg)'\n    };\n  },\n\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: isOpen ? 'transform 0.4s 0s' : 'transform 0.4s'\n    };\n  },\n\n  menu: function menu(isOpen, width, right) {\n    width -= 140;\n    return {\n      position: 'fixed',\n      MozTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.1s 0.4s cubic-bezier(.17, .67, .1, 1.27), transform 0.1s 0.4s cubic-bezier(.17, .67, .1, 1.27)' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  },\n\n  item: function item(isOpen, width, right, nthChild) {\n    width -= 140;\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.3s 0.4s, transform 0.3s 0.4s' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  },\n\n  closeButton: function closeButton(isOpen, width, right) {\n    width -= 140;\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.3s 0.4s cubic-bezier(.17, .67, .1, 1.27), transform 0.3s 0.4s cubic-bezier(.17, .67, .1, 1.27)' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      transformOrigin: right ? '100% 50%' : '0% 50%',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      MsTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      OTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      transform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      transformOrigin: '100%',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer() {\n    return {\n      perspective: '1500px'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      transform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      OTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      transform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      transition: 'all 0.5s ease-in-out'\n    };\n  },\n\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      perspectiveOrigin: '0% 50%',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      visibility: isOpen ? 'visible' : 'hidden',\n      MozTransform: 'translate3d(0, 0, 0)',\n      MsTransform: 'translate3d(0, 0, 0)',\n      OTransform: 'translate3d(0, 0, 0)',\n      WebkitTransform: 'translate3d(0, 0, 0)',\n      transform: 'translate3d(0, 0, 0)',\n      zIndex: 1000\n    };\n  },\n\n  overlay: function overlay(isOpen, width, right) {\n    return {\n      zIndex: 1400,\n      MozTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      MsTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      OTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      WebkitTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transition: 'all 0.5s',\n      visibility: isOpen ? 'visible' : 'hidden'\n    };\n  },\n\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s',\n      zIndex: 1200,\n      position: 'relative'\n    };\n  },\n\n  burgerIcon: function burgerIcon(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      MsTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      OTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      WebkitTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transition: 'all 0.1s',\n      position: 'relative',\n      zIndex: 1300\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];"],"sourceRoot":""}