{"version":3,"sources":["webpack:///./src/pages/postlist.js","webpack:///./src/components/layouts/menu.js","webpack:///./src/components/layouts/header.js","webpack:///./src/components/layouts/footer.js","webpack:///./src/components/layouts/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layouts_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","PostListPage","_ref","data","a","createElement","title","keywords","allMarkdownRemark","edges","map","post","key","node","id","to","frontmatter","path","date","ToggleMenu","showSettings","event","preventDefault","render","react_default","BurgerMenu","gatsby_browser_entry","React","Component","Header","siteTitle","layouts_menu","className","propTypes","PropTypes","string","defaultProps","Footer","author","Date","getFullYear","Layout","children","query","Fragment","layouts_header","site","siteMetadata","footer","_755544856","isRequired","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array","arrayOf"],"mappings":"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","file":"component---src-pages-postlist-js-d8e63752e9bea6d52fbe.js","sourcesContent":["import React from 'react'\r\nimport { Link, graphql } from 'gatsby'\r\n\r\nimport Layout from '../components/layouts/layout'\r\nimport SEO from '../components/seo'\r\n\r\nconst PostListPage = ({data}) => (\r\n  <Layout>\r\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\r\n    <h1>태그</h1>\r\n    <hr />\r\n    <h1>최근 글</h1>\r\n    {data.allMarkdownRemark.edges.map(post => (\r\n      <div key={post.node.id}>\r\n        <Link to={post.node.frontmatter.path}>\r\n          <h4>{post.node.frontmatter.title}</h4>\r\n          <small>Posted on {post.node.frontmatter.date}</small>\r\n        </Link>\r\n      </div>\r\n    ))}\r\n  </Layout>\r\n)\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogIndexQuery {\r\n    allMarkdownRemark{\r\n      edges{\r\n        node{\r\n          id\r\n          frontmatter{\r\n            path\r\n            title\r\n            date\r\n            tags\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default PostListPage\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\nimport { slide as Menu } from 'react-burger-menu'\r\nimport './menu.css'\r\n\r\nclass ToggleMenu extends React.Component {\r\n    showSettings(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return <Menu >\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/about\">About</Link>\r\n            <Link to=\"/postlist\">Category</Link>\r\n          </Menu>\r\n    }\r\n}\r\n\r\nexport default ToggleMenu;","import { Link } from 'gatsby'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\n\r\nimport ToggleMenu from './menu'\r\nimport './header.css'\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <header>\r\n    <nav>\r\n      <ToggleMenu />\r\n    </nav>\r\n    <div className=\"title\">\r\n      <h1>\r\n        <Link className=\"title-link\" to=\"/\">\r\n          {siteTitle}\r\n        </Link>\r\n      </h1>\r\n    </div>\r\n  </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","import { Link } from 'gatsby'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\n\r\nconst Footer = ({ author }) => (\r\n  <footer>\r\n      <h1>\r\n        © {new Date().getFullYear()}, Built by\r\n        {` `}\r\n        <Link to=\"/\">\r\n          {author}\r\n        </Link>\r\n      </h1>\r\n  </footer>\r\n)\r\n\r\nFooter.propTypes = {\r\n  author: PropTypes.string,\r\n}\r\n\r\nFooter.defaultProps = {\r\n  author: ``,\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport Header from './header'\r\nimport Footer from './footer'\r\nimport './layout.css'\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n        <main>\r\n          {children}\r\n        </main>\r\n        <Footer />\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  return (\r\n    <StaticQuery\r\n      query={detailsQuery}\r\n      render={data => {\r\n        const metaDescription =\r\n          description || data.site.siteMetadata.description\r\n        return (\r\n          <Helmet\r\n            htmlAttributes={{\r\n              lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\r\n            meta={[\r\n              {\r\n                name: `description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                property: `og:description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:type`,\r\n                content: `website`,\r\n              },\r\n              {\r\n                name: `twitter:card`,\r\n                content: `summary`,\r\n              },\r\n              {\r\n                name: `twitter:creator`,\r\n                content: data.site.siteMetadata.author,\r\n              },\r\n              {\r\n                name: `twitter:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                name: `twitter:description`,\r\n                content: metaDescription,\r\n              },\r\n            ]\r\n              .concat(\r\n                keywords.length > 0\r\n                  ? {\r\n                      name: `keywords`,\r\n                      content: keywords.join(`, `),\r\n                    }\r\n                  : []\r\n              )\r\n              .concat(meta)}\r\n          />\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n\r\nconst detailsQuery = graphql`\r\n  query DefaultSEOQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}