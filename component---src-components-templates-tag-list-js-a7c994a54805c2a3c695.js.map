{"version":3,"sources":["webpack:///./src/components/templates/tag-list.js","webpack:///./src/components/layouts/footer.js","webpack:///./src/components/layouts/menu.js","webpack:///./src/components/layouts/header.js","webpack:///./src/components/layouts/decorated-layout.js","webpack:///./src/components/layouts/list.js"],"names":["__webpack_require__","r","__webpack_exports__","d","tagQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_layouts_decorated_layout__WEBPACK_IMPORTED_MODULE_1__","_layouts_list__WEBPACK_IMPORTED_MODULE_2__","TagsTemplate","props","posts","data","allMarkdownRemark","edges","tag","pageContext","count","totalCount","a","createElement","title","metaDataType","metaData","className","map","post","node","frontmatter","Footer","react__WEBPACK_IMPORTED_MODULE_3___default","gatsby__WEBPACK_IMPORTED_MODULE_1__","query","render","Date","getFullYear","to","site","siteMetadata","author","href","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_5__","icon","_public_static_d_1041092198_json__WEBPACK_IMPORTED_MODULE_0__","propTypes","PropTypes","string","defaultProps","library","add","fab","ToggleMenu","showSettings","event","preventDefault","react_default","BurgerMenu","gatsby_browser_entry","React","Component","Header","_ref","layouts_menu","header_HeaderTitle","header_MetaData","HeaderTitle","_ref2","header_TitleSting","TitleSting","_ref3","MetaData","_ref4","header_BlogPostMetaData","header_PostListMetaData","header_DefaultMetaData","DefaultMetaData","BlogPostMetaData","_ref5","react_fontawesome_index_es","date","tags","toLowerCase","PostListMetaData","_ref6","faCalendarAlt","faTags","faSearch","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_header__WEBPACK_IMPORTED_MODULE_2__","_footer__WEBPACK_IMPORTED_MODULE_3__","BodyTagDecoratedLayout","children","Fragment","isRequired","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__","ListPostItem","path"],"mappings":"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","file":"component---src-components-templates-tag-list-js-a7c994a54805c2a3c695.js","sourcesContent":["import React from 'react'\r\nimport { graphql } from 'gatsby'\r\n\r\nimport BodyTagDecoratedLayout from '../layouts/decorated-layout'\r\nimport ListPostItem from '../layouts/list'\r\nimport '../layouts/list.css'\r\n\r\nconst TagsTemplate = (props) => {\r\n\r\n    const posts = props.data.allMarkdownRemark.edges;\r\n    const { tag } = props.pageContext;\r\n    const count = props.data.allMarkdownRemark.totalCount;\r\n\r\n    return (\r\n        <BodyTagDecoratedLayout title={tag} metaDataType='post-list' metaData={count}>\r\n          <ul className=\"list-of-posts\">\r\n            {posts.map(post => (\r\n              <ListPostItem post={post.node.frontmatter} />\r\n            ))}\r\n          </ul>\r\n        </BodyTagDecoratedLayout>\r\n    )\r\n\r\n}\r\n\r\nexport const tagQuery = graphql`\r\nquery($tag: String) {\r\n    allMarkdownRemark(filter: { frontmatter: { tags: { in: [$tag] } } }) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            path\r\n            date\r\n          }\r\n        }\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`\r\n\r\nexport default TagsTemplate","import { Link } from 'gatsby'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\n\r\nimport './footer.css'\r\n\r\nconst Footer = () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteAuthorQuery {\r\n        site {\r\n          siteMetadata {\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <footer>\r\n        <h1>\r\n          <span>Â© {new Date().getFullYear()}, Built by {` `}</span>\r\n          <Link to=\"/\">\r\n          {data.site.siteMetadata.author}\r\n          </Link>\r\n          <span>{` `}</span>\r\n          <a className=\"footer-github-link\" href=\"https://github.com/JiwoonKim\">\r\n            <FontAwesomeIcon icon={['fab', 'github']} /> \r\n          </a>\r\n        </h1>\r\n      </footer>\r\n    )}\r\n  />\r\n)\r\n\r\nFooter.propTypes = {\r\n  author: PropTypes.string,\r\n}\r\n\r\nFooter.defaultProps = {\r\n  author: ``,\r\n}\r\n\r\nlibrary.add(fab);\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\nimport { slide as Menu } from 'react-burger-menu'\r\nimport './menu.css'\r\n\r\nclass ToggleMenu extends React.Component {\r\n    showSettings(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return <Menu >\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/about\">About</Link>\r\n            <Link to=\"/postlist\">Category</Link>\r\n          </Menu>\r\n    }\r\n}\r\n\r\nexport default ToggleMenu;","import { Link } from 'gatsby'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTags, faSearch, faCalendarAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport ToggleMenu from './menu'\r\nimport './header.css'\r\n\r\n// header component (title + meta data)\r\nconst Header = ({ title, metaDataType, metaData }) => (\r\n  <header>\r\n    <nav>\r\n      <ToggleMenu />\r\n    </nav>\r\n    <div className=\"banner-container\">\r\n      <HeaderTitle title={title} metaDataType={metaDataType}/>\r\n      <MetaData metaDataType={metaDataType} metaData={metaData}/>\r\n    </div>\r\n  </header>\r\n)\r\n\r\n// title portion of header component\r\nconst HeaderTitle = ({title, metaDataType}) => (\r\n  <div className=\"banner-title-container\">\r\n    <h1 className=\"tag-decoration tag-decoration-left\">\r\n      <span>&lt;h1&gt;</span>  \r\n    </h1>\r\n    <TitleSting title={title} metaDataType={metaDataType} />\r\n    <h1 className=\"tag-decoration tag-decoration-right\">\r\n      <span>&lt;/h1&gt;</span>\r\n    </h1>\r\n  </div>\r\n)\r\n\r\nconst TitleSting = ({title, metaDataType}) => {\r\n  if (metaDataType === 'blog-post' || metaDataType === 'all') {\r\n    return (<h1 className=\"banner-title\">{title}</h1>)\r\n  }\r\n  else {\r\n    return (\r\n      <h1 className=\"banner-title\">\r\n        {title}\r\n        <span className=\"banner-title-include-string\">ì í´ë¹íë ê¸</span>\r\n      </h1>)\r\n  }\r\n}\r\n\r\n/** meta data portion of header component\r\n *  (renders differently depending on type of post)\r\n */\r\nconst MetaData = ({metaDataType, metaData}) => {\r\n\r\n  if (metaDataType === 'blog-post') {\r\n    return <BlogPostMetaData metaData={metaData} />\r\n  } \r\n  else if (metaDataType === 'post-list') {\r\n    return <PostListMetaData metaData={metaData} />\r\n  }\r\n  else {\r\n    return <DefaultMetaData />\r\n  }\r\n}\r\n\r\n// no meta data in default\r\nconst DefaultMetaData = () => (\r\n  <div className=\"header-meta-data\"></div>\r\n)\r\n\r\n/** for blog posts,\r\n *  meta data: date + tags\r\n */\r\nconst BlogPostMetaData = ({metaData}) => (\r\n  <div className=\"header-meta-data\">\r\n    <span>\r\n      <FontAwesomeIcon className=\"meta-data-icon\" icon=\"calendar-alt\" />\r\n      <span>{metaData.date}</span>\r\n    </span>\r\n    <span>\r\n      <FontAwesomeIcon className=\"meta-data-icon\" icon=\"tags\" /> \r\n      {metaData.tags.map(tag => (\r\n        <Link to={`tags/${tag.toLowerCase()}`} className=\"tag\">\r\n          <span>{tag}</span>\r\n          <span>&#183;</span>\r\n        </Link>\r\n      ))}\r\n    </span>\r\n  </div>\r\n)\r\n\r\n/** for tag lists,\r\n *  meta data: number of blog posts under tag category\r\n */\r\nconst PostListMetaData = ({metaData}) => (\r\n  <div className=\"header-meta-data\">\r\n    <span>\r\n      <FontAwesomeIcon className=\"meta-data-icon\" icon=\"search\" /> \r\n      <span className=\"header-posts-count\">{metaData}</span>\r\n      <span>matching articles</span>\r\n    </span>\r\n  </div>\r\n)\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  title: ``,\r\n}\r\n\r\nlibrary.add(faCalendarAlt, faTags, faSearch);\r\n\r\nexport default Header","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Header from './header'\r\nimport Footer from './footer'\r\nimport './layout.css'\r\n\r\nconst BodyTagDecoratedLayout = ({ title, metaDataType, metaData, children }) => (\r\n    <>\r\n      <Header title={title} metaDataType={metaDataType} metaData={metaData} />\r\n\r\n      <div className=\"body-container\">\r\n        <h1 className=\"tag-decoration body-tag-left\">\r\n          <span>&lt;body&gt;</span>  \r\n        </h1>\r\n\r\n        <main className=\"body-middle-part\">\r\n          {children}\r\n        </main>\r\n\r\n        <h1 className=\"tag-decoration body-tag-right\">\r\n          <span>&lt;/body&gt;</span>  \r\n        </h1>\r\n      </div>\r\n\r\n      <Footer />\r\n    </>\r\n  )\r\n  \r\nBodyTagDecoratedLayout.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n}\r\n  \r\n  export default BodyTagDecoratedLayout","import React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst ListPostItem = ( { post } ) => (\r\n    <li className=\"list-item\">\r\n        <Link to={post.path}>\r\n          <h2>{post.title}</h2>\r\n          <small>\r\n            <FontAwesomeIcon icon=\"calendar-alt\" />\r\n            <span className=\"list-item-date\">{post.date}</span>\r\n          </small>\r\n        </Link>\r\n    </li>\r\n)\r\n\r\nexport default ListPostItem"],"sourceRoot":""}