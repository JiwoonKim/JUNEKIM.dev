{"version":3,"sources":["webpack:///./src/pages/postlist.js","webpack:///./src/components/layouts/footer.js","webpack:///./src/components/layouts/menu.js","webpack:///./src/components/layouts/header.js","webpack:///./src/components/layouts/decorated-layout.js","webpack:///./src/components/layouts/list.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layouts_decorated_layout__WEBPACK_IMPORTED_MODULE_1__","_components_layouts_list__WEBPACK_IMPORTED_MODULE_2__","PostListPage","_ref","data","a","createElement","title","metaDataType","className","allMarkdownRemark","edges","map","post","i","key","slug","node","fields","frontmatter","Footer","react__WEBPACK_IMPORTED_MODULE_3___default","gatsby__WEBPACK_IMPORTED_MODULE_1__","query","render","Date","getFullYear","to","site","siteMetadata","author","href","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_5__","icon","_public_static_d_1041092198_json__WEBPACK_IMPORTED_MODULE_0__","propTypes","PropTypes","string","defaultProps","library","add","fab","SidebarMenu","faHome","faUserAlt","faFolderOpen","faTags","faStickyNote","react_default","gatsby_browser_entry","react_fontawesome_index_es","Header","metaData","layouts_menu","header_HeaderTitle","header_MetaData","HeaderTitle","_ref2","header_TitleSting","TitleSting","_ref3","MetaData","_ref4","header_BlogPostMetaData","header_PostListMetaData","header_DefaultMetaData","DefaultMetaData","BlogPostMetaData","_ref5","date","tags","tag","tagPath","require","kebabCase","PostListMetaData","_ref6","faCalendarAlt","faSearch","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_header__WEBPACK_IMPORTED_MODULE_2__","_footer__WEBPACK_IMPORTED_MODULE_3__","BodyTagDecoratedLayout","children","Fragment","isRequired","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__","ListPostItem"],"mappings":"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","file":"component---src-pages-postlist-js-5d79a48ce5b5b1028f70.js","sourcesContent":["import React from 'react'\r\nimport { graphql } from 'gatsby'\r\n\r\nimport BodyTagDecoratedLayout from '../components/layouts/decorated-layout'\r\nimport ListPostItem from '../components/layouts/list'\r\nimport '../components/layouts/list.css'\r\n\r\nconst PostListPage = ({data}) => (\r\n  <BodyTagDecoratedLayout title=\"모든 글\" metaDataType='all'>\r\n    <ul className=\"list-of-posts\">\r\n      {data.allMarkdownRemark.edges.map((post, i) => (\r\n        <ListPostItem key={i} slug={post.node.fields.slug} frontmatter={post.node.frontmatter} />\r\n      ))}\r\n    </ul>\r\n  </BodyTagDecoratedLayout>\r\n)\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogIndexQuery {\r\n    allMarkdownRemark{\r\n      edges{\r\n        node{\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter{\r\n            title\r\n            date\r\n            tags\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default PostListPage\r\n","import { Link } from 'gatsby'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\n\r\nimport './footer.css'\r\n\r\nconst Footer = () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteAuthorQuery {\r\n        site {\r\n          siteMetadata {\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <footer>\r\n        <h1>\r\n          <span>© {new Date().getFullYear()}, Built by {` `}</span>\r\n          <Link to=\"/\">\r\n            {data.site.siteMetadata.author}\r\n          </Link>\r\n          <span>{` `}</span>\r\n          <a className=\"footer-github-link\" href=\"https://github.com/JiwoonKim\">\r\n            <FontAwesomeIcon icon={['fab', 'github']} /> \r\n          </a>\r\n        </h1>\r\n      </footer>\r\n    )}\r\n  />\r\n)\r\n\r\nFooter.propTypes = {\r\n  author: PropTypes.string,\r\n}\r\n\r\nFooter.defaultProps = {\r\n  author: ``,\r\n}\r\n\r\nlibrary.add(fab);\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHome, faUserAlt, faFolderOpen, faTags, faStickyNote } from '@fortawesome/free-solid-svg-icons'\r\nimport './menu.css'\r\n\r\nconst SidebarMenu = () => {\r\n    library.add(faHome, faUserAlt, faFolderOpen, faTags, faStickyNote);\r\n\r\n    return (\r\n        <nav className =\"sidebar-menu\">\r\n            <section className=\"link-panel\">\r\n                <Link to=\"/\"><FontAwesomeIcon className=\"sidebar-menu-icon\" icon=\"home\" /></Link>\r\n                <Link to=\"/about\"><FontAwesomeIcon className=\"sidebar-menu-icon\" icon=\"user-alt\" /></Link>\r\n                <Link to=\"/tags\"><FontAwesomeIcon className=\"sidebar-menu-icon\" icon=\"folder-open\" /></Link>\r\n                <Link to=\"/postlist\"><FontAwesomeIcon className=\"sidebar-menu-icon\" icon=\"sticky-note\" /></Link> \r\n            </section>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default SidebarMenu;","import { Link } from 'gatsby'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport 'lodash.kebabcase'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTags, faSearch, faCalendarAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport SidebarMenu from './menu'\r\nimport './header.css'\r\n\r\n// header component (title + meta data)\r\nconst Header = ({ title, metaDataType, metaData }) => (\r\n  <header>\r\n    <SidebarMenu />\r\n    <div className=\"banner-container\">\r\n      <HeaderTitle title={title} metaDataType={metaDataType}/>\r\n      <MetaData metaDataType={metaDataType} metaData={metaData}/>\r\n    </div>\r\n  </header>\r\n)\r\n\r\n// title portion of header component\r\nconst HeaderTitle = ({title, metaDataType}) => (\r\n  <div className=\"banner-title-container\">\r\n    <h1 className=\"tag-decoration tag-decoration-left\">\r\n      <span>&lt;h1&gt;</span>  \r\n    </h1>\r\n    <TitleSting title={title} metaDataType={metaDataType} />\r\n    <h1 className=\"tag-decoration tag-decoration-right\">\r\n      <span>&lt;/h1&gt;</span>\r\n    </h1>\r\n  </div>\r\n)\r\n\r\nconst TitleSting = ({title, metaDataType}) => {\r\n  if (metaDataType === 'blog-post' || metaDataType === 'all') {\r\n    return (<h1 className=\"banner-title\">{title}</h1>)\r\n  }\r\n  else {\r\n    return (\r\n      <h1>\r\n        <h1 className=\"banner-title\">{title}</h1>\r\n        <span className=\"banner-title-include-string\">에 해당하는 글</span>\r\n      </h1>)\r\n  }\r\n}\r\n\r\n/** meta data portion of header component\r\n *  (renders differently depending on type of post)\r\n */\r\nconst MetaData = ({metaDataType, metaData}) => {\r\n\r\n  if (metaDataType === 'blog-post') {\r\n    return <BlogPostMetaData metaData={metaData} />\r\n  } \r\n  else if (metaDataType === 'post-list') {\r\n    return <PostListMetaData metaData={metaData} />\r\n  }\r\n  else {\r\n    return <DefaultMetaData />\r\n  }\r\n}\r\n\r\n// no meta data in default\r\nconst DefaultMetaData = () => (\r\n  <div className=\"header-meta-data\"></div>\r\n)\r\n\r\n/** for blog posts,\r\n *  meta data: date + tags\r\n */\r\nconst BlogPostMetaData = ({metaData}) => (\r\n  <div className=\"header-meta-data\">\r\n    <span>\r\n      <FontAwesomeIcon className=\"meta-data-icon\" icon=\"calendar-alt\" />\r\n      <span>{metaData.date}</span>\r\n    </span>\r\n    <span>\r\n      <FontAwesomeIcon className=\"meta-data-icon\" icon=\"tags\" /> \r\n      {metaData.tags.map(tag => {\r\n\r\n        var _ = require('lodash');\r\n        const tagPath = 'tags/' + _.kebabCase(tag);\r\n        return (\r\n          <Link to={tagPath} className=\"tag\">\r\n            <span>{tag}</span>\r\n            <span>&#183;</span>\r\n          </Link>\r\n        )\r\n      })}\r\n    </span>\r\n  </div>\r\n)\r\n\r\n/** for list pages (by tags),\r\n *  meta data: number of blog posts under tag category\r\n */\r\nconst PostListMetaData = ({metaData}) => (\r\n  <div className=\"header-meta-data\">\r\n    <span>\r\n      <FontAwesomeIcon className=\"meta-data-icon\" icon=\"search\" /> \r\n      <span className=\"header-posts-count\">{metaData}</span>\r\n      <span>matching articles</span>\r\n    </span>\r\n  </div>\r\n)\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  title: ``,\r\n}\r\n\r\nlibrary.add(faCalendarAlt, faTags, faSearch);\r\n\r\nexport default Header","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Header from './header'\r\nimport Footer from './footer'\r\nimport './layout.css'\r\n\r\nconst BodyTagDecoratedLayout = ({ title, metaDataType, metaData, children }) => (\r\n    <>\r\n      <Header title={title} metaDataType={metaDataType} metaData={metaData} />\r\n\r\n      <div className=\"body-container\">\r\n        <h1 className=\"tag-decoration body-tag-left\">\r\n          <span>&lt;body&gt;</span>  \r\n        </h1>\r\n\r\n        <main className=\"body-middle-part\">\r\n          {children}\r\n        </main>\r\n\r\n        <h1 className=\"tag-decoration body-tag-right\">\r\n          <span>&lt;/body&gt;</span>  \r\n        </h1>\r\n      </div>\r\n\r\n      <Footer />\r\n    </>\r\n  )\r\n  \r\nBodyTagDecoratedLayout.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n}\r\n  \r\n  export default BodyTagDecoratedLayout","import React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst ListPostItem = ( { slug, frontmatter } ) => (\r\n    <li className=\"list-item\">\r\n        <Link to={slug}>\r\n          <h2>{frontmatter.title}</h2>\r\n          <small>\r\n            <FontAwesomeIcon icon=\"calendar-alt\" />\r\n            <span className=\"list-item-date\">{frontmatter.date}</span>\r\n          </small>\r\n        </Link>\r\n    </li>\r\n)\r\n\r\nexport default ListPostItem"],"sourceRoot":""}