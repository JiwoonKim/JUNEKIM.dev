{"version":3,"sources":["webpack:///./src/pages/postlist.js","webpack:///./src/components/layouts/footer.js","webpack:///./src/components/layouts/menu.js","webpack:///./src/components/layouts/header.js","webpack:///./src/components/layouts/decorated-layout.js","webpack:///./src/components/layouts/list.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layouts_decorated_layout__WEBPACK_IMPORTED_MODULE_2__","_components_layouts_list__WEBPACK_IMPORTED_MODULE_3__","PostListPage","_ref","data","a","createElement","title","metaDataType","className","allMarkdownRemark","edges","map","post","node","frontmatter","Footer","react__WEBPACK_IMPORTED_MODULE_3___default","gatsby__WEBPACK_IMPORTED_MODULE_1__","query","render","Date","getFullYear","to","site","siteMetadata","author","href","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_5__","icon","_public_static_d_1041092198_json__WEBPACK_IMPORTED_MODULE_0__","propTypes","PropTypes","string","defaultProps","library","add","fab","ToggleMenu","showSettings","event","preventDefault","react_default","BurgerMenu","gatsby_browser_entry","React","Component","Header","metaData","layouts_menu","header_HeaderTitle","header_MetaData","HeaderTitle","_ref2","header_TitleSting","TitleSting","_ref3","MetaData","_ref4","header_BlogPostMetaData","header_PostListMetaData","header_DefaultMetaData","DefaultMetaData","BlogPostMetaData","_ref5","react_fontawesome_index_es","date","tags","tag","toLowerCase","PostListMetaData","_ref6","faCalendarAlt","faTags","faSearch","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_header__WEBPACK_IMPORTED_MODULE_2__","_footer__WEBPACK_IMPORTED_MODULE_3__","BodyTagDecoratedLayout","children","Fragment","isRequired","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__","ListPostItem","path"],"mappings":"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","file":"component---src-pages-postlist-js-b12b18f2c864965bafd4.js","sourcesContent":["import React from 'react'\r\nimport { Link, graphql } from 'gatsby'\r\n\r\nimport BodyTagDecoratedLayout from '../components/layouts/decorated-layout'\r\nimport ListPostItem from '../components/layouts/list'\r\nimport '../components/layouts/list.css'\r\n\r\nconst PostListPage = ({data}) => (\r\n  <BodyTagDecoratedLayout title=\"모든 글\" metaDataType='all'>\r\n    <ul className=\"list-of-posts\">\r\n      {data.allMarkdownRemark.edges.map(post => (\r\n        <ListPostItem post={post.node.frontmatter} />\r\n      ))}\r\n    </ul>\r\n  </BodyTagDecoratedLayout>\r\n)\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogIndexQuery {\r\n    allMarkdownRemark{\r\n      edges{\r\n        node{\r\n          id\r\n          frontmatter{\r\n            path\r\n            title\r\n            date\r\n            tags\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default PostListPage\r\n","import { Link } from 'gatsby'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\n\r\nimport './footer.css'\r\n\r\nconst Footer = () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteAuthorQuery {\r\n        site {\r\n          siteMetadata {\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <footer>\r\n        <h1>\r\n          <span>© {new Date().getFullYear()}, Built by {` `}</span>\r\n          <Link to=\"/\">\r\n          {data.site.siteMetadata.author}\r\n          </Link>\r\n          <span>{` `}</span>\r\n          <a className=\"footer-github-link\" href=\"https://github.com/JiwoonKim\">\r\n            <FontAwesomeIcon icon={['fab', 'github']} /> \r\n          </a>\r\n        </h1>\r\n      </footer>\r\n    )}\r\n  />\r\n)\r\n\r\nFooter.propTypes = {\r\n  author: PropTypes.string,\r\n}\r\n\r\nFooter.defaultProps = {\r\n  author: ``,\r\n}\r\n\r\nlibrary.add(fab);\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\nimport { slide as Menu } from 'react-burger-menu'\r\nimport './menu.css'\r\n\r\nclass ToggleMenu extends React.Component {\r\n    showSettings(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return <Menu >\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/about\">About</Link>\r\n            <Link to=\"/tags\">Category</Link>\r\n            <Link to=\"/postlist\">All Posts</Link>\r\n          </Menu>\r\n    }\r\n}\r\n\r\nexport default ToggleMenu;","import { Link } from 'gatsby'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTags, faSearch, faCalendarAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport ToggleMenu from './menu'\r\nimport './header.css'\r\n\r\n// header component (title + meta data)\r\nconst Header = ({ title, metaDataType, metaData }) => (\r\n  <header>\r\n    <nav>\r\n      <ToggleMenu />\r\n    </nav>\r\n    <div className=\"banner-container\">\r\n      <HeaderTitle title={title} metaDataType={metaDataType}/>\r\n      <MetaData metaDataType={metaDataType} metaData={metaData}/>\r\n    </div>\r\n  </header>\r\n)\r\n\r\n// title portion of header component\r\nconst HeaderTitle = ({title, metaDataType}) => (\r\n  <div className=\"banner-title-container\">\r\n    <h1 className=\"tag-decoration tag-decoration-left\">\r\n      <span>&lt;h1&gt;</span>  \r\n    </h1>\r\n    <TitleSting title={title} metaDataType={metaDataType} />\r\n    <h1 className=\"tag-decoration tag-decoration-right\">\r\n      <span>&lt;/h1&gt;</span>\r\n    </h1>\r\n  </div>\r\n)\r\n\r\nconst TitleSting = ({title, metaDataType}) => {\r\n  if (metaDataType === 'blog-post' || metaDataType === 'all') {\r\n    return (<h1 className=\"banner-title\">{title}</h1>)\r\n  }\r\n  else {\r\n    return (\r\n      <h1 className=\"banner-title\">\r\n        {title}\r\n        <span className=\"banner-title-include-string\">에 해당하는 글</span>\r\n      </h1>)\r\n  }\r\n}\r\n\r\n/** meta data portion of header component\r\n *  (renders differently depending on type of post)\r\n */\r\nconst MetaData = ({metaDataType, metaData}) => {\r\n\r\n  if (metaDataType === 'blog-post') {\r\n    return <BlogPostMetaData metaData={metaData} />\r\n  } \r\n  else if (metaDataType === 'post-list') {\r\n    return <PostListMetaData metaData={metaData} />\r\n  }\r\n  else {\r\n    return <DefaultMetaData />\r\n  }\r\n}\r\n\r\n// no meta data in default\r\nconst DefaultMetaData = () => (\r\n  <div className=\"header-meta-data\"></div>\r\n)\r\n\r\n/** for blog posts,\r\n *  meta data: date + tags\r\n */\r\nconst BlogPostMetaData = ({metaData}) => (\r\n  <div className=\"header-meta-data\">\r\n    <span>\r\n      <FontAwesomeIcon className=\"meta-data-icon\" icon=\"calendar-alt\" />\r\n      <span>{metaData.date}</span>\r\n    </span>\r\n    <span>\r\n      <FontAwesomeIcon className=\"meta-data-icon\" icon=\"tags\" /> \r\n      {metaData.tags.map(tag => (\r\n        <Link to={`tags/${tag.toLowerCase()}`} className=\"tag\">\r\n          <span>{tag}</span>\r\n          <span>&#183;</span>\r\n        </Link>\r\n      ))}\r\n    </span>\r\n  </div>\r\n)\r\n\r\n/** for tag lists,\r\n *  meta data: number of blog posts under tag category\r\n */\r\nconst PostListMetaData = ({metaData}) => (\r\n  <div className=\"header-meta-data\">\r\n    <span>\r\n      <FontAwesomeIcon className=\"meta-data-icon\" icon=\"search\" /> \r\n      <span className=\"header-posts-count\">{metaData}</span>\r\n      <span>matching articles</span>\r\n    </span>\r\n  </div>\r\n)\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  title: ``,\r\n}\r\n\r\nlibrary.add(faCalendarAlt, faTags, faSearch);\r\n\r\nexport default Header","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Header from './header'\r\nimport Footer from './footer'\r\nimport './layout.css'\r\n\r\nconst BodyTagDecoratedLayout = ({ title, metaDataType, metaData, children }) => (\r\n    <>\r\n      <Header title={title} metaDataType={metaDataType} metaData={metaData} />\r\n\r\n      <div className=\"body-container\">\r\n        <h1 className=\"tag-decoration body-tag-left\">\r\n          <span>&lt;body&gt;</span>  \r\n        </h1>\r\n\r\n        <main className=\"body-middle-part\">\r\n          {children}\r\n        </main>\r\n\r\n        <h1 className=\"tag-decoration body-tag-right\">\r\n          <span>&lt;/body&gt;</span>  \r\n        </h1>\r\n      </div>\r\n\r\n      <Footer />\r\n    </>\r\n  )\r\n  \r\nBodyTagDecoratedLayout.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n}\r\n  \r\n  export default BodyTagDecoratedLayout","import React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst ListPostItem = ( { post } ) => (\r\n    <li className=\"list-item\">\r\n        <Link to={post.path}>\r\n          <h2>{post.title}</h2>\r\n          <small>\r\n            <FontAwesomeIcon icon=\"calendar-alt\" />\r\n            <span className=\"list-item-date\">{post.date}</span>\r\n          </small>\r\n        </Link>\r\n    </li>\r\n)\r\n\r\nexport default ListPostItem"],"sourceRoot":""}