{"version":3,"sources":["webpack:///./src/pages/postlist.js","webpack:///./src/components/seo.js","webpack:///./src/components/layouts/menu.js","webpack:///./src/components/layouts/header.js","webpack:///./src/components/layouts/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layouts_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","PostListPage","_ref","data","a","createElement","title","keywords","allMarkdownRemark","edges","map","post","key","node","id","to","frontmatter","path","date","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","render","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","ToggleMenu","showSettings","event","preventDefault","react_default","BurgerMenu","gatsby_browser_entry","React","Component","Header","siteTitle","style","background","opacity","marginBottom","layouts_menu","margin","maxWidth","padding","display","color","textDecoration","Layout","children","Fragment","header","Date","getFullYear","href","_755544856"],"mappings":"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","file":"component---src-pages-postlist-js-3702e6913d784a97be27.js","sourcesContent":["import React from 'react'\r\nimport { Link, graphql } from 'gatsby'\r\n\r\nimport Layout from '../components/layouts/layout'\r\nimport SEO from '../components/seo'\r\n\r\nconst PostListPage = ({data}) => (\r\n  <Layout>\r\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\r\n    <h1>태그</h1>\r\n    <hr />\r\n    <h1>최근 글</h1>\r\n    {data.allMarkdownRemark.edges.map(post => (\r\n      <div key={post.node.id}>\r\n        <Link to={post.node.frontmatter.path}>\r\n          <h4>{post.node.frontmatter.title}</h4>\r\n          <small>Posted on {post.node.frontmatter.date}</small>\r\n        </Link>\r\n      </div>\r\n    ))}\r\n  </Layout>\r\n)\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogIndexQuery {\r\n    allMarkdownRemark{\r\n      edges{\r\n        node{\r\n          id\r\n          frontmatter{\r\n            path\r\n            title\r\n            date\r\n            tags\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default PostListPage\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  return (\r\n    <StaticQuery\r\n      query={detailsQuery}\r\n      render={data => {\r\n        const metaDescription =\r\n          description || data.site.siteMetadata.description\r\n        return (\r\n          <Helmet\r\n            htmlAttributes={{\r\n              lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\r\n            meta={[\r\n              {\r\n                name: `description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                property: `og:description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:type`,\r\n                content: `website`,\r\n              },\r\n              {\r\n                name: `twitter:card`,\r\n                content: `summary`,\r\n              },\r\n              {\r\n                name: `twitter:creator`,\r\n                content: data.site.siteMetadata.author,\r\n              },\r\n              {\r\n                name: `twitter:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                name: `twitter:description`,\r\n                content: metaDescription,\r\n              },\r\n            ]\r\n              .concat(\r\n                keywords.length > 0\r\n                  ? {\r\n                      name: `keywords`,\r\n                      content: keywords.join(`, `),\r\n                    }\r\n                  : []\r\n              )\r\n              .concat(meta)}\r\n          />\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n\r\nconst detailsQuery = graphql`\r\n  query DefaultSEOQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\nimport { slide as Menu } from 'react-burger-menu'\r\nimport './menu.css'\r\n\r\nclass ToggleMenu extends React.Component {\r\n    showSettings(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return <Menu >\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/about\">About</Link>\r\n            <Link to=\"/postlist\">Category</Link>\r\n          </Menu>\r\n    }\r\n}\r\n\r\nexport default ToggleMenu;","import { Link } from 'gatsby'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport ToggleMenu from './menu'\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <div\r\n    style={{\r\n      background: `#F4D078`,\r\n      opacity: `1.0`,\r\n      marginBottom: `1.45rem`,\r\n    }}\r\n  >\r\n    <div>\r\n      <ToggleMenu />\r\n    </div>\r\n    <div\r\n      style={{\r\n        margin: `0 auto`,\r\n        maxWidth: 960,\r\n        padding: `1.45rem 1.0875rem`,\r\n      }}\r\n    >\r\n      <h1\r\n        style={{\r\n          margin: 0,\r\n          display: `inline-block`,\r\n        }}\r\n      >\r\n        <Link\r\n          to=\"/\"\r\n          style={{\r\n            color: `#fffce1`,\r\n            textDecoration: `none`,\r\n          }}\r\n        >\r\n          {siteTitle}\r\n        </Link>\r\n      </h1>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport Header from './header'\r\nimport './layout.css'\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n        <div\r\n          style={{ \r\n            margin: `2.5rem auto`, \r\n            maxWidth: 800 \r\n          }}\r\n        >\r\n          {children}\r\n          <footer>\r\n            © {new Date().getFullYear()}, Built with\r\n            {` `}\r\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\r\n          </footer>\r\n        </div>\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}