{"version":3,"sources":["webpack:///./src/components/templates/blog-post.js","webpack:///./src/components/layouts/menu.js","webpack:///./src/components/layouts/header.js","webpack:///./src/components/layouts/footer.js","webpack:///./src/components/layouts/layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/image.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Template","postQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_layouts_layout__WEBPACK_IMPORTED_MODULE_2__","_seo__WEBPACK_IMPORTED_MODULE_4__","_fortawesome_fontawesome_svg_core__WEBPACK_IMPORTED_MODULE_5__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_6__","_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_7__","_ref","post","data","markdownRemark","a","createElement","title","keywords","className","frontmatter","date","tags","map","tag","to","icon","dangerouslySetInnerHTML","__html","html","library","add","faTag","ToggleMenu","showSettings","event","preventDefault","render","react_default","BurgerMenu","gatsby_browser_entry","React","Component","Header","siteTitle","layouts_menu","propTypes","PropTypes","string","defaultProps","Footer","author","Date","getFullYear","Layout","children","query","Fragment","layouts_header","site","siteMetadata","footer","_755544856","node","isRequired","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array","arrayOf","Image","gatsby__WEBPACK_IMPORTED_MODULE_2__","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","fluid","placeholderImage","childImageSharp","_public_static_d_2011440971_json__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"component---src-components-templates-blog-post-js-62eaa5f9894140c793a7.js","sourcesContent":["import React from 'react'\r\nimport { Link, graphql } from 'gatsby'\r\n\r\nimport Layout from '../layouts/layout'\r\nimport Image from '../image'\r\nimport SEO from '../seo'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTag } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default function Template({ data }) {\r\n    const post = data.markdownRemark\r\n\r\n    return (\r\n      <Layout>\r\n        <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\r\n        <article className=\"post\">\r\n          <section className=\"post-title\">\r\n            <h1>{post.frontmatter.title}</h1>\r\n            <section className=\"post-title-flex\">\r\n              <time>{post.frontmatter.date} | </time> \r\n              {post.frontmatter.tags.map(tag => (\r\n                <Link to=\"/\" className=\"tag\">\r\n                  <FontAwesomeIcon icon=\"tag\" /> \r\n                  <span>{tag}</span>\r\n                </Link>\r\n              ))}\r\n              </section>\r\n          </section>\r\n          <section className=\"post-content\" \r\n            dangerouslySetInnerHTML={{ __html: post.html }} \r\n          />\r\n        </article>\r\n      </Layout>\r\n    )\r\n}\r\n\r\nexport const postQuery = graphql`\r\n  query BlogPostByPath($path: String!) {\r\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\r\n      html\r\n      frontmatter {\r\n        path\r\n        title\r\n        date\r\n        tags\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nlibrary.add(faTag);","import React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\nimport { slide as Menu } from 'react-burger-menu'\r\nimport './menu.css'\r\n\r\nclass ToggleMenu extends React.Component {\r\n    showSettings(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return <Menu >\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/about\">About</Link>\r\n            <Link to=\"/postlist\">Category</Link>\r\n          </Menu>\r\n    }\r\n}\r\n\r\nexport default ToggleMenu;","import { Link } from 'gatsby'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\n\r\nimport ToggleMenu from './menu'\r\nimport './header.css'\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <header>\r\n    <nav>\r\n      <ToggleMenu />\r\n    </nav>\r\n    <div className=\"title\">\r\n      <h1>\r\n        <Link className=\"title-link\" to=\"/\">\r\n          {siteTitle}\r\n        </Link>\r\n      </h1>\r\n    </div>\r\n  </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","import { Link } from 'gatsby'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\n\r\nconst Footer = ({ author }) => (\r\n  <footer>\r\n      <h1>\r\n        Â© {new Date().getFullYear()}, Built by\r\n        {` `}\r\n        <Link to=\"/\">\r\n          {author}\r\n        </Link>\r\n      </h1>\r\n  </footer>\r\n)\r\n\r\nFooter.propTypes = {\r\n  author: PropTypes.string,\r\n}\r\n\r\nFooter.defaultProps = {\r\n  author: ``,\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport Header from './header'\r\nimport Footer from './footer'\r\nimport './layout.css'\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n        <main>\r\n          {children}\r\n        </main>\r\n        <Footer />\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  return (\r\n    <StaticQuery\r\n      query={detailsQuery}\r\n      render={data => {\r\n        const metaDescription =\r\n          description || data.site.siteMetadata.description\r\n        return (\r\n          <Helmet\r\n            htmlAttributes={{\r\n              lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\r\n            meta={[\r\n              {\r\n                name: `description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                property: `og:description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:type`,\r\n                content: `website`,\r\n              },\r\n              {\r\n                name: `twitter:card`,\r\n                content: `summary`,\r\n              },\r\n              {\r\n                name: `twitter:creator`,\r\n                content: data.site.siteMetadata.author,\r\n              },\r\n              {\r\n                name: `twitter:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                name: `twitter:description`,\r\n                content: metaDescription,\r\n              },\r\n            ]\r\n              .concat(\r\n                keywords.length > 0\r\n                  ? {\r\n                      name: `keywords`,\r\n                      content: keywords.join(`, `),\r\n                    }\r\n                  : []\r\n              )\r\n              .concat(meta)}\r\n          />\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n\r\nconst detailsQuery = graphql`\r\n  query DefaultSEOQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\nimport Img from 'gatsby-image'\r\n\r\n/*\r\n * This component is built using `gatsby-image` to automatically serve optimized\r\n * images with lazy loading and reduced file sizes. The image is loaded using a\r\n * `StaticQuery`, which allows us to load the image from directly within this\r\n * component, rather than having to pass the image data down from pages.\r\n *\r\n * For more information, see the docs:\r\n * - `gatsby-image`: https://gatsby.app/gatsby-image\r\n * - `StaticQuery`: https://gatsby.app/staticquery\r\n */\r\n\r\nconst Image = () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        placeholderImage: file(relativePath: { eq: \"gatsby-astronaut.png\" }) {\r\n          childImageSharp {\r\n            fluid(maxWidth: 300) {\r\n              ...GatsbyImageSharpFluid\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\r\n  />\r\n)\r\nexport default Image\r\n"],"sourceRoot":""}