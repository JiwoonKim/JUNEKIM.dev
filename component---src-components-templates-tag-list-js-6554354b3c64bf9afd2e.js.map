{"version":3,"sources":["webpack:///./src/components/templates/tag-list.js","webpack:///./src/components/layouts/footer.js","webpack:///./src/components/layouts/menu.js","webpack:///./src/components/layouts/header.js","webpack:///./src/components/layouts/decorated-layout.js","webpack:///./src/components/layouts/list.js"],"names":["__webpack_require__","r","__webpack_exports__","d","tagQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_layouts_decorated_layout__WEBPACK_IMPORTED_MODULE_1__","_layouts_list__WEBPACK_IMPORTED_MODULE_2__","TagsTemplate","props","posts","data","allMarkdownRemark","edges","tag","pageContext","count","totalCount","a","createElement","title","metaDataType","metaData","className","map","post","slug","node","fields","frontmatter","Footer","react__WEBPACK_IMPORTED_MODULE_3___default","gatsby__WEBPACK_IMPORTED_MODULE_1__","query","render","Date","getFullYear","to","site","siteMetadata","author","href","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_5__","icon","_public_static_d_1041092198_json__WEBPACK_IMPORTED_MODULE_0__","propTypes","PropTypes","string","defaultProps","library","add","fab","SidebarMenu","faHome","faUserAlt","faFolderOpen","faTags","faStickyNote","react_default","gatsby_browser_entry","react_fontawesome_index_es","Header","_ref","layouts_menu","header_HeaderTitle","header_MetaData","HeaderTitle","_ref2","header_TitleSting","TitleSting","_ref3","MetaData","_ref4","header_BlogPostMetaData","header_PostListMetaData","header_DefaultMetaData","DefaultMetaData","BlogPostMetaData","_ref5","date","tags","tagPath","require","kebabCase","PostListMetaData","_ref6","faCalendarAlt","faSearch","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_header__WEBPACK_IMPORTED_MODULE_2__","_footer__WEBPACK_IMPORTED_MODULE_3__","BodyTagDecoratedLayout","children","Fragment","isRequired","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__","ListPostItem"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,6BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAyBaI,GAzBbJ,EAAA,KAyBqB,cAmBNU,UArCM,SAACC,GAElB,IAAMC,EAAQD,EAAME,KAAKC,kBAAkBC,MACnCC,EAAQL,EAAMM,YAAdD,IACFE,EAAQP,EAAME,KAAKC,kBAAkBK,WAE3C,OACIb,EAAAc,EAAAC,cAACb,EAAA,EAAD,CAAwBc,MAAON,EAAKO,aAAa,YAAYC,SAAUN,GACrEZ,EAAAc,EAAAC,cAAA,MAAII,UAAU,iBACXb,EAAMc,IAAI,SAAAC,GAAI,OACbrB,EAAAc,EAAAC,cAACZ,EAAA,EAAD,CAAcmB,KAAMD,EAAKE,KAAKC,OAAOF,KAAMG,YAAaJ,EAAKE,KAAKE,qICN1EC,UAAS,kBACbC,EAAAb,EAAAC,cAACa,EAAA,YAAD,CACEC,MAAK,aASLC,OAAQ,SAAAvB,GAAI,OACVoB,EAAAb,EAAAC,cAAA,cACEY,EAAAb,EAAAC,cAAA,UACEY,EAAAb,EAAAC,cAAA,kBAAS,IAAIgB,MAAOC,cAApB,mBACAL,EAAAb,EAAAC,cAACa,EAAA,KAAD,CAAMK,GAAG,KACN1B,EAAK2B,KAAKC,aAAaC,QAE1BT,EAAAb,EAAAC,cAAA,iBACAY,EAAAb,EAAAC,cAAA,KAAGI,UAAU,qBAAqBkB,KAAK,gCACrCV,EAAAb,EAAAC,cAACuB,EAAA,EAAD,CAAiBC,KAAM,CAAC,MAAO,gBAnBzChC,KAAAiC,MA2BFd,EAAOe,UAAY,CACjBL,OAAQM,IAAUC,QAGpBjB,EAAOkB,aAAe,CACpBR,OAAM,IAGRS,IAAQC,IAAIC,KAEGrB,+LC1BAsB,UAfK,WAGhB,OAFAH,IAAQC,IAAIG,IAAQC,IAAWC,IAAcC,IAAQC,KAGjDC,EAAAxC,EAAAC,cAAA,OAAKI,UAAW,gBACZmC,EAAAxC,EAAAC,cAAA,WAASI,UAAU,cACfmC,EAAAxC,EAAAC,cAACwC,EAAA,KAAD,CAAMtB,GAAG,KAAIqB,EAAAxC,EAAAC,cAACyC,EAAA,EAAD,CAAiBrC,UAAU,oBAAoBoB,KAAK,UACjEe,EAAAxC,EAAAC,cAACwC,EAAA,KAAD,CAAMtB,GAAG,UAASqB,EAAAxC,EAAAC,cAACyC,EAAA,EAAD,CAAiBrC,UAAU,oBAAoBoB,KAAK,cACtEe,EAAAxC,EAAAC,cAACwC,EAAA,KAAD,CAAMtB,GAAG,SAAQqB,EAAAxC,EAAAC,cAACyC,EAAA,EAAD,CAAiBrC,UAAU,oBAAoBoB,KAAK,iBACrEe,EAAAxC,EAAAC,cAACwC,EAAA,KAAD,CAAMtB,GAAG,aAAYqB,EAAAxC,EAAAC,cAACyC,EAAA,EAAD,CAAiBrC,UAAU,oBAAoBoB,KAAK,qBCJnFkB,UAAS,SAAAC,GAAA,IAAG1C,EAAH0C,EAAG1C,MAAOC,EAAVyC,EAAUzC,aAAcC,EAAxBwC,EAAwBxC,SAAxB,OACboC,EAAAxC,EAAAC,cAAA,cACEuC,EAAAxC,EAAAC,cAAC4C,EAAD,MACAL,EAAAxC,EAAAC,cAAA,OAAKI,UAAU,oBACbmC,EAAAxC,EAAAC,cAAC6C,EAAD,CAAa5C,MAAOA,EAAOC,aAAcA,IACzCqC,EAAAxC,EAAAC,cAAC8C,EAAD,CAAU5C,aAAcA,EAAcC,SAAUA,QAMhD4C,EAAc,SAAAC,GAAA,IAAE/C,EAAF+C,EAAE/C,MAAOC,EAAT8C,EAAS9C,aAAT,OAClBqC,EAAAxC,EAAAC,cAAA,OAAKI,UAAU,0BACbmC,EAAAxC,EAAAC,cAAA,MAAII,UAAU,sCACZmC,EAAAxC,EAAAC,cAAA,qBAEFuC,EAAAxC,EAAAC,cAACiD,EAAD,CAAYhD,MAAOA,EAAOC,aAAcA,IACxCqC,EAAAxC,EAAAC,cAAA,MAAII,UAAU,uCACZmC,EAAAxC,EAAAC,cAAA,wBAKAkD,EAAa,SAAAC,GAA2B,IAAzBlD,EAAyBkD,EAAzBlD,MAAOC,EAAkBiD,EAAlBjD,aAC1B,MAAqB,cAAjBA,GAAiD,QAAjBA,EAC1BqC,EAAAxC,EAAAC,cAAA,MAAII,UAAU,gBAAgBH,GAIpCsC,EAAAxC,EAAAC,cAAA,UACEuC,EAAAxC,EAAAC,cAAA,MAAII,UAAU,gBAAgBH,GAC9BsC,EAAAxC,EAAAC,cAAA,QAAMI,UAAU,+BAAhB,cAQFgD,EAAW,SAAAC,GAA8B,IAA5BnD,EAA4BmD,EAA5BnD,aAAcC,EAAckD,EAAdlD,SAE/B,MAAqB,cAAjBD,EACKqC,EAAAxC,EAAAC,cAACsD,EAAD,CAAkBnD,SAAUA,IAEX,cAAjBD,EACAqC,EAAAxC,EAAAC,cAACuD,EAAD,CAAkBpD,SAAUA,IAG5BoC,EAAAxC,EAAAC,cAACwD,EAAD,OAKLC,EAAkB,kBACtBlB,EAAAxC,EAAAC,cAAA,OAAKI,UAAU,sBAMXsD,EAAmB,SAAAC,GAAA,IAAExD,EAAFwD,EAAExD,SAAF,OACvBoC,EAAAxC,EAAAC,cAAA,OAAKI,UAAU,oBACbmC,EAAAxC,EAAAC,cAAA,YACEuC,EAAAxC,EAAAC,cAACyC,EAAA,EAAD,CAAiBrC,UAAU,iBAAiBoB,KAAK,iBACjDe,EAAAxC,EAAAC,cAAA,YAAOG,EAASyD,OAElBrB,EAAAxC,EAAAC,cAAA,YACEuC,EAAAxC,EAAAC,cAACyC,EAAA,EAAD,CAAiBrC,UAAU,iBAAiBoB,KAAK,SAChDrB,EAAS0D,KAAKxD,IAAI,SAAAV,GAEjB,IACMmE,EAAU,QADRC,EAAQ,KACYC,UAAUrE,GACtC,OACE4C,EAAAxC,EAAAC,cAACwC,EAAA,KAAD,CAAMtB,GAAI4C,EAAS1D,UAAU,OAC3BmC,EAAAxC,EAAAC,cAAA,YAAOL,GACP4C,EAAAxC,EAAAC,cAAA,uBAWNiE,EAAmB,SAAAC,GAAA,IAAE/D,EAAF+D,EAAE/D,SAAF,OACvBoC,EAAAxC,EAAAC,cAAA,OAAKI,UAAU,oBACbmC,EAAAxC,EAAAC,cAAA,YACEuC,EAAAxC,EAAAC,cAACyC,EAAA,EAAD,CAAiBrC,UAAU,iBAAiBoB,KAAK,WACjDe,EAAAxC,EAAAC,cAAA,QAAMI,UAAU,sBAAsBD,GACtCoC,EAAAxC,EAAAC,cAAA,oCAKN0C,EAAOhB,UAAY,CACjBzB,MAAO0B,IAAUC,QAGnBc,EAAOb,aAAe,CACpB5B,MAAK,IAGP6B,IAAQC,IAAIoC,IAAe9B,IAAQ+B,KAEpB1B,wCCvHf,IAAA1D,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAqF,EAAA1F,EAAA,GAAA2F,EAAA3F,EAAAO,EAAAmF,GAAAE,EAAA5F,EAAA,KAAA6F,EAAA7F,EAAA,KAOM8F,GAPN9F,EAAA,KAO+B,SAAAgE,GAAA,IAAG1C,EAAH0C,EAAG1C,MAAOC,EAAVyC,EAAUzC,aAAcC,EAAxBwC,EAAwBxC,SAAUuE,EAAlC/B,EAAkC+B,SAAlC,OAC3BzF,EAAAc,EAAAC,cAAAf,EAAAc,EAAA4E,SAAA,KACE1F,EAAAc,EAAAC,cAACuE,EAAA,EAAD,CAAQtE,MAAOA,EAAOC,aAAcA,EAAcC,SAAUA,IAE5DlB,EAAAc,EAAAC,cAAA,OAAKI,UAAU,kBACbnB,EAAAc,EAAAC,cAAA,MAAII,UAAU,gCACZnB,EAAAc,EAAAC,cAAA,uBAGFf,EAAAc,EAAAC,cAAA,QAAMI,UAAU,oBACbsE,GAGHzF,EAAAc,EAAAC,cAAA,MAAII,UAAU,iCACZnB,EAAAc,EAAAC,cAAA,yBAIJf,EAAAc,EAAAC,cAACwE,EAAA,EAAD,SAINC,EAAuB/C,UAAY,CAC/BgD,SAAU/C,IAAUnB,KAAKoE,YAGZH,wCCjCjB,IAAAzF,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAA6B,EAAAlC,EAAA,IAAAkG,EAAAlG,EAAA,KAiBemG,IAZM,SAAAnC,GAAA,IAAIpC,EAAJoC,EAAIpC,KAAMG,EAAViC,EAAUjC,YAAV,OACjBzB,EAAAc,EAAAC,cAAA,MAAII,UAAU,aACVnB,EAAAc,EAAAC,cAACa,EAAA,KAAD,CAAMK,GAAIX,GACRtB,EAAAc,EAAAC,cAAA,UAAKU,EAAYT,OACjBhB,EAAAc,EAAAC,cAAA,aACEf,EAAAc,EAAAC,cAAC6E,EAAA,EAAD,CAAiBrD,KAAK,iBACtBvC,EAAAc,EAAAC,cAAA,QAAMI,UAAU,kBAAkBM,EAAYkD","file":"component---src-components-templates-tag-list-js-6554354b3c64bf9afd2e.js","sourcesContent":["import React from 'react'\r\nimport { graphql } from 'gatsby'\r\n\r\nimport BodyTagDecoratedLayout from '../layouts/decorated-layout'\r\nimport ListPostItem from '../layouts/list'\r\nimport '../layouts/list.css'\r\n\r\nconst TagsTemplate = (props) => {\r\n\r\n    const posts = props.data.allMarkdownRemark.edges;\r\n    const { tag } = props.pageContext;\r\n    const count = props.data.allMarkdownRemark.totalCount;\r\n\r\n    return (\r\n        <BodyTagDecoratedLayout title={tag} metaDataType='post-list' metaData={count}>\r\n          <ul className=\"list-of-posts\">\r\n            {posts.map(post => (\r\n              <ListPostItem slug={post.node.fields.slug} frontmatter={post.node.frontmatter} />\r\n            ))}\r\n          </ul>\r\n        </BodyTagDecoratedLayout>\r\n    )\r\n\r\n}\r\n\r\nexport const tagQuery = graphql`\r\nquery($tag: String) {\r\n    allMarkdownRemark(filter: { frontmatter: { tags: { in: [$tag] } } }) {\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            date\r\n          }\r\n        }\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`\r\n\r\nexport default TagsTemplate","import { Link } from 'gatsby'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\n\r\nimport './footer.css'\r\n\r\nconst Footer = () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteAuthorQuery {\r\n        site {\r\n          siteMetadata {\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <footer>\r\n        <h1>\r\n          <span>Â© {new Date().getFullYear()}, Built by {` `}</span>\r\n          <Link to=\"/\">\r\n            {data.site.siteMetadata.author}\r\n          </Link>\r\n          <span>{` `}</span>\r\n          <a className=\"footer-github-link\" href=\"https://github.com/JiwoonKim\">\r\n            <FontAwesomeIcon icon={['fab', 'github']} /> \r\n          </a>\r\n        </h1>\r\n      </footer>\r\n    )}\r\n  />\r\n)\r\n\r\nFooter.propTypes = {\r\n  author: PropTypes.string,\r\n}\r\n\r\nFooter.defaultProps = {\r\n  author: ``,\r\n}\r\n\r\nlibrary.add(fab);\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHome, faUserAlt, faFolderOpen, faTags, faStickyNote } from '@fortawesome/free-solid-svg-icons'\r\nimport './menu.css'\r\n\r\nconst SidebarMenu = () => {\r\n    library.add(faHome, faUserAlt, faFolderOpen, faTags, faStickyNote);\r\n\r\n    return (\r\n        <nav className =\"sidebar-menu\">\r\n            <section className=\"link-panel\">\r\n                <Link to=\"/\"><FontAwesomeIcon className=\"sidebar-menu-icon\" icon=\"home\" /></Link>\r\n                <Link to=\"/about\"><FontAwesomeIcon className=\"sidebar-menu-icon\" icon=\"user-alt\" /></Link>\r\n                <Link to=\"/tags\"><FontAwesomeIcon className=\"sidebar-menu-icon\" icon=\"folder-open\" /></Link>\r\n                <Link to=\"/postlist\"><FontAwesomeIcon className=\"sidebar-menu-icon\" icon=\"sticky-note\" /></Link> \r\n            </section>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default SidebarMenu;","import { Link } from 'gatsby'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport 'lodash.kebabcase'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTags, faSearch, faCalendarAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport SidebarMenu from './menu'\r\nimport './header.css'\r\n\r\n// header component (title + meta data)\r\nconst Header = ({ title, metaDataType, metaData }) => (\r\n  <header>\r\n    <SidebarMenu />\r\n    <div className=\"banner-container\">\r\n      <HeaderTitle title={title} metaDataType={metaDataType}/>\r\n      <MetaData metaDataType={metaDataType} metaData={metaData}/>\r\n    </div>\r\n  </header>\r\n)\r\n\r\n// title portion of header component\r\nconst HeaderTitle = ({title, metaDataType}) => (\r\n  <div className=\"banner-title-container\">\r\n    <h1 className=\"tag-decoration tag-decoration-left\">\r\n      <span>&lt;h1&gt;</span>  \r\n    </h1>\r\n    <TitleSting title={title} metaDataType={metaDataType} />\r\n    <h1 className=\"tag-decoration tag-decoration-right\">\r\n      <span>&lt;/h1&gt;</span>\r\n    </h1>\r\n  </div>\r\n)\r\n\r\nconst TitleSting = ({title, metaDataType}) => {\r\n  if (metaDataType === 'blog-post' || metaDataType === 'all') {\r\n    return (<h1 className=\"banner-title\">{title}</h1>)\r\n  }\r\n  else {\r\n    return (\r\n      <h1>\r\n        <h1 className=\"banner-title\">{title}</h1>\r\n        <span className=\"banner-title-include-string\">ì í´ë¹íë ê¸</span>\r\n      </h1>)\r\n  }\r\n}\r\n\r\n/** meta data portion of header component\r\n *  (renders differently depending on type of post)\r\n */\r\nconst MetaData = ({metaDataType, metaData}) => {\r\n\r\n  if (metaDataType === 'blog-post') {\r\n    return <BlogPostMetaData metaData={metaData} />\r\n  } \r\n  else if (metaDataType === 'post-list') {\r\n    return <PostListMetaData metaData={metaData} />\r\n  }\r\n  else {\r\n    return <DefaultMetaData />\r\n  }\r\n}\r\n\r\n// no meta data in default\r\nconst DefaultMetaData = () => (\r\n  <div className=\"header-meta-data\"></div>\r\n)\r\n\r\n/** for blog posts,\r\n *  meta data: date + tags\r\n */\r\nconst BlogPostMetaData = ({metaData}) => (\r\n  <div className=\"header-meta-data\">\r\n    <span>\r\n      <FontAwesomeIcon className=\"meta-data-icon\" icon=\"calendar-alt\" />\r\n      <span>{metaData.date}</span>\r\n    </span>\r\n    <span>\r\n      <FontAwesomeIcon className=\"meta-data-icon\" icon=\"tags\" /> \r\n      {metaData.tags.map(tag => {\r\n\r\n        var _ = require('lodash');\r\n        const tagPath = 'tags/' + _.kebabCase(tag);\r\n        return (\r\n          <Link to={tagPath} className=\"tag\">\r\n            <span>{tag}</span>\r\n            <span>&#183;</span>\r\n          </Link>\r\n        )\r\n      })}\r\n    </span>\r\n  </div>\r\n)\r\n\r\n/** for list pages (by tags),\r\n *  meta data: number of blog posts under tag category\r\n */\r\nconst PostListMetaData = ({metaData}) => (\r\n  <div className=\"header-meta-data\">\r\n    <span>\r\n      <FontAwesomeIcon className=\"meta-data-icon\" icon=\"search\" /> \r\n      <span className=\"header-posts-count\">{metaData}</span>\r\n      <span>matching articles</span>\r\n    </span>\r\n  </div>\r\n)\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  title: ``,\r\n}\r\n\r\nlibrary.add(faCalendarAlt, faTags, faSearch);\r\n\r\nexport default Header","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Header from './header'\r\nimport Footer from './footer'\r\nimport './layout.css'\r\n\r\nconst BodyTagDecoratedLayout = ({ title, metaDataType, metaData, children }) => (\r\n    <>\r\n      <Header title={title} metaDataType={metaDataType} metaData={metaData} />\r\n\r\n      <div className=\"body-container\">\r\n        <h1 className=\"tag-decoration body-tag-left\">\r\n          <span>&lt;body&gt;</span>  \r\n        </h1>\r\n\r\n        <main className=\"body-middle-part\">\r\n          {children}\r\n        </main>\r\n\r\n        <h1 className=\"tag-decoration body-tag-right\">\r\n          <span>&lt;/body&gt;</span>  \r\n        </h1>\r\n      </div>\r\n\r\n      <Footer />\r\n    </>\r\n  )\r\n  \r\nBodyTagDecoratedLayout.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n}\r\n  \r\n  export default BodyTagDecoratedLayout","import React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst ListPostItem = ( { slug, frontmatter } ) => (\r\n    <li className=\"list-item\">\r\n        <Link to={slug}>\r\n          <h2>{frontmatter.title}</h2>\r\n          <small>\r\n            <FontAwesomeIcon icon=\"calendar-alt\" />\r\n            <span className=\"list-item-date\">{frontmatter.date}</span>\r\n          </small>\r\n        </Link>\r\n    </li>\r\n)\r\n\r\nexport default ListPostItem"],"sourceRoot":""}