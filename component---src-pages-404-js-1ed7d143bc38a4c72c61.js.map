{"version":3,"sources":["webpack:///./src/components/seo.js","webpack:///./src/pages/404.js","webpack:///./src/components/layouts/footer.js","webpack:///./src/components/layouts/menu.js","webpack:///./src/components/layouts/header.js","webpack:///./src/components/layouts/layout.js"],"names":["SEO","_ref","description","lang","meta","keywords","title","react_default","a","createElement","gatsby_browser_entry","query","detailsQuery","render","data","metaDescription","site","siteMetadata","Helmet_default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_1025518380","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","NotFoundPage","layout","seo","Footer","react__WEBPACK_IMPORTED_MODULE_3___default","gatsby__WEBPACK_IMPORTED_MODULE_1__","Date","getFullYear","to","className","href","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_5__","icon","_public_static_d_1041092198_json__WEBPACK_IMPORTED_MODULE_0__","library","add","fab","ToggleMenu","showSettings","event","preventDefault","BurgerMenu","React","Component","Header","metaDataType","metaData","layouts_menu","header_HeaderTitle","header_MetaData","HeaderTitle","_ref2","header_TitleSting","TitleSting","_ref3","MetaData","_ref4","header_BlogPostMetaData","header_PostListMetaData","header_DefaultMetaData","DefaultMetaData","BlogPostMetaData","_ref5","react_fontawesome_index_es","date","tags","map","tag","tagPath","require","kebabCase","PostListMetaData","_ref6","faCalendarAlt","faTags","faSearch","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_header__WEBPACK_IMPORTED_MODULE_3__","_footer__WEBPACK_IMPORTED_MODULE_4__","Layout","children","Fragment","node"],"mappings":"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","file":"component---src-pages-404-js-1ed7d143bc38a4c72c61.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  return (\r\n    <StaticQuery\r\n      query={detailsQuery}\r\n      render={data => {\r\n        const metaDescription =\r\n          description || data.site.siteMetadata.description\r\n        return (\r\n          <Helmet\r\n            htmlAttributes={{\r\n              lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\r\n            meta={[\r\n              {\r\n                name: `description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                property: `og:description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:type`,\r\n                content: `website`,\r\n              },\r\n              {\r\n                name: `twitter:card`,\r\n                content: `summary`,\r\n              },\r\n              {\r\n                name: `twitter:creator`,\r\n                content: data.site.siteMetadata.author,\r\n              },\r\n              {\r\n                name: `twitter:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                name: `twitter:description`,\r\n                content: metaDescription,\r\n              },\r\n            ]\r\n              .concat(\r\n                keywords.length > 0\r\n                  ? {\r\n                      name: `keywords`,\r\n                      content: keywords.join(`, `),\r\n                    }\r\n                  : []\r\n              )\r\n              .concat(meta)}\r\n          />\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n\r\nconst detailsQuery = graphql`\r\n  query DefaultSEOQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\r\n\r\nimport Layout from '../components/layouts/layout'\r\nimport SEO from '../components/seo'\r\n\r\nconst NotFoundPage = () => (\r\n  <Layout>\r\n    <SEO title=\"404: Not found\" />\r\n    <h1>NOT FOUND</h1>\r\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\r\n  </Layout>\r\n)\r\n\r\nexport default NotFoundPage\r\n","import { Link } from 'gatsby'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\n\r\nimport './footer.css'\r\n\r\nconst Footer = () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteAuthorQuery {\r\n        site {\r\n          siteMetadata {\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <footer>\r\n        <h1>\r\n          <span>Â© {new Date().getFullYear()}, Built by {` `}</span>\r\n          <Link to=\"/\">\r\n          {data.site.siteMetadata.author}\r\n          </Link>\r\n          <span>{` `}</span>\r\n          <a className=\"footer-github-link\" href=\"https://github.com/JiwoonKim\">\r\n            <FontAwesomeIcon icon={['fab', 'github']} /> \r\n          </a>\r\n        </h1>\r\n      </footer>\r\n    )}\r\n  />\r\n)\r\n\r\nFooter.propTypes = {\r\n  author: PropTypes.string,\r\n}\r\n\r\nFooter.defaultProps = {\r\n  author: ``,\r\n}\r\n\r\nlibrary.add(fab);\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\nimport { slide as Menu } from 'react-burger-menu'\r\nimport './menu.css'\r\n\r\nclass ToggleMenu extends React.Component {\r\n    showSettings(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return <Menu >\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/about\">About</Link>\r\n            <Link to=\"/tags\">Category</Link>\r\n            <Link to=\"/postlist\">All Posts</Link>\r\n          </Menu>\r\n    }\r\n}\r\n\r\nexport default ToggleMenu;","import { Link } from 'gatsby'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport 'lodash.kebabcase'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTags, faSearch, faCalendarAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport ToggleMenu from './menu'\r\nimport './header.css'\r\n\r\n// header component (title + meta data)\r\nconst Header = ({ title, metaDataType, metaData }) => (\r\n  <header>\r\n    <nav>\r\n      <ToggleMenu />\r\n    </nav>\r\n    <div className=\"banner-container\">\r\n      <HeaderTitle title={title} metaDataType={metaDataType}/>\r\n      <MetaData metaDataType={metaDataType} metaData={metaData}/>\r\n    </div>\r\n  </header>\r\n)\r\n\r\n// title portion of header component\r\nconst HeaderTitle = ({title, metaDataType}) => (\r\n  <div className=\"banner-title-container\">\r\n    <h1 className=\"tag-decoration tag-decoration-left\">\r\n      <span>&lt;h1&gt;</span>  \r\n    </h1>\r\n    <TitleSting title={title} metaDataType={metaDataType} />\r\n    <h1 className=\"tag-decoration tag-decoration-right\">\r\n      <span>&lt;/h1&gt;</span>\r\n    </h1>\r\n  </div>\r\n)\r\n\r\nconst TitleSting = ({title, metaDataType}) => {\r\n  if (metaDataType === 'blog-post' || metaDataType === 'all') {\r\n    return (<h1 className=\"banner-title\">{title}</h1>)\r\n  }\r\n  else {\r\n    return (\r\n      <h1>\r\n        <h1 className=\"banner-title\">{title}</h1>\r\n        <span className=\"banner-title-include-string\">ì í´ë¹íë ê¸</span>\r\n      </h1>)\r\n  }\r\n}\r\n\r\n/** meta data portion of header component\r\n *  (renders differently depending on type of post)\r\n */\r\nconst MetaData = ({metaDataType, metaData}) => {\r\n\r\n  if (metaDataType === 'blog-post') {\r\n    return <BlogPostMetaData metaData={metaData} />\r\n  } \r\n  else if (metaDataType === 'post-list') {\r\n    return <PostListMetaData metaData={metaData} />\r\n  }\r\n  else {\r\n    return <DefaultMetaData />\r\n  }\r\n}\r\n\r\n// no meta data in default\r\nconst DefaultMetaData = () => (\r\n  <div className=\"header-meta-data\"></div>\r\n)\r\n\r\n/** for blog posts,\r\n *  meta data: date + tags\r\n */\r\nconst BlogPostMetaData = ({metaData}) => (\r\n  <div className=\"header-meta-data\">\r\n    <span>\r\n      <FontAwesomeIcon className=\"meta-data-icon\" icon=\"calendar-alt\" />\r\n      <span>{metaData.date}</span>\r\n    </span>\r\n    <span>\r\n      <FontAwesomeIcon className=\"meta-data-icon\" icon=\"tags\" /> \r\n      {metaData.tags.map(tag => {\r\n\r\n        var _ = require('lodash');\r\n        const tagPath = 'tags/' + _.kebabCase(tag);\r\n        return (\r\n          <Link to={tagPath} className=\"tag\">\r\n            <span>{tag}</span>\r\n            <span>&#183;</span>\r\n          </Link>\r\n        )\r\n      })}\r\n    </span>\r\n  </div>\r\n)\r\n\r\n/** for list pages (by tags),\r\n *  meta data: number of blog posts under tag category\r\n */\r\nconst PostListMetaData = ({metaData}) => (\r\n  <div className=\"header-meta-data\">\r\n    <span>\r\n      <FontAwesomeIcon className=\"meta-data-icon\" icon=\"search\" /> \r\n      <span className=\"header-posts-count\">{metaData}</span>\r\n      <span>matching articles</span>\r\n    </span>\r\n  </div>\r\n)\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  title: ``,\r\n}\r\n\r\nlibrary.add(faCalendarAlt, faTags, faSearch);\r\n\r\nexport default Header","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport Header from './header'\r\nimport Footer from './footer'\r\nimport './layout.css'\r\n\r\nconst Layout = ({ title, metaDataType, metaData, children }) => (\r\n  <>\r\n    <Header title={title} metaDataType={metaDataType} metaData={metaData} />\r\n    <main>\r\n      {children}\r\n    </main>\r\n    <Footer />\r\n  </>\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}