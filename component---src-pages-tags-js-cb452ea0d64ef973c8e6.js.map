{"version":3,"sources":["webpack:///./src/pages/tags.js","webpack:///./src/components/layouts/menu.js","webpack:///./src/components/layouts/header.js","webpack:///./src/components/layouts/footer.js","webpack:///./src/components/layouts/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","tagQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layouts_layout__WEBPACK_IMPORTED_MODULE_2__","TagsPage","props","data","allMarkdownRemark","group","a","createElement","title","metaDataType","map","tag","to","fieldValue","toLowerCase","totalCount","ToggleMenu","showSettings","event","preventDefault","render","react_default","BurgerMenu","gatsby_browser_entry","React","Component","Header","_ref","metaData","layouts_menu","className","header_HeaderTitle","header_MetaData","HeaderTitle","_ref2","header_TitleSting","TitleSting","_ref3","MetaData","_ref4","header_BlogPostMetaData","header_PostListMetaData","header_DefaultMetaData","DefaultMetaData","BlogPostMetaData","_ref5","react_fontawesome_index_es","icon","date","tags","PostListMetaData","_ref6","propTypes","PropTypes","string","defaultProps","library","add","faCalendarAlt","faTags","faSearch","Footer","query","Date","getFullYear","site","siteMetadata","author","href","_1041092198","fab","Layout","children","Fragment","layouts_header","layouts_footer","node","isRequired"],"mappings":"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","file":"component---src-pages-tags-js-cb452ea0d64ef973c8e6.js","sourcesContent":["import React from 'react'\r\nimport { Link, graphql } from 'gatsby'\r\n\r\nimport Layout from '../components/layouts/layout'\r\n\r\nconst TagsPage = (props) => {\r\n\r\n    const data = props.data.allMarkdownRemark.group;\r\n    return (\r\n        <Layout title=\"모든 태그\" metaDataType='all'>\r\n        <section>\r\n            {data.map(tag => (\r\n              <ul>\r\n                <li>\r\n                  <Link to={`tags/${tag.fieldValue.toLowerCase()}`}>\r\n                    {tag.fieldValue} {`( ${tag.totalCount} )`}\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            ))}\r\n        </section>\r\n        </Layout>\r\n    )\r\n};\r\n\r\nexport const tagQuery = graphql`\r\n  query TagIndexQuery {\r\n    allMarkdownRemark(\r\n      limit: 2000) {\r\n      group(field: frontmatter___tags) {\r\n        fieldValue\r\n        totalCount\r\n      }\r\n    }\r\n  }\r\n\r\n`\r\n\r\nexport default TagsPage","import React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\nimport { slide as Menu } from 'react-burger-menu'\r\nimport './menu.css'\r\n\r\nclass ToggleMenu extends React.Component {\r\n    showSettings(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return <Menu >\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/about\">About</Link>\r\n            <Link to=\"/postlist\">Category</Link>\r\n          </Menu>\r\n    }\r\n}\r\n\r\nexport default ToggleMenu;","import { Link } from 'gatsby'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTags, faSearch, faCalendarAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport ToggleMenu from './menu'\r\nimport './header.css'\r\n\r\n// header component (title + meta data)\r\nconst Header = ({ title, metaDataType, metaData }) => (\r\n  <header>\r\n    <nav>\r\n      <ToggleMenu />\r\n    </nav>\r\n    <div className=\"banner-container\">\r\n      <HeaderTitle title={title} metaDataType={metaDataType}/>\r\n      <MetaData metaDataType={metaDataType} metaData={metaData}/>\r\n    </div>\r\n  </header>\r\n)\r\n\r\n// title portion of header component\r\nconst HeaderTitle = ({title, metaDataType}) => (\r\n  <div className=\"banner-title-container\">\r\n    <h1 className=\"tag-decoration tag-decoration-left\">\r\n      <span>&lt;h1&gt;</span>  \r\n    </h1>\r\n    <TitleSting title={title} metaDataType={metaDataType} />\r\n    <h1 className=\"tag-decoration tag-decoration-right\">\r\n      <span>&lt;/h1&gt;</span>\r\n    </h1>\r\n  </div>\r\n)\r\n\r\nconst TitleSting = ({title, metaDataType}) => {\r\n  if (metaDataType === 'blog-post' || metaDataType === 'all') {\r\n    return (<h1 className=\"banner-title\">{title}</h1>)\r\n  }\r\n  else {\r\n    return (\r\n      <h1 className=\"banner-title\">\r\n        {title}\r\n        <span className=\"banner-title-include-string\">에 해당하는 글</span>\r\n      </h1>)\r\n  }\r\n}\r\n\r\n/** meta data portion of header component\r\n *  (renders differently depending on type of post)\r\n */\r\nconst MetaData = ({metaDataType, metaData}) => {\r\n\r\n  if (metaDataType === 'blog-post') {\r\n    return <BlogPostMetaData metaData={metaData} />\r\n  } \r\n  else if (metaDataType === 'post-list') {\r\n    return <PostListMetaData metaData={metaData} />\r\n  }\r\n  else {\r\n    return <DefaultMetaData />\r\n  }\r\n}\r\n\r\n// no meta data in default\r\nconst DefaultMetaData = () => (\r\n  <div className=\"header-meta-data\"></div>\r\n)\r\n\r\n/** for blog posts,\r\n *  meta data: date + tags\r\n */\r\nconst BlogPostMetaData = ({metaData}) => (\r\n  <div className=\"header-meta-data\">\r\n    <span>\r\n      <FontAwesomeIcon className=\"meta-data-icon\" icon=\"calendar-alt\" />\r\n      <span>{metaData.date}</span>\r\n    </span>\r\n    <span>\r\n      <FontAwesomeIcon className=\"meta-data-icon\" icon=\"tags\" /> \r\n      {metaData.tags.map(tag => (\r\n        <Link to={`tags/${tag.toLowerCase()}`} className=\"tag\">\r\n          <span>{tag}</span>\r\n          <span>&#183;</span>\r\n        </Link>\r\n      ))}\r\n    </span>\r\n  </div>\r\n)\r\n\r\n/** for tag lists,\r\n *  meta data: number of blog posts under tag category\r\n */\r\nconst PostListMetaData = ({metaData}) => (\r\n  <div className=\"header-meta-data\">\r\n    <span>\r\n      <FontAwesomeIcon className=\"meta-data-icon\" icon=\"search\" /> \r\n      <span className=\"header-posts-count\">{metaData}</span>\r\n      <span>matching articles</span>\r\n    </span>\r\n  </div>\r\n)\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  title: ``,\r\n}\r\n\r\nlibrary.add(faCalendarAlt, faTags, faSearch);\r\n\r\nexport default Header","import { Link } from 'gatsby'\r\nimport PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\n\r\nimport './footer.css'\r\n\r\nconst Footer = () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteAuthorQuery {\r\n        site {\r\n          siteMetadata {\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <footer>\r\n        <h1>\r\n          <span>© {new Date().getFullYear()}, Built by {` `}</span>\r\n          <Link to=\"/\">\r\n          {data.site.siteMetadata.author}\r\n          </Link>\r\n          <span>{` `}</span>\r\n          <a className=\"footer-github-link\" href=\"https://github.com/JiwoonKim\">\r\n            <FontAwesomeIcon icon={['fab', 'github']} /> \r\n          </a>\r\n        </h1>\r\n      </footer>\r\n    )}\r\n  />\r\n)\r\n\r\nFooter.propTypes = {\r\n  author: PropTypes.string,\r\n}\r\n\r\nFooter.defaultProps = {\r\n  author: ``,\r\n}\r\n\r\nlibrary.add(fab);\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport Header from './header'\r\nimport Footer from './footer'\r\nimport './layout.css'\r\n\r\nconst Layout = ({ title, metaDataType, metaData, children }) => (\r\n  <>\r\n    <Header title={title} metaDataType={metaDataType} metaData={metaData} />\r\n    <main>\r\n      {children}\r\n    </main>\r\n    <Footer />\r\n  </>\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}