{"componentChunkName":"component---src-components-templates-blog-post-js","path":"/Cheatkeys/cpp/","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<p>C++ 언어로 프로그래밍할 때 필요한 치트키들을 정리.\n개인적인 자주 사용하는 문법을 반영하여 만든 치트키입니다.</p>\n</blockquote>\n<h3>입출력</h3>\n<ul>\n<li>기본적으로 <code>scanf</code>와 <code>printf</code>이 가장 빠르다.</li>\n<li><code>ios_base::sync_with_stdio(false);</code>를 <code>cin</code>과 <code>cout</code> 사용 전에 명시하면 비슷한 빠르기로 실행가능 (하지만 그래도 scanf와 printf가 더 빠름)</li>\n<li>\n<p>입력:</p>\n<ul>\n<li><code>getline(cin, s)</code>를 사용하면 '\\n' 기준으로 한 줄씩 읽을 수 있다 (단, cin 사용 후에 getline을 사용하려면 <code>cin.ignore</code>로 먼저 istream에 있는 '\\n'을 flush해주어야 함) </li>\n</ul>\n</li>\n<li>\n<p>출력:</p>\n<ul>\n<li><code>cout &#x3C;&#x3C; \"\\n\"</code>가 endl 보다 빠르다.</li>\n<li>printf 사용시 c++ string class를 출력할 수 없기 때문에 c-type string으로 변환해주어야 한다.</li>\n</ul>\n</li>\n</ul>\n<h4>테스트 케이스</h4>\n<ul>\n<li>\n<p>모든 테스트 케이스를 입력받은 후에 출력할 필요 없이, 하나 입력받고 하나 출력하는 방식으로 진행해도 된다. (테스트 개수가 주어지지 않을 때 유용)</p>\n<ol>\n<li>\n<p>테스트 케이스의 개수가 주어지는 경우, `while(t--)을 사용할 것</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk9\">int</span><span class=\"mtk1\"> t; cin </span><span class=\"mtk5\">&gt;&gt;</span><span class=\"mtk1\"> t;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">while</span><span class=\"mtk1\"> (t</span><span class=\"mtk5\">--</span><span class=\"mtk1\">) { ... }</span><span class=\"mtk4\"> // t의 개수가 0 (false)일 때까지 진행</span></span></code></pre>\n</li>\n<li>\n<p>테스트 케이스의 개수가 주어지지 않는 경우, 입력을 EOF까지 받으면 된다.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk9\">int</span><span class=\"mtk1\"> a, b;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">while</span><span class=\"mtk1\"> (</span><span class=\"mtk7\">scanf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">&quot;</span><span class=\"mtk5\">%d</span><span class=\"mtk12\"> </span><span class=\"mtk5\">%d\\n</span><span class=\"mtk12\">&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk5\">&amp;</span><span class=\"mtk1\">a, </span><span class=\"mtk5\">&amp;</span><span class=\"mtk1\">b) </span><span class=\"mtk5\">==</span><span class=\"mtk1\"> </span><span class=\"mtk6\">2</span><span class=\"mtk1\">)  { ... }</span><span class=\"mtk4\"> // 입력 개수가 일치할 경우 동안 진행</span></span></code></pre>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk9\">while</span><span class=\"mtk1\"> (cin </span><span class=\"mtk5\">&gt;&gt;</span><span class=\"mtk1\"> a </span><span class=\"mtk5\">&gt;&gt;</span><span class=\"mtk1\"> b)  { ... }</span><span class=\"mtk4\"> // 입력 개수가 주어질 때까지 진행</span></span></code></pre>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk1\">string s;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">while</span><span class=\"mtk1\"> (</span><span class=\"mtk7\">getline</span><span class=\"mtk1\">(cin, s)) { ... }</span><span class=\"mtk4\"> // 마찬가지 with getline</span></span></code></pre>\n</li>\n</ol>\n</li>\n</ul>\n<h4>Input 형태</h4>\n<ul>\n<li>\n<p>Input이 인접한 형태로 주어졌을 때 (ex. 12345), <em>scanf 길이 제한</em> 을 사용하여 입력받기.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk7\">scanf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">&quot;</span><span class=\"mtk5\">%1d</span><span class=\"mtk12\">&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk5\">&amp;</span><span class=\"mtk1\">x);</span><span class=\"mtk4\"> // 12345에서 1자리씩 읽기</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">scanf</span><span class=\"mtk1\">(</span><span class=\"mtk12\">&quot;</span><span class=\"mtk5\">%10s</span><span class=\"mtk12\">&quot;</span><span class=\"mtk1\">, s);</span><span class=\"mtk4\"> // 문자열 길이 10씩 읽기</span></span></code></pre>\n</li>\n<li>\n<p>float나 double 출력시, <code>fixed</code>를 사용하여 원하는 방식대로 출력할 수 있다.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk9\">#include</span><span class=\"mtk1\"> </span><span class=\"mtk12\">&lt;iomanip&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">//값이 너무 클 때, scientific notation이 아닌 숫자 그대로 출력</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">double</span><span class=\"mtk1\"> d </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">365808847</span><span class=\"mtk1\">;</span><span class=\"mtk4\"> // </span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">cout </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> fixed </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> d;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">// 실수의 특정 자리수를 지정하여 출력</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">float</span><span class=\"mtk1\"> f </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">3.1415</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">cout </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> fixed </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk7\">setprecision</span><span class=\"mtk1\">(</span><span class=\"mtk6\">3</span><span class=\"mtk1\">);</span><span class=\"mtk4\"> // 3.14 (셋째자리에서 반올림)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">cout </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk7\">setprecision</span><span class=\"mtk1\">(</span><span class=\"mtk6\">2</span><span class=\"mtk1\">);</span><span class=\"mtk4\"> // 3.14</span></span></code></pre>\n</li>\n</ul>\n<h3>문자열 &#x3C;-> 숫자</h3>\n<ul>\n<li>\n<p>문자열 -> 숫자: <code>stoi()</code>, <code>stol</code>, <code>stof</code>, <code>stod</code>를 이용한다.</p>\n<ul>\n<li>단 문자열의 원소 하나만을 변경하는 경우, <code>.substr(pos, 1)</code>을 이용한다.</li>\n</ul>\n</li>\n<li>숫자 -> 문자열: <code>to_string()</code>를 이용한다.</li>\n</ul>\n<h3>숫자와 수학</h3>\n<h4>올림, 내림, 반올림</h4>\n<ul>\n<li>\n<p><code>&#x3C;cmath></code> 헤더파일 포함시키기</p>\n<pre><code></code></pre>\n</li>\n</ul>\n<pre class=\"andromeda vscode-highlight\" data-language=\"\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\">#### 최소값 &amp; 최대값</span>\n<span class=\"vscode-highlight-line\">- &#96;&lt;limits&gt;&#96; 헤더파일 포함시켜 사용하기.</span>\n<span class=\"vscode-highlight-line\">- 최소값 찾을 때: &#96;numeric_limits&lt;int&gt;::max()&#96;로 먼저 초기화하여 사용하기.</span>\n<span class=\"vscode-highlight-line\">- 최대값 찾을 때: &#96;numeric_limits&lt;int&gt;:: min()&#96;로 먼저 초기화하여 사용하기.</span>\n<span class=\"vscode-highlight-line\">- 벡터 내에서 최소값 또는 최대값 찾을 때: &#96;min_element()&#96; 또는 &#96;max_element()&#96;으로 이터레이터 값 접근하여 사용하기.</span>\n<span class=\"vscode-highlight-line\"></span>\n<span class=\"vscode-highlight-line\">#### random 숫자 생성</span>\n<span class=\"vscode-highlight-line\">- &#96;&lt;cstlib&gt;&#96; 헤더파일 포함시켜 &#96;rand()&#96; 사용하기</span>\n<span class=\"vscode-highlight-line\">- a 부터 b까지의 숫자 range 중 랜덤으로 숫자 생성: &#96;rand() % (range) + a</span>\n<span class=\"vscode-highlight-line\">    - a, b 포함</span>\n<span class=\"vscode-highlight-line\"></span>\n<span class=\"vscode-highlight-line\">### 탐색</span>\n<span class=\"vscode-highlight-line\">- 벡터/배열 내에 존재하는지 여부 판단을 위한 방법 2 가지:</span>\n<span class=\"vscode-highlight-line\">    1. set와 count를 이용하는 방법</span>\n<span class=\"vscode-highlight-line\">    2. sort 후 binary_search를 이용하는 방법</span>\n<span class=\"vscode-highlight-line\"></span>\n<span class=\"vscode-highlight-line\">### 런타임 에러 피하기 프로토콜</span>\n<span class=\"vscode-highlight-line\">- 자료형: 숫자가 너무 커지는 경우, int보다는 long이나 long long이 적절하다 (런타임에러 피하기)</span>\n<span class=\"vscode-highlight-line\">- 벡터 삭제: &#96;erase&#96;를 사용할 경우, iterator 값이 그 다음 값으로 자동으로 증가하니 주의!</span>\n<span class=\"vscode-highlight-line\">    - 만일, 원형으로 이어진다고 가정할 경우, &#96;it++; if (it == v.end()) it = v.begin();&#96; 와 &#96;if (it == v.begin()) it = v.end(); it--&#96;를 사용하면 좋다. 백준 문제 중 풍선 터뜨리기(2346번) 문제 참고하기!</span></code></pre>\n<style class=\"vscode-highlight-styles\">\n  :root {\n  --vscode-highlight-padding-v: 1rem;\n  --vscode-highlight-padding-h: 1.5rem;\n  --vscode-highlight-padding-top: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-right: var(--vscode-highlight-padding-h);\n  --vscode-highlight-padding-bottom: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-left: var(--vscode-highlight-padding-h);\n  --vscode-highlight-border-radius: 8px;\n\n  --vscode-highlight-line-highlighted-background-color: transparent;\n  --vscode-highlight-line-highlighted-border-width: 4px;\n  --vscode-highlight-line-highlighted-border-color: transparent;\n}\n\n.vscode-highlight {\n  overflow: auto;\n  -webkit-overflow-scrolling: touch;\n  padding-top: 1rem;\n  padding-top: var(--vscode-highlight-padding-top);\n  padding-bottom: 1rem;\n  padding-bottom: var(--vscode-highlight-padding-bottom);\n  border-radius: 8px;\n  border-radius: var(--vscode-highlight-border-radius);\n  font-feature-settings: normal;\n}\n\n.vscode-highlight-code {\n  display: inline-block;\n  min-width: 100%;\n}\n\n.vscode-highlight-line {\n  display: inline-block;\n  box-sizing: border-box;\n  width: 100%;\n  padding-left: 1.5rem;\n  padding-left: var(--vscode-highlight-padding-left);\n  padding-right: 1.5rem;\n  padding-right: var(--vscode-highlight-padding-right);\n}\n\n.vscode-highlight-line-highlighted {\n  background-color: var(--vscode-highlight-line-highlighted-background-color);\n  box-shadow: inset var(--vscode-highlight-line-highlighted-border-width) 0 0 0 var(--vscode-highlight-line-highlighted-border-color);\n}\n\n  .andromeda {\nbackground-color: #23262E;\ncolor: #D5CED9;\n}\n\n.andromeda .mtk1 { color: #D5CED9; }\n.andromeda .mtk2 { color: #23262E; }\n.andromeda .mtk3 { color: #00E8C6; }\n.andromeda .mtk4 { color: #5F6167; }\n.andromeda .mtk5 { color: #EE5D43; }\n.andromeda .mtk6 { color: #F39C12; }\n.andromeda .mtk7 { color: #FFE66D; }\n.andromeda .mtk8 { color: #F92672; }\n.andromeda .mtk9 { color: #C74DED; }\n.andromeda .mtk10 { color: #7CB7FF; }\n.andromeda .mtk11 { color: #FF00AA; }\n.andromeda .mtk12 { color: #96E072; }\n.andromeda .mtki { font-style: italic; }\n.andromeda .mtkb { font-weight: bold; }\n.andromeda .mtku { text-decoration: underline; text-underline-position: under; }\n</style>","frontmatter":{"title":"C++ 치트키","date":"2019-01-14","tags":["Cpp","치트키"]}}},"pageContext":{"slug":"/Cheatkeys/cpp/"}}}