{"componentChunkName":"component---src-components-templates-blog-post-js","path":"/Cheatkeys/javascript/","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<p>JavaScript 언어로 프로그래밍할 때 필요한 치트키들을 정리.\n개인적인 자주 사용하는 문법을 반영하여 만든 치트키입니다.</p>\n</blockquote>\n<h3>Variables</h3>\n<ul>\n<li><code>let</code>으로 primitive data type 선언</li>\n<li><code>const</code>으로 object, array, function 선언</li>\n</ul>\n<h3>Arrays</h3>\n<ul>\n<li>use <code>for of</code> to iterate</li>\n<li>use <code>map()</code> for returning values based on initial array (instead of <code>forEach()</code>)</li>\n<li>use <code>filter()</code> and <code>reduce()</code></li>\n</ul>\n<h3>Objects</h3>\n<ul>\n<li>use <code>for in</code> to enumerate</li>\n</ul>\n<h4>Destructuring</h4>\n<h3>Functions</h3>\n<p>avoid side effects, keep functional purity (de)</p>\n<h3>Debugging</h3>\n<ul>\n<li>use <code>debugger</code> keyword in code</li>\n</ul>\n<h3>How JavaScript Works</h3>\n<p>JavaScript is a <strong>single-threaded</strong> language that can be <strong>non-blocking</strong></p>\n<ul>\n<li>\n<p><strong>single-threaded</strong>: one call stack</p>\n<ul>\n<li>(<em>cf. multi-threaded = multiple call stacks but deadlock issues</em>)</li>\n<li>thus, JavaScript is <strong>synchronous programming</strong> (one statement executed at a time)</li>\n</ul>\n</li>\n<li>\n<p><strong>non-blocking</strong>: <strong>asynchronous execution</strong> so that a single very long function does not block other functions (wait)</p>\n<ul>\n<li>use web api -> callback queue </li>\n<li>checked by event loop</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"JavaScript 치트키","date":"2019-04-08","tags":["JavaScript","치트키"]}}},"pageContext":{"slug":"/Cheatkeys/javascript/"}}}