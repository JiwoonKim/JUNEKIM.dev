{"componentChunkName":"component---src-components-templates-blog-post-js","path":"/Front-end/css_/css_3/","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<p>understanding CSS</p>\n<ul>\n<li><a href=\"https://internetingishard.com/\">reference</a></li>\n</ul>\n</blockquote>\n<h3>Layouts</h3>\n<p>the fundamental task of laying out a page is just <strong>moving a bunch of nested boxes around</strong></p>\n<ul>\n<li><strong>box model</strong> (all elements)</li>\n<li><strong>block</strong> vs <strong>inline</strong> elements</li>\n<li><strong>floats</strong> (horizontal layout)</li>\n<li><strong>flexbox</strong> (full control)</li>\n<li><strong>grid</strong></li>\n<li><strong>advanced positioning</strong></li>\n</ul>\n<p>(when given a design mockup to implement, first <strong>draw a bunch of boxes</strong>, <strong>determine how they're supposed to stack, stretch, and shrink</strong> to achieve the desired design\n, and <strong>then code</strong>)</p>\n<h3>Box Model</h3>\n<p>set of rules that determine the dimensions of <strong>every element</strong> (<em>both inline and block</em>) in a web page</p>\n<ul>\n<li>all elements have <em>border, margin, and padding</em></li>\n<li>margin collapses: tip is to <strong>stick to a bottom-only or top-only margin convention</strong></li>\n<li>alignment: <strong>auto-margin</strong> for <em>center alignment</em>, <strong>floats</strong> for <em>left/right alignment</em>, <strong>flexbox</strong> for <em>complete control over alignment</em></li>\n<li>\n<p>it's good practice to <strong>override browser's default</strong> styles</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"css\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">/* good practice for default styles*/</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk8\">*</span><span class=\"mtk1\">{</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    margin: </span><span class=\"mtk6\">0</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    padding: </span><span class=\"mtk6\">0</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    box-sizing: </span><span class=\"mtk5\">border-box</span><span class=\"mtk1\">; </span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">/* sets box sizes to include the border size*/</span></span></code></pre>\n</li>\n</ul>\n<h3>Block &#x26; Inline elements</h3>\n<ul>\n<li>\n<p><code>Block</code>:</p>\n<ul>\n<li><strong>width</strong>: automatically set to <em>width of parent container</em></li>\n<li><strong>height</strong>: <em>based on the content</em> it contains</li>\n<li><strong>align</strong>: <strong>floats</strong> <em>for left/right</em>, <strong>auto-margins</strong> <em>for center</em></li>\n<li>Default가 block display인 태그: <code>&#x3C;div></code>, <code>&#x3C;h{숫자}></code>, <code>&#x3C;p></code>, <code>&#x3C;ul></code>, <code>&#x3C;ol></code>, <code>&#x3C;li></code>, <code>&#x3C;table></code>, <code>&#x3C;hr></code>,<br>\n<code>&#x3C;form></code>, <code>&#x3C;header></code>, <code>&#x3C;footer></code>, <code>&#x3C;main></code>, <code>&#x3C;section></code>, <code>&#x3C;nav></code></li>\n</ul>\n</li>\n<li>\n<p><code>Inline</code>:</p>\n<ul>\n<li><strong>width</strong>: <em>based on the content</em> it contains</li>\n<li>height: <strong>don't affect vertical spacing</strong> (may vertically overlap)</li>\n<li><strong>align</strong>: use <strong>text-align</strong></li>\n<li>Default가 inline display인 태그: <code>&#x3C;a></code>, <code>&#x3C;img></code>, <code>&#x3C;button></code>, <code>&#x3C;input></code>, <code>&#x3C;span></code>, <code>&#x3C;textarea></code>, <code>&#x3C;br></code></li>\n</ul>\n</li>\n<li>\n<p><code>Inline-block</code>:</p>\n<ul>\n<li>like inline but w/o vertically overlapping problem</li>\n</ul>\n</li>\n</ul>\n<h3>Floats</h3>\n<p><code>float</code> gives control over the <strong>horizontal position</strong> of an element </p>\n<h4>Float Element :</h4>\n<ul>\n<li><strong>aligns</strong> the element <code>left</code> or <code>right</code> of their parent element</li>\n<li><strong>stack things horizontally</strong></li>\n<li>if not enough room, it <strong>automatically pops down to next line</strong></li>\n</ul>\n<h4>Surrounding Elements:</h4>\n<ul>\n<li><strong>flow around</strong> float</li>\n<li>\n<p><strong>no contribution to the height</strong> of their container element</p>\n<ul>\n<li>bcuz floated boxes are removed from normal flow of the page</li>\n</ul>\n</li>\n<li>vertical layout might not be as expected</li>\n</ul>\n<h4>incorporate floats into the height of their container</h4>\n<ul>\n<li>\n<p><code>clear</code>: forcing elements to ignore floats</p>\n<ul>\n<li>used for <strong>elements after floats</strong> within the same container </li>\n</ul>\n</li>\n<li>\n<p><code>overflow</code>: make it recognize the height of any floated element it contains</p>\n<ul>\n<li>used for the <strong>container containing floats</strong></li>\n</ul>\n</li>\n</ul>\n<p>그림 추가하기 from link below of (clear and overflow image)</p>\n<ul>\n<li>\n<p><a href=\"https://internetingishard.com/html-and-css/floats/\">example &#x26; detailed explanation</a></p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"css\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">/* use overflow to recognize heights of floats */</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">.middle</span><span class=\"mtk1\"> {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    overflow: </span><span class=\"mtk5\">hidden</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">/* use floats to align horizontally */</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">.sidebar</span><span class=\"mtk1\"> {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    float: </span><span class=\"mtk5\">left</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    width: </span><span class=\"mtk6\">20%</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">.content</span><span class=\"mtk1\"> {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    float: </span><span class=\"mtk5\">left</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    width: </span><span class=\"mtk6\">80%</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">/* use clear to align back vertically*/</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">.footer</span><span class=\"mtk1\"> {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    clear: </span><span class=\"mtk5\">both</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span></code></pre>\n<p>float-based layouts have mostly been <strong>replaced w/ Flexbox in modern websites</strong></p>\n</li>\n</ul>\n<h3>Flexbox</h3>\n<p><strong>flexbox</strong> is an alternative to Floats for defining the layout</p>\n<ul>\n<li>gives <strong>complete control</strong> over <em>alignment, direction, order, and size of the boxes</em></li>\n<li><strong>use flexbox to layout as much as possible</strong>, <strong>reserving floats for</strong> when you need text to flow around a box (like a <strong>magazine</strong>)</li>\n<li><a href=\"https://flexboxfroggy.com/#ko\">개구리 게임으로 연습하기</a></li>\n</ul>\n<h4>Flex Container:</h4>\n<ul>\n<li>set <code>display: flex</code> <strong>to container</strong></li>\n<li>\n<p><strong>align items horizontally</strong>: <code>justify-content</code> property to container</p>\n<ul>\n<li><code>center</code>, <code>flex-start</code>, <code>flex-end</code></li>\n<li><code>space-around</code>, <code>space-between</code></li>\n</ul>\n</li>\n<li>\n<p><strong>align items vertically</strong>:  <code>align-items</code> property to container</p>\n<ul>\n<li><code>center</code>, <code>flex-start</code>, <code>flex-end</code></li>\n<li><code>stretch</code>(create equal-height columns), <code>baseline</code></li>\n</ul>\n</li>\n<li>\n<p><strong>wrap flex items</strong>: <code>flex-wrap</code></p>\n<ul>\n<li>w/o wrap, flex-items 컨테이너 밖으로 튀어나올 수 있음</li>\n</ul>\n</li>\n<li>\n<p><strong>render items direction</strong>: <code>flex-direction</code></p>\n<ul>\n<li>default horizontal: <code>row</code>, <code>row-reverse</code></li>\n<li>vertical: <code>column</code>, <code>column-reverse</code></li>\n<li>beware that the direction changes:</li>\n<li>flex direction alignment 관련 이미지 추가 from <a href=\"https://internetingishard.com/html-and-css/flexbox/\">here</a></li>\n<li>very <strong>useful for responsive design</strong></li>\n</ul>\n</li>\n</ul>\n<pre class=\"andromeda vscode-highlight\" data-language=\"css\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">/* flexbox containing grid centers grid on page */</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">.grid-container</span><span class=\"mtk1\"> {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    display: </span><span class=\"mtk5\">flex</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    justify-content: </span><span class=\"mtk5\">center</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">/* flexbox for grid: centers and wraps items */</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">.grid</span><span class=\"mtk1\"> {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    display: </span><span class=\"mtk5\">flex</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    flex-wrap: </span><span class=\"mtk5\">wrap</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    justify-content: </span><span class=\"mtk5\">center</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span></code></pre>\n<h4>Flex Items:</h4>\n<ul>\n<li>\n<p><strong>set order of an item</strong>: <code>order</code></p>\n<ul>\n<li>default value: <code>0</code></li>\n<li><strong>increase</strong> to move item to the <em>right</em></li>\n<li><strong>decrease</strong> to move item to the <em>left</em></li>\n</ul>\n</li>\n<li>\n<p><strong>change the vertical alignment of an item</strong>: <code>align-self</code></p>\n<ul>\n<li><strong>overrides</strong> the align-item value from its container</li>\n<li><code>center</code>, <code>flex-start</code>, <code>flex-end</code>, <code>stretch</code>, <code>baseline</code></li>\n</ul>\n</li>\n<li>\n<p><strong>flex individual items</strong>: <code>flex: #</code> or <code>flex: initial</code></p>\n<ul>\n<li>gives full control over <strong>how flex items fit into their containers</strong></li>\n<li>justify-content merely distributes space <em>between</em> items</li>\n</ul>\n</li>\n<li>\n<p><strong>dividing flex items in a container</strong>: <code>margin: auto</code></p>\n<ul>\n<li>alternative to an extra &#x3C; div> when aligning a group of items to left/right of a container</li>\n</ul>\n</li>\n</ul>\n<h3>Grid</h3>\n<ul>\n<li></li>\n<li><a href=\"https://cssgridgarden.com/#ko\">그리드 가든 게임으로 연습하기</a></li>\n</ul>\n<h4>Grid Container</h4>\n<ul>\n<li>set <code>display: grid</code> <strong>to container</strong></li>\n<li>\n<p><strong>make columns</strong>: <code>grid-template-columns</code> to container</p>\n<ul>\n<li>units: pixels, percentage, auto</li>\n<li>\n<p>use <code>fr</code> unit to <strong>specify ratio while making it responsive</strong></p>\n<ul>\n<li>ex. <code>grid-template-columns: 1fr 1fr 2fr</code></li>\n<li>ex. <code>grid-template-columns: repeat(auto-fill, minmax(200px, 1fr))</code></li>\n</ul>\n</li>\n<li>\n<p>use <code>repeat()</code> to simplify specification</p>\n<ul>\n<li>ex. <code>grid-template-columns: repeat(3, 1fr)</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>make rows</strong>: <code>grid-template-rows</code> to container</li>\n<li><strong>set gap</strong>: <code>grid gap</code></li>\n<li><strong>align items horizonally</strong>: <code>jusitfy-items</code></li>\n<li><strong>align items vertically</strong>: <code>align-items</code></li>\n<li>\n<p><strong>push items to one side</strong>: <code>grid-column-start</code> &#x26; <code>grid-column-end</code> (<code>grid-column</code>)</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"css\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk7\">.container</span><span class=\"mtk1\"> {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">display: </span><span class=\"mtk5\">grid</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">grid-gap: </span><span class=\"mtk6\">20px</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">grid-template-rows: </span><span class=\"mtk6\">30%</span><span class=\"mtk1\"> </span><span class=\"mtk6\">30%</span><span class=\"mtk1\"> </span><span class=\"mtk5\">auto</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">/* min 200 보다 작으면 그냥 1 item으로 가로채우고</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">1 item보다 크기가 크면 화면 크기 맞추어서 flexbox처럼 다른 item들 나열 */</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">grid-template-columns: </span><span class=\"mtk5\">repeat</span><span class=\"mtk1\">(</span><span class=\"mtk3\">auto-fill</span><span class=\"mtk1\">, </span><span class=\"mtk5\">minmax</span><span class=\"mtk1\">(</span><span class=\"mtk6\">200px</span><span class=\"mtk1\">, </span><span class=\"mtk6\">1fr</span><span class=\"mtk1\">));</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">/* 균일한 grid가 아닌 둘쑥날쑥한 layout 원할 시에 */</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">grid-column-start: </span><span class=\"mtk6\">1</span><span class=\"mtk1\">/</span><span class=\"mtk6\">3</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">grid-column: span </span><span class=\"mtk6\">2</span><span class=\"mtk1\">; </span><span class=\"mtk4\">/* 같은 효과 */</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span></code></pre>\n</li>\n</ul>\n<h3>Advanced Positioning</h3>\n<p>to <em>gently tweak element positions</em> or <em>animate a UI component w/o messing up the rest of the page</em></p>\n<ul>\n<li>\n<p><strong>static positioning</strong>: <em>normal flow</em> of page</p>\n<ul>\n<li>box model, floats, and flexbox</li>\n</ul>\n</li>\n<li>\n<p><strong>other positioning schemes</strong>: use <code>position</code> property</p>\n<ul>\n<li><em>relative</em></li>\n<li><em>absolute</em></li>\n<li><em>fixed</em></li>\n</ul>\n</li>\n</ul>\n<h4>Relative positioning</h4>\n<ul>\n<li>\n<p><code>relative</code>: <em>relative to an element's own normal position</em></p>\n<ul>\n<li>useful to <em>nudge boxes</em> around when the default flow is just a little bit off</li>\n<li>also used as an <em>anchor for absolutely positioned elements</em></li>\n</ul>\n</li>\n<li>\n<p>use:</p>\n<ul>\n<li>implement <code>position: relative</code> to element</li>\n<li><strong>define offset</strong>: <code>top</code>, <code>bottom</code>, <code>left</code>, <code>right</code> or use <em>negative values</em></li>\n</ul>\n</li>\n</ul>\n<h4>Absolute positioning</h4>\n<ul>\n<li>\n<p><code>absolute</code>: <em>relative to entire browser window</em></p>\n<ul>\n<li>if <strong>closest container is relatively positioned</strong>, the absolute positioned element is relative to that instead of the browser window</li>\n</ul>\n</li>\n<li>\n<p>use:</p>\n<ul>\n<li>implement <code>position: absolute</code> to element</li>\n<li>no need for defining offsets</li>\n</ul>\n</li>\n</ul>\n<h4>Fixed positioning</h4>\n<ul>\n<li>\n<p><code>fixed</code>: <em>relative to the entire browser window</em> but <strong>doesn't change position even when scrolled</strong></p>\n<ul>\n<li>useful for navigation bars or pop-up banners to always stay on the screen</li>\n</ul>\n</li>\n<li>\n<p>use:</p>\n<ul>\n<li>implement <code>position: fixed</code> to element</li>\n<li><strong>define offset</strong>: <code>top</code>, <code>bottom</code>, <code>left</code>, <code>right</code> or use <em>negative values</em></li>\n</ul>\n</li>\n</ul>\n<h4>Z-index</h4>\n<ul>\n<li><code>z-index</code>: can control the <strong>depth of elements</strong> on the page (<strong>overlapping</strong>)</li>\n<li>must <strong>set a position</strong>(<em>relative, absolute, fixed</em>) <strong>other than static</strong> to acknowledge z-index property</li>\n<li>\n<p>set value for z-index</p>\n<ul>\n<li>default value is 0</li>\n<li><strong>positive</strong> z-index: <em>pops out of the page</em></li>\n<li><strong>negative</strong> z-index: <em>farther back into the page</em></li>\n</ul>\n</li>\n</ul>\n<h4>Positioned elements for Animation</h4>\n<ul>\n<li>animation is one of the primary use cases for relative and absolute positioning</li>\n<li>combine css positioning and javascript</li>\n</ul>\n<style class=\"vscode-highlight-styles\">\n  :root {\n  --vscode-highlight-padding-v: 1rem;\n  --vscode-highlight-padding-h: 1.5rem;\n  --vscode-highlight-padding-top: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-right: var(--vscode-highlight-padding-h);\n  --vscode-highlight-padding-bottom: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-left: var(--vscode-highlight-padding-h);\n  --vscode-highlight-border-radius: 8px;\n\n  --vscode-highlight-line-highlighted-background-color: transparent;\n  --vscode-highlight-line-highlighted-border-width: 4px;\n  --vscode-highlight-line-highlighted-border-color: transparent;\n}\n\n.vscode-highlight {\n  overflow: auto;\n  -webkit-overflow-scrolling: touch;\n  padding-top: 1rem;\n  padding-top: var(--vscode-highlight-padding-top);\n  padding-bottom: 1rem;\n  padding-bottom: var(--vscode-highlight-padding-bottom);\n  border-radius: 8px;\n  border-radius: var(--vscode-highlight-border-radius);\n  font-feature-settings: normal;\n}\n\n.vscode-highlight-code {\n  display: inline-block;\n  min-width: 100%;\n}\n\n.vscode-highlight-line {\n  display: inline-block;\n  box-sizing: border-box;\n  width: 100%;\n  padding-left: 1.5rem;\n  padding-left: var(--vscode-highlight-padding-left);\n  padding-right: 1.5rem;\n  padding-right: var(--vscode-highlight-padding-right);\n}\n\n.vscode-highlight-line-highlighted {\n  background-color: var(--vscode-highlight-line-highlighted-background-color);\n  box-shadow: inset var(--vscode-highlight-line-highlighted-border-width) 0 0 0 var(--vscode-highlight-line-highlighted-border-color);\n}\n\n  .andromeda {\nbackground-color: #23262E;\ncolor: #D5CED9;\n}\n\n.andromeda .mtk1 { color: #D5CED9; }\n.andromeda .mtk2 { color: #23262E; }\n.andromeda .mtk3 { color: #00E8C6; }\n.andromeda .mtk4 { color: #5F6167; }\n.andromeda .mtk5 { color: #EE5D43; }\n.andromeda .mtk6 { color: #F39C12; }\n.andromeda .mtk7 { color: #FFE66D; }\n.andromeda .mtk8 { color: #F92672; }\n.andromeda .mtk9 { color: #C74DED; }\n.andromeda .mtk10 { color: #7CB7FF; }\n.andromeda .mtk11 { color: #FF00AA; }\n.andromeda .mtk12 { color: #96E072; }\n.andromeda .mtki { font-style: italic; }\n.andromeda .mtkb { font-weight: bold; }\n.andromeda .mtku { text-decoration: underline; text-underline-position: under; }\n</style>","frontmatter":{"title":"CSS 03 - 레이아웃 (Layouts)","date":"2019-03-05","tags":["프론트엔드","CSS"]}}},"pageContext":{"slug":"/Front-end/css_/css_3/"}}}