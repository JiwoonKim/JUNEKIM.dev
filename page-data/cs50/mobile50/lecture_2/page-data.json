{"componentChunkName":"component---src-components-templates-blog-post-js","path":"/CS50/mobile50/lecture_2/","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<p>Understanding React, Props, and State</p>\n</blockquote>\n<h3>React</h3>\n<p>javascript library that allows us to <strong>write declarative views</strong> that <strong>react to the changes in data</strong></p>\n<ul>\n<li>\n<p>write what you want and the library will take care of the DOM manipulation</p>\n<ul>\n<li>reconcillation = process by which React syncs changes in app state to the DOM</li>\n<li>reconstructs the virtual DOM and compares with the actual DOM for changes</li>\n</ul>\n</li>\n<li>allows us to abstract problems into smaller components</li>\n</ul>\n<h4>Declarative Programming</h4>\n<p>easier to read and easier to maintain</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"js\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">// example of adding title to slide</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk3\">SLIDE</span><span class=\"mtk1\"> </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    title: </span><span class=\"mtk12\">&#39;React is declarative&#39;</span><span class=\"mtk1\">,</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    bullets: [</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk12\">&#39;Imperative vs. Declarative&#39;</span><span class=\"mtk1\">,</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk12\">&#39;The browser APIs are not fun to work with&#39;</span><span class=\"mtk1\">,</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk12\">&#39;React allows us to write what we want, and takes care of the rest&#39;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    ]</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">// imperative                                       // declarative</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">function</span><span class=\"mtk1\"> </span><span class=\"mtk7\">createSlide</span><span class=\"mtk1\">(</span><span class=\"mtk3\">slide</span><span class=\"mtk1\">) {                    </span><span class=\"mtk5\">|</span><span class=\"mtk1\">  </span><span class=\"mtk9\">function</span><span class=\"mtk1\"> </span><span class=\"mtk7\">createSlide</span><span class=\"mtk1\">(</span><span class=\"mtk3\">slide</span><span class=\"mtk1\">) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk3\">slide</span><span class=\"mtk1\"> </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">document</span><span class=\"mtk1\">.</span><span class=\"mtk7\">createElement</span><span class=\"mtk1\">(</span><span class=\"mtk12\">&#39;div&#39;</span><span class=\"mtk1\">)  </span><span class=\"mtk5\">|</span><span class=\"mtk1\">      </span><span class=\"mtk7\">return</span><span class=\"mtk1\"> (</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk3\">const</span><span class=\"mtk1\"> </span><span class=\"mtk3\">title</span><span class=\"mtk1\"> </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">document</span><span class=\"mtk1\">.</span><span class=\"mtk7\">createElement</span><span class=\"mtk1\">(</span><span class=\"mtk12\">&#39;h1&#39;</span><span class=\"mtk1\">)   </span><span class=\"mtk5\">|</span><span class=\"mtk1\">        </span><span class=\"mtk5\">&lt;</span><span class=\"mtk3\">Slide</span><span class=\"mtk5\">&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk6\">title</span><span class=\"mtk1\">.</span><span class=\"mtk3\">innerHTML</span><span class=\"mtk1\"> </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">SLIDE</span><span class=\"mtk1\">.</span><span class=\"mtk3\">title</span><span class=\"mtk1\">                </span><span class=\"mtk5\">|</span><span class=\"mtk1\">            </span><span class=\"mtk5\">&lt;</span><span class=\"mtk3\">h1</span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\">{SLIDE.</span><span class=\"mtk3\">title</span><span class=\"mtk1\">} </span><span class=\"mtk5\">&lt;/</span><span class=\"mtk3\">h1</span><span class=\"mtk5\">&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk3\">return</span><span class=\"mtk1\"> </span><span class=\"mtk3\">slide</span><span class=\"mtk1\">                                 </span><span class=\"mtk5\">|</span><span class=\"mtk1\">            </span><span class=\"mtk5\">&lt;</span><span class=\"mtk3\">ul</span><span class=\"mtk5\">&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}                                                </span><span class=\"mtk5\">|</span><span class=\"mtk1\">              {SLIDE.bullets.map(</span><span class=\"mtk3\">bullet</span><span class=\"mtk1\"> </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> &lt;</span><span class=\"mtk8\">li</span><span class=\"mtk1\">&gt;{</span><span class=\"mtk3\">bullet</span><span class=\"mtk1\">}&lt;/</span><span class=\"mtk8\">li</span><span class=\"mtk1\">&gt;)}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">                                                 </span><span class=\"mtk5\">|</span><span class=\"mtk1\">            </span><span class=\"mtk5\">&lt;/</span><span class=\"mtk3\">ul</span><span class=\"mtk5\">&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">                                                 </span><span class=\"mtk5\">|</span><span class=\"mtk1\">        </span><span class=\"mtk5\">&lt;/</span><span class=\"mtk3\">Slide</span><span class=\"mtk5\">&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">                                                 </span><span class=\"mtk5\">|</span><span class=\"mtk1\">      )</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">                                                 </span><span class=\"mtk5\">|</span><span class=\"mtk1\">  }</span></span></code></pre>\n<ul>\n<li>imperative language: outlines the specific series of steps to get what you want</li>\n<li>declarative language: just delcares what you want</li>\n</ul>\n<h4>Componentized</h4>\n<p>breaking a complex problem into discrete components</p>\n<ul>\n<li>components are <strong>just functions returning a node for React to render</strong> (ex. &#x3C; div />)</li>\n<li><strong>can reuse</strong> these componenets: great for consistency, iteration speed, easy to customize components</li>\n</ul>\n<h3>Props</h3>\n<p>short for <strong>properties</strong>, objects passed to a component</p>\n<ul>\n<li>changes in these props cause recomputation of the node (a.k.a re-render)</li>\n</ul>\n<h3>State</h3>\n<p>internally-managed configuration for a component</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"jsx\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk9\">class</span><span class=\"mtk1\"> </span><span class=\"mtk7\">App</span><span class=\"mtk1\"> </span><span class=\"mtk9\">extends</span><span class=\"mtk1\"> </span><span class=\"mtk7\">React</span><span class=\"mtk1\">.</span><span class=\"mtk7 mtku\">Component</span><span class=\"mtk1\"> {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk4\">// create state for component</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">constructor</span><span class=\"mtk1\">(</span><span class=\"mtk3\">props</span><span class=\"mtk1\">) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk3\">super</span><span class=\"mtk1\">(</span><span class=\"mtk3\">props</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk11\">this</span><span class=\"mtk1\">.</span><span class=\"mtk3\">state</span><span class=\"mtk1\"> </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">            count: </span><span class=\"mtk6\">0</span><span class=\"mtk1\">,</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk4\">/** update state of component</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">     *  (remember to bind method to component)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">     */</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk7\">increaseCount</span><span class=\"mtk1\">() {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk11\">this</span><span class=\"mtk1\">.</span><span class=\"mtk7\">setState</span><span class=\"mtk1\">(</span><span class=\"mtk3\">prevState</span><span class=\"mtk1\"> </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> {count: </span><span class=\"mtk3\">prevState</span><span class=\"mtk1\"> </span><span class=\"mtk5\">+</span><span class=\"mtk1\"> </span><span class=\"mtk6\">1</span><span class=\"mtk1\">})</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk4\">// render the component</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk7\">render</span><span class=\"mtk1\">() {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> (</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">            &lt;</span><span class=\"mtk8\">div</span><span class=\"mtk1\">&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">                &lt;</span><span class=\"mtk8\">h1</span><span class=\"mtk1\">&gt;{</span><span class=\"mtk11\">this</span><span class=\"mtk1\">.</span><span class=\"mtk6\">props</span><span class=\"mtk1\">.</span><span class=\"mtk3\">count</span><span class=\"mtk1\">}&lt;/</span><span class=\"mtk8\">h1</span><span class=\"mtk1\">&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">                &lt;</span><span class=\"mtk8\">button</span><span class=\"mtk1\"> </span><span class=\"mtk7\">onClick</span><span class=\"mtk5\">=</span><span class=\"mtk1\">{() </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">this</span><span class=\"mtk1\">.</span><span class=\"mtk7\">increaseCount</span><span class=\"mtk1\">()}&gt;Increase&lt;/</span><span class=\"mtk8\">button</span><span class=\"mtk1\">&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">            &lt;/</span><span class=\"mtk8\">div</span><span class=\"mtk1\">&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        )</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">let</span><span class=\"mtk1\"> </span><span class=\"mtk3\">count</span><span class=\"mtk1\"> </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">0</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">render</span><span class=\"mtk1\">(&lt;</span><span class=\"mtk5\">App</span><span class=\"mtk1\"> </span><span class=\"mtk7\">count</span><span class=\"mtk5\">=</span><span class=\"mtk1\">{</span><span class=\"mtk3\">count</span><span class=\"mtk1\">}/&gt;)</span></span></code></pre>\n<ul>\n<li><code>this.state</code> = class property on the component instance</li>\n<li>\n<p>can only be updated by invoking <code>this.setState()</code> implemented by React.component</p>\n<ul>\n<li>the calls are batched and run aynchronously</li>\n<li>changes in state also cause re-renders</li>\n</ul>\n</li>\n</ul>\n<h3>TODO App Development Process</h3>\n<p>process of development from vanilla javascript to React</p>\n<ul>\n<li>how javascript can be used <strong>declartively</strong> to see how React came into being</li>\n</ul>\n<h4>1. use of declarative functions</h4>\n<p>still vanilla javascript, but more in a declarative way </p>\n<ul>\n<li>focusing on 'how' the component should look</li>\n<li>\n<p>equivalent to creating componenets in React</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"js\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">// declarative way to create todo element</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">function</span><span class=\"mtk1\"> </span><span class=\"mtk7\">createTodo</span><span class=\"mtk1\">(</span><span class=\"mtk3\">text</span><span class=\"mtk1\">) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk3\">li</span><span class=\"mtk1\"> </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">document</span><span class=\"mtk1\">.</span><span class=\"mtk7\">createElement</span><span class=\"mtk1\">(</span><span class=\"mtk12\">&#39;li&#39;</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk6\">li</span><span class=\"mtk1\">.</span><span class=\"mtk3\">innerHTML</span><span class=\"mtk1\"> </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk12\">&#96;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk12\">    &lt;input type=&quot;checkbox&quot;&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk12\">    &lt;label&gt;</span><span class=\"mtk8\">${</span><span class=\"mtk3\">text</span><span class=\"mtk8\">}</span><span class=\"mtk12\">&lt;/label&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk12\">    &lt;button&gt;delete&lt;/button&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk12\">&#96;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">return</span><span class=\"mtk1\"> </span><span class=\"mtk3\">li</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">// factored out createTodo</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">function</span><span class=\"mtk1\"> </span><span class=\"mtk7\">addTodo</span><span class=\"mtk1\">() {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk3\">li</span><span class=\"mtk1\"> </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">createTodo</span><span class=\"mtk1\">(</span><span class=\"mtk6\">document</span><span class=\"mtk1\">.</span><span class=\"mtk7\">querySelector</span><span class=\"mtk1\">(</span><span class=\"mtk12\">&quot;input&quot;</span><span class=\"mtk1\">).</span><span class=\"mtk3\">value</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk6\">list</span><span class=\"mtk1\">.</span><span class=\"mtk7\">appendChild</span><span class=\"mtk1\">(</span><span class=\"mtk3\">li</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span></code></pre>\n</li>\n</ul>\n<h4>2. store declarative data</h4>\n<p>instead of simply adding todos into DOM, store the todos list in memory and use that</p>\n<ul>\n<li>focusing turning todos list into a full-rendered page (by declaring todos data and how to render single todo)</li>\n<li>this makes delete function more easier</li>\n<li>\n<p>equivalent to using states in React</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"js\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">// store todos in memory</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">let</span><span class=\"mtk1\"> </span><span class=\"mtk3\">todos</span><span class=\"mtk1\"> </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> []</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">/** render a single todo</span></span></code></pre>\n</li>\n<li>(turn data into actual html)\n*/\nfunction renderTodo(todo) {...}\n/** render each of the todos in memory</li>\n<li>and append those to the page\n*/\nfunction render() {\nlist.innerHTML = ''\nlet todosInHTML = todos.map(renderTodo)\ntodosInHTML.forEach(todo => list.appendChild(todo))\nreturn false\n}\n/** add todos </li>\n<li>by updating todos list data and rendering\n*/\nfunction addTodo() {\nconst todo = new Todo(document.querySelector('input').value)\ntodos.push(todo)\nreturn render()\n}\n/** delete todos </li>\n<li>\n<p>by updating todos list data and rendering\n*/\nfunction removeTodo() {\nconst todo = this.todoRef\ntodos = todoes.filter(t => t !== todo)\nreturn render()\n}</p>\n<pre><code></code></pre>\n</li>\n</ul>\n<h4>3. use React</h4>\n<p>use React to simplify the previous steps</p>\n<ul>\n<li>define todo component</li>\n<li>\n<p>create app component</p>\n<ul>\n<li>w/ <strong>state</strong> to track todos list</li>\n<li>add/remove todo by <strong>updating state</strong></li>\n<li>render page by declaring components based upon states</li>\n</ul>\n</li>\n<li>\n<p>remove todo efficienty by using id state</p>\n<ul>\n<li><strong>include</strong> ids in todos state</li>\n<li>\n<p>filter out todo w/ id</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"js\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk9\">import</span><span class=\"mtk1\"> </span><span class=\"mtk3\">React</span><span class=\"mtk1\"> </span><span class=\"mtk9\">from</span><span class=\"mtk1\"> </span><span class=\"mtk12\">&#39;react&#39;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">import</span><span class=\"mtk1\"> { </span><span class=\"mtk3\">render</span><span class=\"mtk1\"> } </span><span class=\"mtk9\">from</span><span class=\"mtk1\"> </span><span class=\"mtk12\">&#39;react-dom&#39;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">// define todo component</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">let</span><span class=\"mtk1\"> </span><span class=\"mtk3\">id</span><span class=\"mtk1\"> </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">0</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk7\">Todo</span><span class=\"mtk1\"> </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">props</span><span class=\"mtk1\"> </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> (</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">&lt;</span><span class=\"mtk8\">li</span><span class=\"mtk1\"> &gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">&lt;</span><span class=\"mtk8\">input</span><span class=\"mtk1\"> </span><span class=\"mtk7\">type</span><span class=\"mtk5\">=</span><span class=\"mtk12\">&quot;checkbox&quot;</span><span class=\"mtk1\"> /&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">&lt;</span><span class=\"mtk8\">label</span><span class=\"mtk1\">&gt;{</span><span class=\"mtk6\">props</span><span class=\"mtk1\">.</span><span class=\"mtk3\">todo</span><span class=\"mtk1\">.</span><span class=\"mtk3\">text</span><span class=\"mtk1\">}&lt;/</span><span class=\"mtk8\">label</span><span class=\"mtk1\">&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">&lt;</span><span class=\"mtk8\">button</span><span class=\"mtk1\"> </span><span class=\"mtk7\">onClick</span><span class=\"mtk5\">=</span><span class=\"mtk1\">{</span><span class=\"mtk6\">props</span><span class=\"mtk1\">.</span><span class=\"mtk3\">onDelete</span><span class=\"mtk1\">}&gt;delete&lt;/</span><span class=\"mtk8\">button</span><span class=\"mtk1\">&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">&lt;/</span><span class=\"mtk8\">li</span><span class=\"mtk1\">&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">// define app component</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">class</span><span class=\"mtk1\"> </span><span class=\"mtk7\">App</span><span class=\"mtk1\"> </span><span class=\"mtk9\">extends</span><span class=\"mtk1\"> </span><span class=\"mtk7\">React</span><span class=\"mtk1\">.</span><span class=\"mtk7 mtku\">Component</span><span class=\"mtk1\"> {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">constructor</span><span class=\"mtk1\">() {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk3\">super</span><span class=\"mtk1\">()</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk11\">this</span><span class=\"mtk1\">.</span><span class=\"mtk3\">state</span><span class=\"mtk1\"> </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk3\">input</span><span class=\"mtk1\"> </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk12\">&#39;&#39;</span><span class=\"mtk1\">,</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk3\">todos</span><span class=\"mtk1\"> </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> [],</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">// add todo by updating state</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">addTodo</span><span class=\"mtk1\">() {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk3\">text</span><span class=\"mtk1\"> </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk11\">this</span><span class=\"mtk1\">.</span><span class=\"mtk3\">state</span><span class=\"mtk1\">.</span><span class=\"mtk3\">input</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk11\">this</span><span class=\"mtk1\">.</span><span class=\"mtk7\">setState</span><span class=\"mtk1\">({</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    todos: [</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk5\">...</span><span class=\"mtk11\">this</span><span class=\"mtk1\">.</span><span class=\"mtk3\">state</span><span class=\"mtk1\">.</span><span class=\"mtk3\">todos</span><span class=\"mtk1\">, </span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        {id: </span><span class=\"mtk3\">id</span><span class=\"mtk5\">++</span><span class=\"mtk1\">, text: </span><span class=\"mtk3\">text</span><span class=\"mtk1\">}],</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">})</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">removeTodo</span><span class=\"mtk1\">(</span><span class=\"mtk3\">id</span><span class=\"mtk1\">) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk11\">this</span><span class=\"mtk1\">.</span><span class=\"mtk7\">setState</span><span class=\"mtk1\">({</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    todos: </span><span class=\"mtk11\">this</span><span class=\"mtk1\">.</span><span class=\"mtk3\">state</span><span class=\"mtk1\">.</span><span class=\"mtk3\">todos</span><span class=\"mtk1\">.</span><span class=\"mtk7\">filter</span><span class=\"mtk1\">(</span><span class=\"mtk3\">todo</span><span class=\"mtk1\"> </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk6\">todo</span><span class=\"mtk1\">.</span><span class=\"mtk3\">id</span><span class=\"mtk1\"> </span><span class=\"mtk5\">!==</span><span class=\"mtk1\"> </span><span class=\"mtk3\">id</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">})</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">// render all the todos</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">render</span><span class=\"mtk1\">() {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">return</span><span class=\"mtk1\"> (</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    &lt;</span><span class=\"mtk8\">div</span><span class=\"mtk1\">&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        &lt;</span><span class=\"mtk8\">input</span><span class=\"mtk1\"> </span><span class=\"mtk7\">onChange</span><span class=\"mtk5\">=</span><span class=\"mtk1\">{() </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">this</span><span class=\"mtk1\">.</span><span class=\"mtk7\">updateInput</span><span class=\"mtk1\">()}&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        &lt;</span><span class=\"mtk8\">button</span><span class=\"mtk1\"> </span><span class=\"mtk7\">onClick</span><span class=\"mtk5\">=</span><span class=\"mtk1\">{() </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">this</span><span class=\"mtk1\">.</span><span class=\"mtk7\">addTodo</span><span class=\"mtk1\">()}&gt;add&lt;/</span><span class=\"mtk8\">button</span><span class=\"mtk1\">&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        &lt;</span><span class=\"mtk8\">ul</span><span class=\"mtk1\">&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">            {</span><span class=\"mtk11\">this</span><span class=\"mtk1\">.</span><span class=\"mtk3\">state</span><span class=\"mtk1\">.</span><span class=\"mtk3\">todos</span><span class=\"mtk1\">.</span><span class=\"mtk7\">map</span><span class=\"mtk1\">(</span><span class=\"mtk3\">todo</span><span class=\"mtk1\"> </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> </span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">                &lt;</span><span class=\"mtk5\">Todo</span><span class=\"mtk1\"> </span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">                    </span><span class=\"mtk7\">onDelete</span><span class=\"mtk5\">=</span><span class=\"mtk1\">{() </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk11\">this</span><span class=\"mtk1\">.</span><span class=\"mtk7\">removeTodo</span><span class=\"mtk1\">(</span><span class=\"mtk6\">todo</span><span class=\"mtk1\">.</span><span class=\"mtk3\">id</span><span class=\"mtk1\">)}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">                    </span><span class=\"mtk7\">todo</span><span class=\"mtk5\">=</span><span class=\"mtk1\">{</span><span class=\"mtk3\">todo</span><span class=\"mtk1\">} </span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">                /&gt;)}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        &lt;/</span><span class=\"mtk8\">ul</span><span class=\"mtk1\">&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    &lt;/</span><span class=\"mtk8\">div</span><span class=\"mtk1\">&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span></code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<h3>How to use React (summary)</h3>\n<ol>\n<li>\n<p><strong>define components</strong> declaratively: how they should look or be structured using html tags</p>\n<ul>\n<li>define other <strong>sub-components</strong></li>\n<li>(large component == rendered result, so go to step 4)</li>\n</ul>\n</li>\n<li>\n<p><strong>define states</strong> declaratively: define states which store the data rendering relies on</p>\n<ul>\n<li>states defined in larger component; so that it can trickle-down to sub-components</li>\n</ul>\n</li>\n<li>\n<p><strong>define functions to modify states</strong>: functions defined to make changes to states</p>\n<ul>\n<li>functions should be <strong>attached to components as props</strong></li>\n</ul>\n</li>\n<li><strong>define the rendered result</strong>: let the rendering be taken care of by React while only focusing on declaring what the final result should be</li>\n</ol>\n<style class=\"vscode-highlight-styles\">\n  :root {\n  --vscode-highlight-padding-v: 1rem;\n  --vscode-highlight-padding-h: 1.5rem;\n  --vscode-highlight-padding-top: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-right: var(--vscode-highlight-padding-h);\n  --vscode-highlight-padding-bottom: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-left: var(--vscode-highlight-padding-h);\n  --vscode-highlight-border-radius: 8px;\n\n  --vscode-highlight-line-highlighted-background-color: transparent;\n  --vscode-highlight-line-highlighted-border-width: 4px;\n  --vscode-highlight-line-highlighted-border-color: transparent;\n}\n\n.vscode-highlight {\n  overflow: auto;\n  -webkit-overflow-scrolling: touch;\n  padding-top: 1rem;\n  padding-top: var(--vscode-highlight-padding-top);\n  padding-bottom: 1rem;\n  padding-bottom: var(--vscode-highlight-padding-bottom);\n  border-radius: 8px;\n  border-radius: var(--vscode-highlight-border-radius);\n  font-feature-settings: normal;\n}\n\n.vscode-highlight-code {\n  display: inline-block;\n  min-width: 100%;\n}\n\n.vscode-highlight-line {\n  display: inline-block;\n  box-sizing: border-box;\n  width: 100%;\n  padding-left: 1.5rem;\n  padding-left: var(--vscode-highlight-padding-left);\n  padding-right: 1.5rem;\n  padding-right: var(--vscode-highlight-padding-right);\n}\n\n.vscode-highlight-line-highlighted {\n  background-color: var(--vscode-highlight-line-highlighted-background-color);\n  box-shadow: inset var(--vscode-highlight-line-highlighted-border-width) 0 0 0 var(--vscode-highlight-line-highlighted-border-color);\n}\n\n  .andromeda {\nbackground-color: #23262E;\ncolor: #D5CED9;\n}\n\n.andromeda .mtk1 { color: #D5CED9; }\n.andromeda .mtk2 { color: #23262E; }\n.andromeda .mtk3 { color: #00E8C6; }\n.andromeda .mtk4 { color: #5F6167; }\n.andromeda .mtk5 { color: #EE5D43; }\n.andromeda .mtk6 { color: #F39C12; }\n.andromeda .mtk7 { color: #FFE66D; }\n.andromeda .mtk8 { color: #F92672; }\n.andromeda .mtk9 { color: #C74DED; }\n.andromeda .mtk10 { color: #7CB7FF; }\n.andromeda .mtk11 { color: #FF00AA; }\n.andromeda .mtk12 { color: #96E072; }\n.andromeda .mtki { font-style: italic; }\n.andromeda .mtkb { font-weight: bold; }\n.andromeda .mtku { text-decoration: underline; text-underline-position: under; }\n</style>","frontmatter":{"title":"Mobile50 lecture 2 - React, Props, State","date":"2019-09-03","tags":["CS50","Mobile50","React"]}}},"pageContext":{"slug":"/CS50/mobile50/lecture_2/"}}}