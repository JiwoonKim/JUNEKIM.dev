{"componentChunkName":"component---src-components-templates-blog-post-js","path":"/CS50/web50/lecture_1/","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<p>Harvard's Web Programming with Python and Javascript lecture 1 정리</p>\n</blockquote>\n<h3>HTML</h3>\n<ul>\n<li>laying out the structure of the website: <strong>DOM (Document Object Model)</strong></li>\n<li>links: can direct to different file, to a different webpage, to a different place on the same webpage(specific #id)</li>\n</ul>\n<h4>HTML5 new features (very useful!)</h4>\n<ul>\n<li>new elements: <code>&#x3C;header></code>, <code>&#x3C;nav></code>, <code>&#x3C;section></code>, <code>&#x3C;footer></code>, <code>&#x3C;audio></code>, <code>&#x3C;video></code>, <code>&#x3C;datalist></code> (use w/ &#x3C; input>)</li>\n<li>new attributes: <code>contentedible</code></li>\n<li>but, browsers must support newer features to use (<em>older browsers may not support them</em>)</li>\n</ul>\n<h3>CSS</h3>\n<ul>\n<li><strong>CSS Selectors</strong>: tags, ids, classes 사용가능.</li>\n<li>\n<p>specific ways of selecting:</p>\n<ul>\n<li>\n<p>selecting <strong>descendants</strong> (all): </p>\n<ul>\n<li><code>ul li { color: red; }</code>: selects all descendants according to DOM</li>\n</ul>\n</li>\n<li>\n<p>selecting <strong>immediate children</strong>: </p>\n<ul>\n<li><code>ul > li { color: red; }</code></li>\n</ul>\n</li>\n<li>\n<p>selecting <strong>by attributes</strong>: </p>\n<ul>\n<li><code>input[type=text] { color: red; }</code>: selects input types of text</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>select <strong>pseudo-wise</strong>:</p>\n<ul>\n<li><strong>pseudo class</strong> (to select a <em>certain state</em>): <code>button: hover { color: red; }</code></li>\n<li>\n<p><strong>pseudo element</strong> (to affect <em>certain parts of an HTML element</em>): </p>\n<ul>\n<li><code>p::selection { color: red; }</code>: when highlighted (select and drag), the text color turns red</li>\n<li><code>a::before { content: \"\\21d2 Click here\"; }</code>: prepend => before contents of links</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3>Responsive Design</h3>\n<p>the idea that a website should look good regardless of the platform it is viewed from</p>\n<h4>Ways to make responsive design</h4>\n<ol>\n<li>\n<p><strong>media query</strong>(<code>@media</code>): assigning CSS to a particular HTML element on a particular type of media</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"css\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">/* if printing, render that selector invisible */</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">@media</span><span class=\"mtk1\"> </span><span class=\"mtk5\">print</span><span class=\"mtk1\"> {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk5\">#paragraph</span><span class=\"mtk1\"> { display: </span><span class=\"mtk5\">none</span><span class=\"mtk1\">; }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span></code></pre>\n<pre class=\"andromeda vscode-highlight\" data-language=\"css\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">/* if display device larger than 400px, blue</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">// else smaller, red */</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">@media</span><span class=\"mtk1\"> (min-width: </span><span class=\"mtk6\">400px</span><span class=\"mtk1\">) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk8\">body</span><span class=\"mtk1\"> { background-color: </span><span class=\"mtk5\">blue</span><span class=\"mtk1\">; }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">@media</span><span class=\"mtk1\"> (max-width: </span><span class=\"mtk6\">399px</span><span class=\"mtk1\">) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk8\">body</span><span class=\"mtk1\"> { background-color: </span><span class=\"mtk5\">red</span><span class=\"mtk1\">; }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span></code></pre>\n</li>\n<li>\n<p><strong>view port</strong>: visiable area of the device</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"html\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">&lt;!-- the content matches the device size by setting the zoom level --&gt;</span><span class=\"mtk1\"> </span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">&lt;</span><span class=\"mtk8\">meta</span><span class=\"mtk1\"> </span><span class=\"mtk7\">name</span><span class=\"mtk1\">=</span><span class=\"mtk12\">&quot;viewport&quot;</span><span class=\"mtk1\"> </span><span class=\"mtk7\">content</span><span class=\"mtk1\">=</span><span class=\"mtk12\">&quot;width=device width, initial-scale=1.0&quot;</span><span class=\"mtk1\">&gt;</span></span></code></pre>\n<ul>\n<li>commonly used in combination with media query!</li>\n<li>w/o the viewport tag, the contents simply shrink by device size (text might be too small)</li>\n<li>with the viewport tag, the contents match the device with consideration to user experience</li>\n</ul>\n</li>\n<li>\n<p><strong>flexbox</strong>: allows for the reorganization of content based on the size of the viewport</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"css\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">/* contents will be reorganized so that no contents are lost when screen is shrunk */</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk5\">#box</span><span class=\"mtk1\"> { </span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    display: </span><span class=\"mtk5\">flex</span><span class=\"mtk1\">; </span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    flex-wrap: </span><span class=\"mtk5\">wrap</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span></code></pre>\n<ul>\n<li>화면 크기에 따라 배치를 다르게 하는 방법, not changing the scale</li>\n</ul>\n</li>\n<li>\n<p><strong>grid</strong>:</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"css\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk5\">#grid</span><span class=\"mtk1\"> {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    display: </span><span class=\"mtk5\">grid</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    grid-template-columns: </span><span class=\"mtk6\">200px</span><span class=\"mtk1\"> </span><span class=\"mtk6\">200px</span><span class=\"mtk1\"> </span><span class=\"mtk5\">auto</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span></code></pre>\n</li>\n</ol>\n<p><strong>But</strong>, these get complicated since every instances' style must be set</p>\n<p><strong>So</strong> make use of <strong>CSS Libraries</strong>!</p>\n<h3>Bootstrap</h3>\n<p>CSS library written to help make clean, responsive, and nice-looking website w/o having to remember the gritty details everytime a layout needs to be setup</p>\n<ul>\n<li>Use: include link to Boostrap's CSS stylesheet</li>\n<li>\n<p>it's real power is in its <strong>layout system</strong></p>\n<ul>\n<li>Boostrap uses a column based model (where every row in a website is divided into 12 columns)</li>\n<li>use reference to special classes in Bootstrap: <code>class=\"row\"</code> or <code>class=\"col-#</code></li>\n</ul>\n</li>\n<li>documentation: <a href=\"https://v4-alpha.getbootstrap.com/\">https://v4-alpha.getbootstrap.com/</a></li>\n</ul>\n<h3>Sass</h3>\n<p>an entirely new language built on top of CSS to give more power and flexibility when designing CSS stylesheets and allows generating stylesheets in a programmatic way.</p>\n<ul>\n<li>install: must install Sass to use it ore rely on GitHub to do it for you</li>\n<li>\n<p>compile: <code>sass style.scss style.css</code> (compile sass file to css file)</p>\n<ul>\n<li>automate compile by <code>sass --watch style.scss : style.css</code> (when modified, compiles automatically)</li>\n</ul>\n</li>\n<li>\n<p>syntax:</p>\n<ul>\n<li>\n<p>define variables for styles</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"scss\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk3\">$color</span><span class=\"mtk1\">: </span><span class=\"mtk5\">red</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk8\">p</span><span class=\"mtk1\"> { color: </span><span class=\"mtk3\">$color</span><span class=\"mtk1\">; }</span></span></code></pre>\n</li>\n<li>\n<p>enables nested selectors: more concise way to style elements</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"scss\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk8\">div</span><span class=\"mtk1\"> {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    font-size: </span><span class=\"mtk6\">18px</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk8\">p</span><span class=\"mtk1\"> { </span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        color: </span><span class=\"mtk5\">blue</span><span class=\"mtk1\">; </span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk8\">ul</span><span class=\"mtk1\"> {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        color: </span><span class=\"mtk5\">green</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span></code></pre>\n</li>\n<li>\n<p>enables inheritance: general style + tweaking</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"scss\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk7\">%message</span><span class=\"mtk1\"> {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    font-family: </span><span class=\"mtk5\">sans-serif</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    font-size: </span><span class=\"mtk6\">18px</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk8\">p</span><span class=\"mtk1\"> {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">    </span><span class=\"mtk9\">@extend</span><span class=\"mtk7\"> %message</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    background-color: </span><span class=\"mtk5\">green</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span></code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<style class=\"vscode-highlight-styles\">\n  :root {\n  --vscode-highlight-padding-v: 1rem;\n  --vscode-highlight-padding-h: 1.5rem;\n  --vscode-highlight-padding-top: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-right: var(--vscode-highlight-padding-h);\n  --vscode-highlight-padding-bottom: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-left: var(--vscode-highlight-padding-h);\n  --vscode-highlight-border-radius: 8px;\n\n  --vscode-highlight-line-highlighted-background-color: transparent;\n  --vscode-highlight-line-highlighted-border-width: 4px;\n  --vscode-highlight-line-highlighted-border-color: transparent;\n}\n\n.vscode-highlight {\n  overflow: auto;\n  -webkit-overflow-scrolling: touch;\n  padding-top: 1rem;\n  padding-top: var(--vscode-highlight-padding-top);\n  padding-bottom: 1rem;\n  padding-bottom: var(--vscode-highlight-padding-bottom);\n  border-radius: 8px;\n  border-radius: var(--vscode-highlight-border-radius);\n  font-feature-settings: normal;\n}\n\n.vscode-highlight-code {\n  display: inline-block;\n  min-width: 100%;\n}\n\n.vscode-highlight-line {\n  display: inline-block;\n  box-sizing: border-box;\n  width: 100%;\n  padding-left: 1.5rem;\n  padding-left: var(--vscode-highlight-padding-left);\n  padding-right: 1.5rem;\n  padding-right: var(--vscode-highlight-padding-right);\n}\n\n.vscode-highlight-line-highlighted {\n  background-color: var(--vscode-highlight-line-highlighted-background-color);\n  box-shadow: inset var(--vscode-highlight-line-highlighted-border-width) 0 0 0 var(--vscode-highlight-line-highlighted-border-color);\n}\n\n  .andromeda {\nbackground-color: #23262E;\ncolor: #D5CED9;\n}\n\n.andromeda .mtk1 { color: #D5CED9; }\n.andromeda .mtk2 { color: #23262E; }\n.andromeda .mtk3 { color: #00E8C6; }\n.andromeda .mtk4 { color: #5F6167; }\n.andromeda .mtk5 { color: #EE5D43; }\n.andromeda .mtk6 { color: #F39C12; }\n.andromeda .mtk7 { color: #FFE66D; }\n.andromeda .mtk8 { color: #F92672; }\n.andromeda .mtk9 { color: #C74DED; }\n.andromeda .mtk10 { color: #7CB7FF; }\n.andromeda .mtk11 { color: #FF00AA; }\n.andromeda .mtk12 { color: #96E072; }\n.andromeda .mtki { font-style: italic; }\n.andromeda .mtkb { font-weight: bold; }\n.andromeda .mtku { text-decoration: underline; text-underline-position: under; }\n</style>","frontmatter":{"title":"Web50 lecture 1 - HTML & CSS","date":"2018-07-19","tags":["CS50","Web50","HTML","CSS"]}}},"pageContext":{"slug":"/CS50/web50/lecture_1/"}}}