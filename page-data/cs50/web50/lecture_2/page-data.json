{"componentChunkName":"component---src-components-templates-blog-post-js","path":"/CS50/web50/lecture_2/","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<p>Harvard's Web Programming with Python and Javascript lecture 2 정리</p>\n</blockquote>\n<h3>Python</h3>\n<h4>Basic Syntax</h4>\n<ul>\n<li><strong>indentation is important!</strong></li>\n<li>\n<p>printing</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"python\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\"># print string</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">print</span><span class=\"mtk1\">(</span><span class=\"mtk12\">&quot;Hello, world!&quot;</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\"># print string with variable</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">name </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">input</span><span class=\"mtk1\">()</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">print</span><span class=\"mtk1\">(</span><span class=\"mtk9\">f</span><span class=\"mtk12\">&quot;Hello, </span><span class=\"mtk5\">{</span><span class=\"mtk1\">name</span><span class=\"mtk5\">}</span><span class=\"mtk12\">!)</span></span></code></pre>\n</li>\n<li>\n<p>if-else conditions</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"python\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk9\">if</span><span class=\"mtk1\"> x </span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk6\">0</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk7\">print</span><span class=\"mtk1\">(</span><span class=\"mtk12\">&quot;+&quot;</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">elif</span><span class=\"mtk1\"> x </span><span class=\"mtk5\">&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk6\">0</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk7\">print</span><span class=\"mtk1\">(</span><span class=\"mtk12\">&quot;-&quot;</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">else</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk7\">print</span><span class=\"mtk1\">(</span><span class=\"mtk12\">&quot;0&quot;</span><span class=\"mtk1\">)</span></span></code></pre>\n</li>\n<li>\n<p>for loops</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"python\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\"># iterate for 5 times</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">for</span><span class=\"mtk1\"> i </span><span class=\"mtk5\">in</span><span class=\"mtk1\"> </span><span class=\"mtk7\">range</span><span class=\"mtk1\">(</span><span class=\"mtk6\">5</span><span class=\"mtk1\">):</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk5\">...</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\"># iterate over collection</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">for</span><span class=\"mtk1\"> name </span><span class=\"mtk5\">in</span><span class=\"mtk1\"> names:</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk5\">...</span></span></code></pre>\n</li>\n<li>\n<p>functions</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"python\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk9\">def</span><span class=\"mtk1\"> </span><span class=\"mtk7\">function</span><span class=\"mtk1\">(</span><span class=\"mtk3\">x</span><span class=\"mtk1\">):</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> x </span><span class=\"mtk5\">*</span><span class=\"mtk1\"> x</span></span></code></pre>\n<ul>\n<li>trying to call a function not defined, raises a <strong>NameError</strong> as exception</li>\n</ul>\n</li>\n</ul>\n<h4>Data Types</h4>\n<ul>\n<li>python = <strong>weakly typed language</strong></li>\n<li><code>int</code>, <code>float</code>, <code>str</code>, <code>bool</code>, <code>None</code></li>\n</ul>\n<h4>Data Structures</h4>\n<ul>\n<li>\n<p><strong>Sequences</strong></p>\n<ul>\n<li><strong>String</strong>(sequence of char): <code>name = \"Alice\"</code> (name[0]으로 접근 가능)</li>\n<li><strong>Tuple</strong>: <code>coord = (10.0, 20.0)</code> (coord[0]으로 접근 가능)</li>\n<li><strong>List</strong>: <code>names = [\"Alice\", \"Bob\", \"Charlie\"]</code> (names[2]로 접근 가능)</li>\n<li>if index out of range, <strong>IndexError</strong> is raised as an exception</li>\n</ul>\n</li>\n<li>\n<p><strong>Sets</strong>: unordered colection of unique elements</p>\n<ul>\n<li><strong>cannot be indexed</strong>; 중복 item은 하나로 저장됨</li>\n<li>use: <code>s = set()</code> -> <code>s.add(1)</code></li>\n</ul>\n</li>\n<li>\n<p><strong>Dictionaries</strong>: unordered collection of (keys : values)</p>\n<ul>\n<li>use: <code>ages = { \"Alice\": 22, \"Bob\": 27}</code> -> <code>print(ages[\"Alice\"])</code>, <code>ages[\"Alice\"] += 1</code></li>\n</ul>\n</li>\n</ul>\n<h4>Modules</h4>\n<p><strong>separate <code>.py</code> files of code</strong> (= <strong>library</strong>)</p>\n<ul>\n<li>ex: <code>from functions import square</code></li>\n<li>\n<p>to enable only certain functions to be called instead of entire code in the separated file, <strong>must encapsulate entire code under <code>main</code> and include call to main function</strong></p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"python\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk9\">def</span><span class=\"mtk1\"> </span><span class=\"mtk7\">main</span><span class=\"mtk1\">():</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk5\">...</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">if</span><span class=\"mtk1\"> </span><span class=\"mtk3\">__name__</span><span class=\"mtk1\"> </span><span class=\"mtk5\">==</span><span class=\"mtk1\"> </span><span class=\"mtk12\">&quot;__main__&quot;</span><span class=\"mtk1\">:</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk7\">main</span><span class=\"mtk1\">()    </span></span></code></pre>\n</li>\n</ul>\n<h4>Classes</h4>\n<p>a way to <strong>define a new custom python datatype</strong></p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"python\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\"># define class</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">class</span><span class=\"mtk1\"> Point</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">def</span><span class=\"mtk1\"> </span><span class=\"mtk5\">__init__</span><span class=\"mtk1\">(</span><span class=\"mtk3\">self</span><span class=\"mtk1\">, </span><span class=\"mtk3\">x</span><span class=\"mtk1\">, </span><span class=\"mtk3\">y</span><span class=\"mtk1\">):</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk11\">self</span><span class=\"mtk1\">.x </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> x</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk11\">self</span><span class=\"mtk1\">.y </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> y</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\"># initialize instance of class</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">p </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">Point</span><span class=\"mtk1\">(</span><span class=\"mtk6\">3</span><span class=\"mtk1\">, </span><span class=\"mtk6\">5</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">point</span><span class=\"mtk1\">(p.x)</span></span></code></pre>\n<h3>HTTP</h3>\n<p><strong>protocol for receiving requests and sending responses</strong></p>\n<ul>\n<li>system the internet uses to interact and communicate btw computers and servers</li>\n<li>having written a website, the next step is to write the code that takes care of the <strong>server-side processing</strong> (receiving and interpreting requests and generating responses for the user)</li>\n</ul>\n<h3>Flask</h3>\n<p><strong>python code for a back-end server</strong>, listening for requests and returning somekind of response</p>\n<ul>\n<li><strong>micro-framework</strong> written in python that makes it easier to get a simple web application up and running</li>\n<li>useful in that helps developers focus on the requests from and responses to users</li>\n<li><strong>designed in routes</strong> (in part of the URL) which determine which page is being requested</li>\n<li>\n<p>use: </p>\n<ul>\n<li><code>export FLASK_APP = {app_name}.py</code>: enable flask to know that file is the web server program</li>\n<li><code>flask run</code>: run the web server program</li>\n</ul>\n</li>\n</ul>\n<h4>Flask App</h4>\n<ul>\n<li>\n<p>a simple app</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"python\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\"># use flask as micro-framework</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">from</span><span class=\"mtk1\"> flask </span><span class=\"mtk9\">import</span><span class=\"mtk1\"> Flask</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">app </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">Flask</span><span class=\"mtk1\">(</span><span class=\"mtk3\">__name__</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\"># define function for route</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">@app.route</span><span class=\"mtk1\">(</span><span class=\"mtk12\">&quot;/&quot;</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">def</span><span class=\"mtk1\"> </span><span class=\"mtk7\">index</span><span class=\"mtk1\">():</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> </span><span class=\"mtk12\">&quot;hello, world!&quot;</span></span></code></pre>\n</li>\n<li>\n<p><strong>use data from url (get request)</strong></p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"python\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\"># when any string is entered in route, </span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\"># it will be stored as name and used in the function</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">@app.route</span><span class=\"mtk1\">(</span><span class=\"mtk12\">&quot;/&lt;string: name&gt;&quot;</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">def</span><span class=\"mtk1\"> </span><span class=\"mtk7\">hello</span><span class=\"mtk1\">(</span><span class=\"mtk3\">name</span><span class=\"mtk1\">):</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk4\"># return inline html tags</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> </span><span class=\"mtk9\">f</span><span class=\"mtk12\">&quot;&lt;h1&gt;hello, </span><span class=\"mtk5\">{</span><span class=\"mtk1\">name</span><span class=\"mtk5\">}</span><span class=\"mtk12\">!&lt;/h1&gt;&quot;</span></span></code></pre>\n</li>\n</ul>\n<h4>Rendering Templates</h4>\n<p><strong>return html templates</strong>, maybe plugged with data (instead of using inline html tags)</p>\n<ul>\n<li>\n<p>use: <code>from flask import render_template</code></p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"python\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk9\">from</span><span class=\"mtk1\"> flask </span><span class=\"mtk9\">import</span><span class=\"mtk1\"> Flask, render_template</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">app </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">Flask</span><span class=\"mtk1\">(</span><span class=\"mtk3\">__name__</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\"># return index.html</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">@app.route</span><span class=\"mtk1\">(</span><span class=\"mtk12\">&quot;/&quot;</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">def</span><span class=\"mtk1\"> </span><span class=\"mtk7\">index</span><span class=\"mtk1\">():</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">render_template</span><span class=\"mtk1\">(</span><span class=\"mtk12\">&quot;index.html&quot;</span><span class=\"mtk1\">)</span></span></code></pre>\n</li>\n<li><strong>template file should be stored in directory</strong> <code>templates</code></li>\n<li>\n<p>can also <strong>pass arguments</strong> to render_template: plug in data into templates</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"python\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk5\">...</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">headline </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk12\">&quot;hello, world!&quot;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">render_template</span><span class=\"mtk1\">(</span><span class=\"mtk12\">&quot;index.html&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk3\">headline</span><span class=\"mtk5\">=</span><span class=\"mtk1\">headline)</span></span></code></pre>\n</li>\n</ul>\n<h4>Jinja2</h4>\n<p>templating language for flask's render_template</p>\n<ul>\n<li>template is rendered by Jinja2 language</li>\n<li>\n<p>use: <code>{{ }}</code></p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"html\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">&lt;!-- index.html --&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">&lt;</span><span class=\"mtk8\">h1</span><span class=\"mtk1\">&gt; {{ headline }} &lt;/</span><span class=\"mtk8\">h1</span><span class=\"mtk1\">&gt;</span></span></code></pre>\n</li>\n<li>\n<p>conditions: <code>{% if %}</code>, <code>{% else %}</code>, <code>{% endif %}</code></p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"html\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk1\">{% if  new_year %}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    &lt;</span><span class=\"mtk8\">h1</span><span class=\"mtk1\">&gt; Happy New Year! &lt;/</span><span class=\"mtk8\">h1</span><span class=\"mtk1\">&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">{% else %}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    &lt;</span><span class=\"mtk8\">h1</span><span class=\"mtk1\">&gt; Not Yet :( &lt;/</span><span class=\"mtk8\">h1</span><span class=\"mtk1\">&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">{% endif %}</span></span></code></pre>\n</li>\n<li>\n<p>loops: <code>{% for %}</code>, <code>{% endfor %}</code></p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"html\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk1\">{% for name in names %}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    &lt;</span><span class=\"mtk8\">li</span><span class=\"mtk1\">&gt; {{ name }} &lt;/</span><span class=\"mtk8\">li</span><span class=\"mtk1\">&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">{% endfor %}</span></span></code></pre>\n</li>\n<li><strong>template inheritance</strong>: <strong>factor out commonalities into layout templates</strong> using <code>blocks</code></li>\n<li>\n<p><strong>link</strong> different parts of your web app: use <code>{{ url_for( 'route_name' ) }}</code></p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"html\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk1\">&lt;</span><span class=\"mtk8\">a</span><span class=\"mtk1\"> </span><span class=\"mtk7\">href</span><span class=\"mtk1\">=</span><span class=\"mtk12\">&quot;{{ url_for( &#39;route_name&#39; ) }}&quot;</span><span class=\"mtk1\">&gt;link&lt;/</span><span class=\"mtk8\">a</span><span class=\"mtk1\">&gt;</span></span></code></pre>\n</li>\n</ul>\n<h4>Forms</h4>\n<ul>\n<li>\n<p><strong>forms</strong> w/ backend to store data</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"html\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">&lt;!-- hello.html --&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">&lt;</span><span class=\"mtk8\">form</span><span class=\"mtk1\"> </span><span class=\"mtk7\">action</span><span class=\"mtk1\">=</span><span class=\"mtk12\">&quot;/&quot;</span><span class=\"mtk1\"> </span><span class=\"mtk7\">method</span><span class=\"mtk1\">=</span><span class=\"mtk12\">&quot;post&quot;</span><span class=\"mtk1\">&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    &lt;</span><span class=\"mtk8\">input</span><span class=\"mtk1\"> </span><span class=\"mtk7\">type</span><span class=\"mtk1\">=</span><span class=\"mtk12\">&quot;text&quot;</span><span class=\"mtk1\"> </span><span class=\"mtk7\">name</span><span class=\"mtk1\">=</span><span class=\"mtk12\">&quot;name&quot;</span><span class=\"mtk1\">&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    &lt;</span><span class=\"mtk8\">button</span><span class=\"mtk1\">&gt;submit&lt;/</span><span class=\"mtk8\">button</span><span class=\"mtk1\">&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">&lt;/</span><span class=\"mtk8\">form</span><span class=\"mtk1\">&gt;</span></span></code></pre>\n<pre class=\"andromeda vscode-highlight\" data-language=\"python\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\"># backend web server</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">from</span><span class=\"mtk1\"> flask </span><span class=\"mtk9\">import</span><span class=\"mtk1\"> Flask, render_template, request</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">@app.route</span><span class=\"mtk1\">(</span><span class=\"mtk12\">&quot;/&quot;</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">def</span><span class=\"mtk1\"> </span><span class=\"mtk7\">hello</span><span class=\"mtk1\">():</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    name </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> request.form.</span><span class=\"mtk7\">get</span><span class=\"mtk1\">(</span><span class=\"mtk12\">&quot;name&quot;</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">render_template</span><span class=\"mtk1\">(</span><span class=\"mtk12\">&quot;hello.html&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk3\">name</span><span class=\"mtk5\">=</span><span class=\"mtk1\">name)</span></span></code></pre>\n</li>\n</ul>\n<h4>Storing data in Web servers</h4>\n<ul>\n<li><strong>global variables</strong> in python: stores data as long as server is alive, but restarts when server is down (volatile)</li>\n<li>\n<p><strong>sessions</strong> (a.k.a cookies): stores data that pertains to a particular user, regardless of whether server is up or down (involatile)</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"python\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk9\">from</span><span class=\"mtk1\"> flask </span><span class=\"mtk9\">import</span><span class=\"mtk1\"> Flask, render_template, request, session</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">from</span><span class=\"mtk1\"> flask_session </span><span class=\"mtk9\">import</span><span class=\"mtk1\"> Session</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">app </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">Flask</span><span class=\"mtk1\">(</span><span class=\"mtk3\">__name__</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\"># configure sessions</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">app.config[</span><span class=\"mtk12\">&quot;SESSION_PERMANENT&quot;</span><span class=\"mtk1\">] </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk5\">False</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">app.config[</span><span class=\"mtk12\">&quot;SESSION_TYPE&quot;</span><span class=\"mtk1\">] </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk12\">&quot;filesystem&quot;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">Session</span><span class=\"mtk1\">(app)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\"># set route</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">@app.route</span><span class=\"mtk1\">(</span><span class=\"mtk12\">&quot;/&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk3\">methods</span><span class=\"mtk5\">=</span><span class=\"mtk1\">[</span><span class=\"mtk12\">&quot;GET, POST&quot;</span><span class=\"mtk1\">])</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">def</span><span class=\"mtk1\"> </span><span class=\"mtk7\">index</span><span class=\"mtk1\">():</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk4\"># if notes doesn&#39;t exist in sessions, initialize notes</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">if</span><span class=\"mtk1\"> session.</span><span class=\"mtk7\">get</span><span class=\"mtk1\">(</span><span class=\"mtk12\">&quot;notes&quot;</span><span class=\"mtk1\">) </span><span class=\"mtk5\">is</span><span class=\"mtk1\"> </span><span class=\"mtk5\">None</span><span class=\"mtk1\">:</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        session[</span><span class=\"mtk12\">&quot;notes&quot;</span><span class=\"mtk1\">] </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> []</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk4\"># if post request, store note data into sessions from form</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">if</span><span class=\"mtk1\"> request.method </span><span class=\"mtk5\">==</span><span class=\"mtk1\"> </span><span class=\"mtk12\">&quot;POST&quot;</span><span class=\"mtk1\">:</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        note </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> request.form.</span><span class=\"mtk7\">get</span><span class=\"mtk1\">(</span><span class=\"mtk12\">&quot;note&quot;</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        session[</span><span class=\"mtk12\">&quot;notes&quot;</span><span class=\"mtk1\">].</span><span class=\"mtk7\">append</span><span class=\"mtk1\">(note)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk4\"># return template using notes data from sessions</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk4\"># if get request, automatically fetch notes data</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk4\"># if post request, update notes data and fetch that notes data</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">render_template</span><span class=\"mtk1\">(</span><span class=\"mtk12\">&quot;index.html&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk3\">notes</span><span class=\"mtk5\">=</span><span class=\"mtk1\">session[</span><span class=\"mtk12\">&quot;notes&quot;</span><span class=\"mtk1\">])</span></span></code></pre>\n</li>\n<li>databases: for more complicated data (involatile)</li>\n</ul>\n<style class=\"vscode-highlight-styles\">\n  :root {\n  --vscode-highlight-padding-v: 1rem;\n  --vscode-highlight-padding-h: 1.5rem;\n  --vscode-highlight-padding-top: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-right: var(--vscode-highlight-padding-h);\n  --vscode-highlight-padding-bottom: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-left: var(--vscode-highlight-padding-h);\n  --vscode-highlight-border-radius: 8px;\n\n  --vscode-highlight-line-highlighted-background-color: transparent;\n  --vscode-highlight-line-highlighted-border-width: 4px;\n  --vscode-highlight-line-highlighted-border-color: transparent;\n}\n\n.vscode-highlight {\n  overflow: auto;\n  -webkit-overflow-scrolling: touch;\n  padding-top: 1rem;\n  padding-top: var(--vscode-highlight-padding-top);\n  padding-bottom: 1rem;\n  padding-bottom: var(--vscode-highlight-padding-bottom);\n  border-radius: 8px;\n  border-radius: var(--vscode-highlight-border-radius);\n  font-feature-settings: normal;\n}\n\n.vscode-highlight-code {\n  display: inline-block;\n  min-width: 100%;\n}\n\n.vscode-highlight-line {\n  display: inline-block;\n  box-sizing: border-box;\n  width: 100%;\n  padding-left: 1.5rem;\n  padding-left: var(--vscode-highlight-padding-left);\n  padding-right: 1.5rem;\n  padding-right: var(--vscode-highlight-padding-right);\n}\n\n.vscode-highlight-line-highlighted {\n  background-color: var(--vscode-highlight-line-highlighted-background-color);\n  box-shadow: inset var(--vscode-highlight-line-highlighted-border-width) 0 0 0 var(--vscode-highlight-line-highlighted-border-color);\n}\n\n  .andromeda {\nbackground-color: #23262E;\ncolor: #D5CED9;\n}\n\n.andromeda .mtk1 { color: #D5CED9; }\n.andromeda .mtk2 { color: #23262E; }\n.andromeda .mtk3 { color: #00E8C6; }\n.andromeda .mtk4 { color: #5F6167; }\n.andromeda .mtk5 { color: #EE5D43; }\n.andromeda .mtk6 { color: #F39C12; }\n.andromeda .mtk7 { color: #FFE66D; }\n.andromeda .mtk8 { color: #F92672; }\n.andromeda .mtk9 { color: #C74DED; }\n.andromeda .mtk10 { color: #7CB7FF; }\n.andromeda .mtk11 { color: #FF00AA; }\n.andromeda .mtk12 { color: #96E072; }\n.andromeda .mtki { font-style: italic; }\n.andromeda .mtkb { font-weight: bold; }\n.andromeda .mtku { text-decoration: underline; text-underline-position: under; }\n</style>","frontmatter":{"title":"Web50 lecture 2 - Python & Flask","date":"2018-07-21","tags":["CS50","Web50","Python","Flask"]}}},"pageContext":{"slug":"/CS50/web50/lecture_2/"}}}