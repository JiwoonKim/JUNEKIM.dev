{"componentChunkName":"component---src-components-templates-blog-post-js","path":"/CS50/web50/lecture_8/","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<p>Harvard's Web Programming with Python and Javascript lecture 8 정리</p>\n</blockquote>\n<h3>Testing</h3>\n<p><strong>making sure code works</strong></p>\n<ul>\n<li>to ensure that changes to a function don't cause other parts of the application to break</li>\n<li>also to ensure that the application can handle various types of inputs</li>\n<li>\n<p>learn:</p>\n<ul>\n<li>how to build out a system for testing</li>\n<li>how to test thing on your own</li>\n<li>tools to facilitate the testing process</li>\n</ul>\n</li>\n</ul>\n<h3>Basic Python Testing</h3>\n<h4>Testing Function</h4>\n<p>write test function code</p>\n<ul>\n<li>testing cases manually is tedious work</li>\n<li>\n<p>instead, <strong>write test function code</strong></p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"python\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\"># import function code to test</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">from</span><span class=\"mtk1\"> prime </span><span class=\"mtk9\">import</span><span class=\"mtk1\"> is_prime</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\"># define testing function</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">def</span><span class=\"mtk1\"> </span><span class=\"mtk7\">test_prime</span><span class=\"mtk1\">(</span><span class=\"mtk3\">n</span><span class=\"mtk1\">, </span><span class=\"mtk3\">expected</span><span class=\"mtk1\">):</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">if</span><span class=\"mtk1\"> </span><span class=\"mtk7\">is_prime</span><span class=\"mtk1\">(n) </span><span class=\"mtk5\">!=</span><span class=\"mtk1\"> expected:</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk7\">print</span><span class=\"mtk1\">(</span><span class=\"mtk9\">f</span><span class=\"mtk12\">&quot;ERROR on is_prime(</span><span class=\"mtk5\">{</span><span class=\"mtk1\">n</span><span class=\"mtk5\">}</span><span class=\"mtk12\">), expected </span><span class=\"mtk5\">{</span><span class=\"mtk1\">expected</span><span class=\"mtk5\">}</span><span class=\"mtk12\">&quot;</span><span class=\"mtk1\">)</span></span></code></pre>\n<ul>\n<li>\n<p><strong>run test cases</strong> either <strong>in main function</strong>:</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"python\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">## same file as above</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\"># run test cases </span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">if</span><span class=\"mtk1\"> </span><span class=\"mtk3\">__name__</span><span class=\"mtk1\"> </span><span class=\"mtk5\">==</span><span class=\"mtk1\"> </span><span class=\"mtk12\">&quot;__main__&quot;</span><span class=\"mtk1\">:</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">test_prime</span><span class=\"mtk1\">(</span><span class=\"mtk5\">-</span><span class=\"mtk6\">1</span><span class=\"mtk1\">, </span><span class=\"mtk5\">False</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">test_prime</span><span class=\"mtk1\">(</span><span class=\"mtk6\">1</span><span class=\"mtk1\">, </span><span class=\"mtk5\">False</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">test_prime</span><span class=\"mtk1\">(</span><span class=\"mtk6\">2</span><span class=\"mtk1\">, </span><span class=\"mtk5\">True</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">test_prime</span><span class=\"mtk1\">(</span><span class=\"mtk6\">8</span><span class=\"mtk1\">, </span><span class=\"mtk5\">False</span><span class=\"mtk1\">)</span></span></code></pre>\n</li>\n<li>\n<p>or <strong>in bash scrip</strong>t: <code>./tests0.sh</code></p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"bash\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk1\">python3 -c </span><span class=\"mtk12\">&quot;from tests0 import test_prime; test_prime(-1, False)&quot;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">python3 -c </span><span class=\"mtk12\">&quot;from tests0 import test_prime; test_prime(1, False)&quot;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">python3 -c </span><span class=\"mtk12\">&quot;from tests0 import test_prime; test_prime(2, True)&quot;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">python3 -c </span><span class=\"mtk12\">&quot;from tests0 import test_prime; test_prime(8, False)&quot;</span></span></code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<h4>Assert</h4>\n<p>python's built-in command</p>\n<ul>\n<li><code>assert {expression}</code>: asserts that the <strong>following expression is true</strong></li>\n<li>\n<p>if not true, <strong>assertion error</strong> is raised</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"python\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\"># assert (function to code == expected result)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">assert</span><span class=\"mtk1\"> </span><span class=\"mtk7\">square</span><span class=\"mtk1\">(</span><span class=\"mtk6\">10</span><span class=\"mtk1\">) </span><span class=\"mtk5\">==</span><span class=\"mtk1\"> </span><span class=\"mtk6\">100</span></span></code></pre>\n</li>\n</ul>\n<h4>Unittest</h4>\n<p>built-in library for testing in python</p>\n<ul>\n<li><strong>define class w/ test cases as methods</strong></li>\n<li>\n<p>use: <code>assertTrue()</code>, <code>assertFalse()</code>, <code>assertEqual()</code>, <code>assertNotEqual</code>, <code>assertIn</code>, <code>assertNotIn</code></p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"python\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\"># import unittest library</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">import</span><span class=\"mtk1\"> unittest</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\"># import function to test</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">from</span><span class=\"mtk1\"> prime </span><span class=\"mtk9\">import</span><span class=\"mtk1\"> is_prime</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\"># define tests</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">class</span><span class=\"mtk1\"> </span><span class=\"mtk7\">Tests</span><span class=\"mtk1\">(</span><span class=\"mtk7 mtku\">unittest</span><span class=\"mtk1\">.</span><span class=\"mtk7 mtku\">Testcase</span><span class=\"mtk1\">):</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">def</span><span class=\"mtk1\"> </span><span class=\"mtk7\">test_1</span><span class=\"mtk1\">(</span><span class=\"mtk3\">self</span><span class=\"mtk1\">):</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk12\">&quot;&quot;&quot;Check that 1 is not prime.&quot;&quot;&quot;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk11\">self</span><span class=\"mtk1\">.</span><span class=\"mtk7\">assertFalse</span><span class=\"mtk1\">(</span><span class=\"mtk7\">is_prime</span><span class=\"mtk1\">(</span><span class=\"mtk6\">1</span><span class=\"mtk1\">))</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">def</span><span class=\"mtk1\"> </span><span class=\"mtk7\">test_2</span><span class=\"mtk1\">(</span><span class=\"mtk3\">self</span><span class=\"mtk1\">):</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk12\">&quot;&quot;&quot;Check that 2 is prime.&quot;&quot;&quot;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk11\">self</span><span class=\"mtk1\">.</span><span class=\"mtk7\">assertTrue</span><span class=\"mtk1\">(</span><span class=\"mtk7\">is_prime</span><span class=\"mtk1\">(</span><span class=\"mtk6\">2</span><span class=\"mtk1\">))</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">def</span><span class=\"mtk1\"> </span><span class=\"mtk7\">test_8</span><span class=\"mtk1\">(</span><span class=\"mtk3\">self</span><span class=\"mtk1\">):</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk12\">&quot;&quot;&quot;Check that 8 is not prime.&quot;&quot;&quot;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk11\">self</span><span class=\"mtk1\">.</span><span class=\"mtk7\">assertFalse</span><span class=\"mtk1\">(</span><span class=\"mtk7\">is_prime</span><span class=\"mtk1\">(</span><span class=\"mtk6\">8</span><span class=\"mtk1\">))</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\"># run tests</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">if</span><span class=\"mtk1\"> </span><span class=\"mtk3\">__name__</span><span class=\"mtk1\"> </span><span class=\"mtk5\">==</span><span class=\"mtk1\"> </span><span class=\"mtk12\">&quot;__main__&quot;</span><span class=\"mtk1\">:</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">  unittest.</span><span class=\"mtk7\">main</span><span class=\"mtk1\">()</span></span></code></pre>\n</li>\n</ul>\n<h3>Testing Django</h3>\n<p>testing for Django app (airline project - flights app)</p>\n<ul>\n<li>Django comes w/ its own testing framework</li>\n</ul>\n<h4>Testing Models (the Backend)</h4>\n<ul>\n<li>\n<p>consider testing example function in <em>flights/models.py</em></p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"python\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">## inside Flight model</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\"># create function to check if flight is valid</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">def</span><span class=\"mtk1\"> </span><span class=\"mtk7\">is_valid_flight</span><span class=\"mtk1\">(</span><span class=\"mtk3\">self</span><span class=\"mtk1\">):</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">self</span><span class=\"mtk1\">.origin </span><span class=\"mtk5\">!=</span><span class=\"mtk1\"> </span><span class=\"mtk11\">self</span><span class=\"mtk1\">.destination) </span><span class=\"mtk5\">and</span><span class=\"mtk1\"> (</span><span class=\"mtk11\">self</span><span class=\"mtk1\">.duration </span><span class=\"mtk5\">&gt;=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">0</span><span class=\"mtk1\">)</span></span></code></pre>\n</li>\n<li>\n<p><code>flights/tests.py</code>: create class of test functions to test cases for the models</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"python\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\"># testcase library (extends unittest library)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">from</span><span class=\"mtk1\"> django.test </span><span class=\"mtk9\">import</span><span class=\"mtk1\"> TestCase</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">from</span><span class=\"mtk1\"> .models </span><span class=\"mtk9\">import</span><span class=\"mtk1\"> Airport, Flight</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\"># create tests</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">class</span><span class=\"mtk1\"> </span><span class=\"mtk7\">ModelsTestCase</span><span class=\"mtk1\">(</span><span class=\"mtk7 mtku\">TestCase</span><span class=\"mtk1\">):</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\"># run setup (before any custom tests run)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">def</span><span class=\"mtk1\"> </span><span class=\"mtk7\">setup</span><span class=\"mtk1\">(</span><span class=\"mtk3\">self</span><span class=\"mtk1\">):</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk4\"># create airports</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    a1 </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> Airport.objects.</span><span class=\"mtk7\">create</span><span class=\"mtk1\">(</span><span class=\"mtk3\">code</span><span class=\"mtk5\">=</span><span class=\"mtk12\">&quot;AAA&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk3\">city</span><span class=\"mtk5\">=</span><span class=\"mtk12\">&quot;City A&quot;</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    a2 </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> Airport.objects.</span><span class=\"mtk7\">create</span><span class=\"mtk1\">(</span><span class=\"mtk3\">code</span><span class=\"mtk5\">=</span><span class=\"mtk12\">&quot;BBB&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk3\">city</span><span class=\"mtk5\">=</span><span class=\"mtk12\">&quot;City B&quot;</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk4\"># create flights</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    Flight.objects.</span><span class=\"mtk7\">create</span><span class=\"mtk1\">(</span><span class=\"mtk3\">origin</span><span class=\"mtk5\">=</span><span class=\"mtk1\">a1, </span><span class=\"mtk3\">destination</span><span class=\"mtk5\">=</span><span class=\"mtk1\">a2, </span><span class=\"mtk3\">duration</span><span class=\"mtk5\">=</span><span class=\"mtk6\">100</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    Flight.objects.</span><span class=\"mtk7\">create</span><span class=\"mtk1\">(</span><span class=\"mtk3\">origin</span><span class=\"mtk5\">=</span><span class=\"mtk1\">a1, </span><span class=\"mtk3\">destination</span><span class=\"mtk5\">=</span><span class=\"mtk1\">a1, </span><span class=\"mtk3\">duration</span><span class=\"mtk5\">=</span><span class=\"mtk6\">200</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    Flight.objects.</span><span class=\"mtk7\">create</span><span class=\"mtk1\">(</span><span class=\"mtk3\">origin</span><span class=\"mtk5\">=</span><span class=\"mtk1\">a1, </span><span class=\"mtk3\">destination</span><span class=\"mtk5\">=</span><span class=\"mtk1\">a2, </span><span class=\"mtk3\">duration</span><span class=\"mtk5\">=-</span><span class=\"mtk6\">100</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\"># test departures keywork (in Flight model)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">def</span><span class=\"mtk1\"> </span><span class=\"mtk7\">test_departures_count</span><span class=\"mtk1\">(</span><span class=\"mtk3\">self</span><span class=\"mtk1\">):</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    a </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> Airport.objects.</span><span class=\"mtk7\">get</span><span class=\"mtk1\">(</span><span class=\"mtk3\">code</span><span class=\"mtk5\">=</span><span class=\"mtk12\">&quot;AAA&quot;</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk11\">self</span><span class=\"mtk1\">.</span><span class=\"mtk7\">assertEqual</span><span class=\"mtk1\">(a.departures.</span><span class=\"mtk7\">count</span><span class=\"mtk1\">(), </span><span class=\"mtk6\">3</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\"># test arrivals keywork (in Flight model)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">def</span><span class=\"mtk1\"> </span><span class=\"mtk7\">test_arrivals_count</span><span class=\"mtk1\">(</span><span class=\"mtk3\">self</span><span class=\"mtk1\">):</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    a </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> Airport.objects.</span><span class=\"mtk7\">get</span><span class=\"mtk1\">(</span><span class=\"mtk3\">code</span><span class=\"mtk5\">=</span><span class=\"mtk12\">&quot;AAA&quot;</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk11\">self</span><span class=\"mtk1\">.</span><span class=\"mtk7\">assertEqual</span><span class=\"mtk1\">(a.arrivals.</span><span class=\"mtk7\">count</span><span class=\"mtk1\">(), </span><span class=\"mtk6\">1</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\"># test is_valid_flight function (in Flight model)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\"># test for valid flight</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">def</span><span class=\"mtk1\"> </span><span class=\"mtk7\">test_valid_flight</span><span class=\"mtk1\">(</span><span class=\"mtk3\">self</span><span class=\"mtk1\">):</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    a1 </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> Airport.objects.</span><span class=\"mtk7\">get</span><span class=\"mtk1\">(</span><span class=\"mtk3\">code</span><span class=\"mtk5\">=</span><span class=\"mtk12\">&quot;AAA&quot;</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    a2 </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> Airport.objects.</span><span class=\"mtk7\">get</span><span class=\"mtk1\">(</span><span class=\"mtk3\">code</span><span class=\"mtk5\">=</span><span class=\"mtk12\">&quot;BBB&quot;</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    f </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> Flight.objects.</span><span class=\"mtk7\">get</span><span class=\"mtk1\">(</span><span class=\"mtk3\">origin</span><span class=\"mtk5\">=</span><span class=\"mtk1\">a1, </span><span class=\"mtk3\">destination</span><span class=\"mtk5\">=</span><span class=\"mtk1\">a2, </span><span class=\"mtk3\">duration</span><span class=\"mtk5\">=</span><span class=\"mtk6\">100</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk11\">self</span><span class=\"mtk1\">.</span><span class=\"mtk7\">assertTrue</span><span class=\"mtk1\">(f.</span><span class=\"mtk7\">is_valid_flight</span><span class=\"mtk1\">())</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\"># test for invalid flight</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">def</span><span class=\"mtk1\"> </span><span class=\"mtk7\">test_invalid_flight</span><span class=\"mtk1\">(</span><span class=\"mtk3\">self</span><span class=\"mtk1\">):</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    a1 </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> Airport.objects.</span><span class=\"mtk7\">get</span><span class=\"mtk1\">(</span><span class=\"mtk3\">code</span><span class=\"mtk5\">=</span><span class=\"mtk12\">&quot;AAA&quot;</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    f </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> Flight.objects.</span><span class=\"mtk7\">get</span><span class=\"mtk1\">(</span><span class=\"mtk3\">origin</span><span class=\"mtk5\">=</span><span class=\"mtk1\">a1, </span><span class=\"mtk3\">destination</span><span class=\"mtk5\">=</span><span class=\"mtk1\">a1)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk11\">self</span><span class=\"mtk1\">.</span><span class=\"mtk7\">assertFalse</span><span class=\"mtk1\">(f.</span><span class=\"mtk7\">is_valid_flight</span><span class=\"mtk1\">())</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\"># test for invalid flight&#39;s duration</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">def</span><span class=\"mtk1\"> test_valid_flight)</span><span class=\"mtk7\">duration</span><span class=\"mtk1\">(</span><span class=\"mtk11\">self</span><span class=\"mtk1\">):</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    a1 </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> Airport.objects.</span><span class=\"mtk7\">get</span><span class=\"mtk1\">(</span><span class=\"mtk3\">code</span><span class=\"mtk5\">=</span><span class=\"mtk12\">&quot;AAA&quot;</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    a2 </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> Airport.objects.</span><span class=\"mtk7\">get</span><span class=\"mtk1\">(</span><span class=\"mtk3\">code</span><span class=\"mtk5\">=</span><span class=\"mtk12\">&quot;BBB&quot;</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    f </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> Flight.objects.</span><span class=\"mtk7\">get</span><span class=\"mtk1\">(</span><span class=\"mtk3\">origin</span><span class=\"mtk5\">=</span><span class=\"mtk1\">a1, </span><span class=\"mtk3\">destination</span><span class=\"mtk5\">=</span><span class=\"mtk1\">a2, </span><span class=\"mtk3\">duration</span><span class=\"mtk5\">=-</span><span class=\"mtk6\">100</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk11\">self</span><span class=\"mtk1\">.</span><span class=\"mtk7\">assertTrue</span><span class=\"mtk1\">(f.</span><span class=\"mtk7\">is_valid_flight</span><span class=\"mtk1\">())</span></span></code></pre>\n</li>\n<li>\n<p><strong>run tests</strong>: <code>python manage.py test</code></p>\n<ul>\n<li><strong>creates test database</strong> (so that the test cases don't actually manipulate the real database); <strong>destroyed after running tests</strong></li>\n</ul>\n</li>\n</ul>\n<h4>Testing Views (the Frontend)</h4>\n<ul>\n<li>\n<p><code>flights/tests.py</code>: create class of test functions to test cases for the views using <code>Client</code> library</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"python\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk9\">from</span><span class=\"mtk1\"> django.db.models </span><span class=\"mtk9\">import</span><span class=\"mtk1\"> Max</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">from</span><span class=\"mtk1\"> django.test </span><span class=\"mtk9\">import</span><span class=\"mtk1\"> Client, TestCase</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">from</span><span class=\"mtk1\"> .models </span><span class=\"mtk9\">import</span><span class=\"mtk1\"> Airport, Flight, Passenger</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk5\">...</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\"># create tests</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">class</span><span class=\"mtk1\"> </span><span class=\"mtk7\">FlightsTestCase</span><span class=\"mtk1\">(</span><span class=\"mtk7 mtku\">TestCase</span><span class=\"mtk1\">):</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\"># ... same setup and model testing as above</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\"># test index view</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">def</span><span class=\"mtk1\"> </span><span class=\"mtk7\">test_index</span><span class=\"mtk1\">(</span><span class=\"mtk3\">self</span><span class=\"mtk1\">):</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    c </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">Client</span><span class=\"mtk1\">()</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    response </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> c.</span><span class=\"mtk7\">get</span><span class=\"mtk1\">(</span><span class=\"mtk12\">&quot;/&quot;</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk11\">self</span><span class=\"mtk1\">.</span><span class=\"mtk7\">assertEqual</span><span class=\"mtk1\">(response.status_code, </span><span class=\"mtk6\">200</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk11\">self</span><span class=\"mtk1\">.</span><span class=\"mtk7\">assertEqual</span><span class=\"mtk1\">(response.context[</span><span class=\"mtk12\">&quot;flights&quot;</span><span class=\"mtk1\">].</span><span class=\"mtk7\">count</span><span class=\"mtk1\">(), </span><span class=\"mtk6\">2</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\"># test for valid view page</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">def</span><span class=\"mtk1\"> </span><span class=\"mtk7\">test_valid_flight_page</span><span class=\"mtk1\">(</span><span class=\"mtk3\">self</span><span class=\"mtk1\">):</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    a1 </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> Airport.objects.</span><span class=\"mtk7\">get</span><span class=\"mtk1\">(</span><span class=\"mtk3\">code</span><span class=\"mtk5\">=</span><span class=\"mtk12\">&quot;AAA&quot;</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    f </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> Flight.objects.</span><span class=\"mtk7\">get</span><span class=\"mtk1\">(</span><span class=\"mtk3\">origin</span><span class=\"mtk5\">=</span><span class=\"mtk1\">a1, </span><span class=\"mtk3\">destination</span><span class=\"mtk5\">=</span><span class=\"mtk1\">a1)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    c </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">Client</span><span class=\"mtk1\">()</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    response </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> c.</span><span class=\"mtk7\">get</span><span class=\"mtk1\">(</span><span class=\"mtk9\">f</span><span class=\"mtk12\">&quot;/</span><span class=\"mtk5\">{</span><span class=\"mtk1\">f.id</span><span class=\"mtk5\">}</span><span class=\"mtk12\">&quot;</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk11\">self</span><span class=\"mtk1\">.</span><span class=\"mtk7\">assertEqual</span><span class=\"mtk1\">(response.status_code, </span><span class=\"mtk6\">200</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\"># test for invalid view page</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">def</span><span class=\"mtk1\"> </span><span class=\"mtk7\">test_invalid_flight_page</span><span class=\"mtk1\">(</span><span class=\"mtk3\">self</span><span class=\"mtk1\">):</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    max_id </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> Flight.objects.</span><span class=\"mtk7\">all</span><span class=\"mtk1\">().</span><span class=\"mtk7\">aggregate</span><span class=\"mtk1\">(</span><span class=\"mtk7\">Max</span><span class=\"mtk1\">(</span><span class=\"mtk12\">&quot;id&quot;</span><span class=\"mtk1\">))[</span><span class=\"mtk12\">&quot;ide__max&quot;</span><span class=\"mtk1\">]</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    c </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">Client</span><span class=\"mtk1\">()</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    response </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> c.</span><span class=\"mtk7\">get</span><span class=\"mtk1\">(</span><span class=\"mtk9\">f</span><span class=\"mtk12\">&quot;/</span><span class=\"mtk5\">{</span><span class=\"mtk1\">max_id </span><span class=\"mtk5\">+</span><span class=\"mtk1\"> </span><span class=\"mtk6\">1</span><span class=\"mtk5\">}</span><span class=\"mtk12\">&quot;</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk11\">self</span><span class=\"mtk1\">.</span><span class=\"mtk7\">assertEqual</span><span class=\"mtk1\">(response.status_code, </span><span class=\"mtk6\">404</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\"># test for passengers in flight page</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">def</span><span class=\"mtk1\"> </span><span class=\"mtk7\">test_flight_page_passenger</span><span class=\"mtk1\">(</span><span class=\"mtk3\">self</span><span class=\"mtk1\">):</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    f </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> Flight.objects.</span><span class=\"mtk7\">get</span><span class=\"mtk1\">(</span><span class=\"mtk3\">pk</span><span class=\"mtk5\">=</span><span class=\"mtk6\">1</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    p </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> Passenger.objects.</span><span class=\"mtk7\">create</span><span class=\"mtk1\">(</span><span class=\"mtk3\">first</span><span class=\"mtk5\">=</span><span class=\"mtk12\">&quot;Alice&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk3\">last</span><span class=\"mtk5\">=</span><span class=\"mtk12\">&quot;Adams&quot;</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    f.passengers.</span><span class=\"mtk7\">add</span><span class=\"mtk1\">(p)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    c </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">Client</span><span class=\"mtk1\">()</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    response </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> c.</span><span class=\"mtk7\">get</span><span class=\"mtk1\">(</span><span class=\"mtk9\">f</span><span class=\"mtk12\">&quot;/</span><span class=\"mtk5\">{</span><span class=\"mtk1\">f.id</span><span class=\"mtk5\">}</span><span class=\"mtk12\">&quot;</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk11\">self</span><span class=\"mtk1\">.</span><span class=\"mtk7\">assertEqual</span><span class=\"mtk1\">(response.status_code, </span><span class=\"mtk6\">200</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk11\">self</span><span class=\"mtk1\">.</span><span class=\"mtk7\">assertEqual</span><span class=\"mtk1\">(response.context[</span><span class=\"mtk12\">&quot;passengers&quot;</span><span class=\"mtk1\">].</span><span class=\"mtk7\">count</span><span class=\"mtk1\">(), </span><span class=\"mtk6\">1</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\"># test for non passengers in flight page</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">def</span><span class=\"mtk1\"> </span><span class=\"mtk7\">test_flight_page_non_passengers</span><span class=\"mtk1\">(</span><span class=\"mtk3\">self</span><span class=\"mtk1\">):</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    f </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> Flight.objects.</span><span class=\"mtk7\">get</span><span class=\"mtk1\">(</span><span class=\"mtk3\">pk</span><span class=\"mtk5\">=</span><span class=\"mtk6\">1</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    p </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> Passenger.objects.</span><span class=\"mtk7\">create</span><span class=\"mtk1\">(</span><span class=\"mtk3\">first</span><span class=\"mtk5\">=</span><span class=\"mtk12\">&quot;Alice&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk3\">last</span><span class=\"mtk5\">=</span><span class=\"mtk12\">&quot;Adams&quot;</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    c </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">Client</span><span class=\"mtk1\">()</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    response </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> c.</span><span class=\"mtk7\">get</span><span class=\"mtk1\">(</span><span class=\"mtk9\">f</span><span class=\"mtk12\">&quot;/</span><span class=\"mtk5\">{</span><span class=\"mtk1\">f.id</span><span class=\"mtk5\">}</span><span class=\"mtk12\">&quot;</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk11\">self</span><span class=\"mtk1\">.</span><span class=\"mtk7\">assertEqual</span><span class=\"mtk1\">(response.status_code, </span><span class=\"mtk6\">200</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk11\">self</span><span class=\"mtk1\">.</span><span class=\"mtk7\">assertEqual</span><span class=\"mtk1\">(response.context[</span><span class=\"mtk12\">&quot;non_passengers&quot;</span><span class=\"mtk1\">].</span><span class=\"mtk7\">count</span><span class=\"mtk1\">(), </span><span class=\"mtk6\">1</span><span class=\"mtk1\">)</span></span></code></pre>\n<ul>\n<li>\n<p><code>Client</code> library: <strong>simulate a web client for testing purposes</strong></p>\n<ul>\n<li>can make requests to and get responses from the web server</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3>Testing Browser Behavior</h3>\n<p>testing browser behavior, including javascript code</p>\n<h4>Selenium</h4>\n<p>a browser testing tool for testing browser behavior</p>\n<ul>\n<li>\n<p>uses <strong>web driver which enables python code to pretend to be a user interacting w/ a webpage</strong></p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"python\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk9\">import</span><span class=\"mtk1\"> os</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">import</span><span class=\"mtk1\"> pathlib</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">import</span><span class=\"mtk1\"> unittest</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">from</span><span class=\"mtk1\"> selenium </span><span class=\"mtk9\">import</span><span class=\"mtk1\"> webdriver</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\"># turn a filename into full path for browser to use</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">def</span><span class=\"mtk1\"> </span><span class=\"mtk7\">file_uri</span><span class=\"mtk1\">(</span><span class=\"mtk3\">filename</span><span class=\"mtk1\">):</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> pathlib.</span><span class=\"mtk7\">Path</span><span class=\"mtk1\">(os.path.</span><span class=\"mtk7\">abspath</span><span class=\"mtk1\">(filename)).</span><span class=\"mtk7\">as_uri</span><span class=\"mtk1\">()</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\"># set web driver to simulate user interaction</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">driver </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> webdriver.</span><span class=\"mtk7\">Chrome</span><span class=\"mtk1\">()</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\"># define tests</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">class</span><span class=\"mtk1\"> </span><span class=\"mtk7\">WebpageTests</span><span class=\"mtk1\">(</span><span class=\"mtk7 mtku\">unittest</span><span class=\"mtk1\">.</span><span class=\"mtk7 mtku\">TestCase</span><span class=\"mtk1\">):</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk4\"># check the title</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">def</span><span class=\"mtk1\"> </span><span class=\"mtk7\">test_title</span><span class=\"mtk1\">(</span><span class=\"mtk3\">self</span><span class=\"mtk1\">):</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        uri </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">file_uri</span><span class=\"mtk1\">(</span><span class=\"mtk12\">&quot;counter.html&quot;</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        driver.</span><span class=\"mtk7\">get</span><span class=\"mtk1\">(uri)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk11\">self</span><span class=\"mtk1\">.</span><span class=\"mtk7\">assertEqual</span><span class=\"mtk1\">(driver.title, </span><span class=\"mtk12\">&quot;Counter&quot;</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk4\"># test increase in counter</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">def</span><span class=\"mtk1\"> </span><span class=\"mtk7\">test_increase</span><span class=\"mtk1\">(</span><span class=\"mtk3\">self</span><span class=\"mtk1\">):</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        driver.</span><span class=\"mtk7\">get</span><span class=\"mtk1\">(</span><span class=\"mtk7\">file_uri</span><span class=\"mtk1\">(</span><span class=\"mtk12\">&quot;counter.html&quot;</span><span class=\"mtk1\">))</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        increase </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> driver.</span><span class=\"mtk7\">find_element_by_id</span><span class=\"mtk1\">(</span><span class=\"mtk12\">&quot;increase&quot;</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        increase.</span><span class=\"mtk7\">click</span><span class=\"mtk1\">()</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk11\">self</span><span class=\"mtk1\">.</span><span class=\"mtk7\">assertEqual</span><span class=\"mtk1\">(driver.</span><span class=\"mtk7\">find_element_by_tag_name</span><span class=\"mtk1\">(</span><span class=\"mtk12\">&quot;h1&quot;</span><span class=\"mtk1\">).text, </span><span class=\"mtk12\">&quot;1&quot;</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk4\"># test decrease in counter</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">def</span><span class=\"mtk1\"> </span><span class=\"mtk7\">test_decrease</span><span class=\"mtk1\">(</span><span class=\"mtk3\">self</span><span class=\"mtk1\">):</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        driver.</span><span class=\"mtk7\">get</span><span class=\"mtk1\">(</span><span class=\"mtk7\">file_uri</span><span class=\"mtk1\">(</span><span class=\"mtk12\">&quot;counter.html&quot;</span><span class=\"mtk1\">))</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        decrease </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> driver.</span><span class=\"mtk7\">find_element_by_id</span><span class=\"mtk1\">(</span><span class=\"mtk12\">&quot;decrease&quot;</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        decrease.</span><span class=\"mtk7\">click</span><span class=\"mtk1\">()</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk11\">self</span><span class=\"mtk1\">.</span><span class=\"mtk7\">assertEqual</span><span class=\"mtk1\">(driver.</span><span class=\"mtk7\">find_element_by_tag_name</span><span class=\"mtk1\">(</span><span class=\"mtk12\">&quot;h1&quot;</span><span class=\"mtk1\">).text, </span><span class=\"mtk12\">&quot;-1&quot;</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk4\"># test multiple increases in counter</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">def</span><span class=\"mtk1\"> </span><span class=\"mtk7\">test_multiple_increase</span><span class=\"mtk1\">(</span><span class=\"mtk3\">self</span><span class=\"mtk1\">):</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        driver.</span><span class=\"mtk7\">get</span><span class=\"mtk1\">(</span><span class=\"mtk7\">file_uri</span><span class=\"mtk1\">(</span><span class=\"mtk12\">&quot;counter.html&quot;</span><span class=\"mtk1\">))</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        increase </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> driver.</span><span class=\"mtk7\">find_element_by_id</span><span class=\"mtk1\">(</span><span class=\"mtk12\">&quot;increase&quot;</span><span class=\"mtk1\">)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk9\">for</span><span class=\"mtk1\"> i </span><span class=\"mtk5\">in</span><span class=\"mtk1\"> </span><span class=\"mtk7\">range</span><span class=\"mtk1\">(</span><span class=\"mtk6\">3</span><span class=\"mtk1\">):</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">            increase.</span><span class=\"mtk7\">click</span><span class=\"mtk1\">()</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk11\">self</span><span class=\"mtk1\">.</span><span class=\"mtk7\">assertEqual</span><span class=\"mtk1\">(driver.</span><span class=\"mtk7\">find_element_by_tag_name</span><span class=\"mtk1\">(</span><span class=\"mtk12\">&quot;h1&quot;</span><span class=\"mtk1\">).text, </span><span class=\"mtk12\">&quot;3&quot;</span><span class=\"mtk1\">)</span></span></code></pre>\n</li>\n</ul>\n<style class=\"vscode-highlight-styles\">\n  :root {\n  --vscode-highlight-padding-v: 1rem;\n  --vscode-highlight-padding-h: 1.5rem;\n  --vscode-highlight-padding-top: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-right: var(--vscode-highlight-padding-h);\n  --vscode-highlight-padding-bottom: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-left: var(--vscode-highlight-padding-h);\n  --vscode-highlight-border-radius: 8px;\n\n  --vscode-highlight-line-highlighted-background-color: transparent;\n  --vscode-highlight-line-highlighted-border-width: 4px;\n  --vscode-highlight-line-highlighted-border-color: transparent;\n}\n\n.vscode-highlight {\n  overflow: auto;\n  -webkit-overflow-scrolling: touch;\n  padding-top: 1rem;\n  padding-top: var(--vscode-highlight-padding-top);\n  padding-bottom: 1rem;\n  padding-bottom: var(--vscode-highlight-padding-bottom);\n  border-radius: 8px;\n  border-radius: var(--vscode-highlight-border-radius);\n  font-feature-settings: normal;\n}\n\n.vscode-highlight-code {\n  display: inline-block;\n  min-width: 100%;\n}\n\n.vscode-highlight-line {\n  display: inline-block;\n  box-sizing: border-box;\n  width: 100%;\n  padding-left: 1.5rem;\n  padding-left: var(--vscode-highlight-padding-left);\n  padding-right: 1.5rem;\n  padding-right: var(--vscode-highlight-padding-right);\n}\n\n.vscode-highlight-line-highlighted {\n  background-color: var(--vscode-highlight-line-highlighted-background-color);\n  box-shadow: inset var(--vscode-highlight-line-highlighted-border-width) 0 0 0 var(--vscode-highlight-line-highlighted-border-color);\n}\n\n  .andromeda {\nbackground-color: #23262E;\ncolor: #D5CED9;\n}\n\n.andromeda .mtk1 { color: #D5CED9; }\n.andromeda .mtk2 { color: #23262E; }\n.andromeda .mtk3 { color: #00E8C6; }\n.andromeda .mtk4 { color: #5F6167; }\n.andromeda .mtk5 { color: #EE5D43; }\n.andromeda .mtk6 { color: #F39C12; }\n.andromeda .mtk7 { color: #FFE66D; }\n.andromeda .mtk8 { color: #F92672; }\n.andromeda .mtk9 { color: #C74DED; }\n.andromeda .mtk10 { color: #7CB7FF; }\n.andromeda .mtk11 { color: #FF00AA; }\n.andromeda .mtk12 { color: #96E072; }\n.andromeda .mtki { font-style: italic; }\n.andromeda .mtkb { font-weight: bold; }\n.andromeda .mtku { text-decoration: underline; text-underline-position: under; }\n</style>","frontmatter":{"title":"Web50 lecture 8 - Testing","date":"2019-06-18","tags":["CS50","Web50","Testing"]}}},"pageContext":{"slug":"/CS50/web50/lecture_8/"}}}