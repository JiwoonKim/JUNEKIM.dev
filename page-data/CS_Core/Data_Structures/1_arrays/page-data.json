{"componentChunkName":"component---src-components-templates-blog-post-js","path":"/CS_Core/Data_Structures/1_arrays/","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<p>자료구조 기본 중 가장 기초적인 배열 소개</p>\n</blockquote>\n<h3>배열 (Arrays)</h3>\n<p>동일한 데이터 타입이 연속적으로 저장되는 자료구조 (sequence of same data type)</p>\n<ul>\n<li>메모리에 연속적으로 저장된다 (<strong>contiguous memory space</strong>)</li>\n<li>\n<p>인덱스 바탕의 <strong>임의 접근</strong> 이 최대 장점이다 (<strong>random access</strong>)</p>\n<ul>\n<li>시간복잡도 O(1)만에 접근 가능 (constant time access)</li>\n</ul>\n</li>\n</ul>\n<h3>배열의 종류</h3>\n<table>\n<thead>\n<tr>\n<th align=\"left\">크기가 변하지 않는 배열 ( fixed array )</th>\n<th align=\"left\">크기가 변할 수 있는 배열 ( resizable array )</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">(1) 정적 배열 (static array)</td>\n<td align=\"left\">(3) 동적 배열 (dynamic array)</td>\n</tr>\n<tr>\n<td align=\"left\">(2) 동적으로 할당된 배열 (dynamically-allocated array)</td>\n<td align=\"left\"></td>\n</tr>\n</tbody>\n</table>\n<h4>1. 정적 배열 (Static Arrays)</h4>\n<p>크기가 사전에 결정되어 변수로 선언이 불가능한 배열 (fixed array)</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">// 1차원 배열</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">int</span><span class=\"mtk1\"> </span><span class=\"mtk3\">nums</span><span class=\"mtk1\">[</span><span class=\"mtk6\">5</span><span class=\"mtk1\">]; </span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">int</span><span class=\"mtk1\"> nums[] </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> {</span><span class=\"mtk6\">1</span><span class=\"mtk1\">, </span><span class=\"mtk6\">2</span><span class=\"mtk1\">, </span><span class=\"mtk6\">3</span><span class=\"mtk1\">};</span></span></code></pre>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">// 2차원 배열</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">int</span><span class=\"mtk1\"> </span><span class=\"mtk3\">grid</span><span class=\"mtk1\">[</span><span class=\"mtk6\">5</span><span class=\"mtk1\">][</span><span class=\"mtk6\">5</span><span class=\"mtk1\">];</span></span></code></pre>\n<ul>\n<li>\n<p><strong>컴파일 타임</strong> 때 <strong>크기가 결정</strong> 된다 (<strong>before 실행</strong>)</p>\n<ul>\n<li>그러므로 변수로 크기를 정의할 수 없음 (ex. <code>int arr[num]</code> X)</li>\n</ul>\n</li>\n<li>정적으로 메모리가 할당되어 <strong>스택(stack) 공간에 저장</strong> 된다</li>\n</ul>\n<h4>2. 동적으로 할당된 배열 (Dynamically-allocated Arrays)</h4>\n<p>정적 배열과 마찬가지로 사전에 크기가 결정되지만, 변수로도 선언 가능한 배열 (also fixed array)</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">// 1차원 배열</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">int</span><span class=\"mtk5\">*</span><span class=\"mtk1\"> nums </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk5\">new</span><span class=\"mtk1\"> </span><span class=\"mtk9\">int</span><span class=\"mtk1\">[</span><span class=\"mtk6\">5</span><span class=\"mtk1\">];</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk5\">delete[]</span><span class=\"mtk1\"> nums;</span></span></code></pre>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">// 2차원 배열</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">int</span><span class=\"mtk5\">**</span><span class=\"mtk1\"> grid </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk5\">new</span><span class=\"mtk1\"> </span><span class=\"mtk9\">int</span><span class=\"mtk1\"> </span><span class=\"mtk5\">*</span><span class=\"mtk1\"> [row];</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk9\">int</span><span class=\"mtk1\"> i </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">0</span><span class=\"mtk1\">; i </span><span class=\"mtk5\">&lt;</span><span class=\"mtk1\"> row; i</span><span class=\"mtk5\">++</span><span class=\"mtk1\">) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk3\">grid</span><span class=\"mtk1\">[i] </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk5\">new</span><span class=\"mtk1\"> </span><span class=\"mtk9\">int</span><span class=\"mtk1\">[col];</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span></code></pre>\n<ul>\n<li>\n<p><strong>런 타임</strong> 때 <strong>크기가 결정</strong> 된다 (<strong>while 실행</strong>)</p>\n<ul>\n<li>변수로 크기 정의가 가능 (ex. <code>int arr[num]</code>)</li>\n</ul>\n</li>\n<li>\n<p>단, 크기가 결정되어 있으므로 상황에 따라 공간이 남거나 모자랄 수 있다</p>\n<ul>\n<li>최대 크기를 예측하여 <strong>크기를 사전에 정의해야</strong> 하며, 상황에 따라 크기를 늘리거나 줄일 수 없는 단점이 있다 (<strong>dynamically resize X</strong>)</li>\n</ul>\n</li>\n<li><strong>힙(heap) 공간에 저장</strong> 된다</li>\n</ul>\n<h4>3. 동적 배열 (Dynamic Array)</h4>\n<p>사전에 크기가 결정될 필요가 없고, 상황에 따라 늘어나거나 줄어들 수 있는 배열 (resizable array)</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk9\">class</span><span class=\"mtk1\"> </span><span class=\"mtk7\">DynamicArr</span><span class=\"mtk1\"> {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">private:</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk9\">int</span><span class=\"mtk5\">*</span><span class=\"mtk1\"> arr;</span><span class=\"mtk4\"> // 포인터</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk9\">int</span><span class=\"mtk1\"> size;</span><span class=\"mtk4\"> // 현재 사용 중인 크기</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk9\">int</span><span class=\"mtk1\"> capacity;</span><span class=\"mtk4\"> // 전체 사용가능한 공간</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">public:</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">        // 배열 크기 늘리기</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        </span><span class=\"mtk9\">void</span><span class=\"mtk1\"> </span><span class=\"mtk7\">resize</span><span class=\"mtk1\">() {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">            // 크기가 2배인 새 배열을 만들기</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">            </span><span class=\"mtk9\">int</span><span class=\"mtk5\">*</span><span class=\"mtk1\"> tempArr </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk5\">new</span><span class=\"mtk1\"> </span><span class=\"mtk9\">int</span><span class=\"mtk1\">[capacity </span><span class=\"mtk5\">*</span><span class=\"mtk1\"> </span><span class=\"mtk6\">2</span><span class=\"mtk1\">];</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">            // 이전 배열의 원소를 새 배열로 모두 옮기기</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">            </span><span class=\"mtk9\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk9\">int</span><span class=\"mtk1\"> i </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">0</span><span class=\"mtk1\">; i </span><span class=\"mtk5\">&lt;</span><span class=\"mtk1\"> num_elements; i</span><span class=\"mtk5\">++</span><span class=\"mtk1\">) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">                </span><span class=\"mtk3\">tempArr</span><span class=\"mtk1\">[i] </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">arr</span><span class=\"mtk1\">[i];</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">            }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">            // 이전 배열 삭제</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">            </span><span class=\"mtk5\">delete[]</span><span class=\"mtk1\"> arr;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">            // 새 배열로 포인터 업데이트</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">            arr </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> tempArr;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">        }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span></code></pre>\n<ul>\n<li>\n<p><strong>동적으로 할당한 배열을 베이스로 사용</strong> 하되, 다 찼을 경우에 <strong>새롭게 동적으로 할당한 배열로 대체하기</strong></p>\n<ul>\n<li>그렇기 때문에 배열이 다 차지 않았을 경우에는 삽입이 O(1)이지만, 만일 다 찼을 경우에는 배열을 resize해야 하므로 O(n)이 걸린다.</li>\n<li>단, 배열이 다 차지 않는 경우가 훨씬 더 많기 때문에 O(1)의 시간이 사실상 다 찼을 경우의 삽입 시간인 O(n)을 상쇄한다고 볼 수 있다 (분할 상환 분석; amortized time)</li>\n</ul>\n</li>\n<li>즉, 상황에 따라 <strong>크기가 변할 수 있는 배열</strong> (<strong>resizable array</strong>)</li>\n<li>only possible if it is a dynamicically-allocated array</li>\n</ul>\n<h4>그래서 동적 배열이란 정확히 무엇인가?</h4>\n<p>동적으로 할당된 배열 또는 동적 배열, 둘 중 어느 것?</p>\n<ul>\n<li>\n<p>일반적으로, 동적 배열이란 <strong>크기가 변할 수 있는 배열 (resizable array)를 의미</strong> 한다</p>\n<ul>\n<li>그래도 혹시 모르니까 인터뷰에서 동적 배열이 '동적으로 할당되었음(dynamically allocated)'을 의미하는지 또는 '크기가 변할 수 있다는 의미에서의 동적(dynamic as in resizable)'을 의미하는 것인지를 제대로 확인하고 넘어가는 것이 좋다.</li>\n</ul>\n</li>\n<li>덧, '동적'이란 일반적으로 동적으로 메모리가 할당되어 힙 공간에 저장됨을 의미 (반대로\n'정적'이란 정적으로 메모리가 할당되어 스택 공간에 저장됨을 의미)</li>\n</ul>\n<h3>백터 (Vectors)</h3>\n<p>C++ 언어에서 구현된 동적 배열 자료구조</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk9\">#include</span><span class=\"mtk1\"> </span><span class=\"mtk12\">&lt;vector&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">using</span><span class=\"mtk1\"> </span><span class=\"mtk9\">namespace</span><span class=\"mtk1\"> std;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">// 1차원 배열</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">vector</span><span class=\"mtk5\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> v;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">vector</span><span class=\"mtk1\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk1\">&gt; </span><span class=\"mtk7\">v</span><span class=\"mtk1\">(</span><span class=\"mtk6\">10</span><span class=\"mtk1\">);</span><span class=\"mtk4\">    // size of 10</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">vector</span><span class=\"mtk1\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk1\">&gt; </span><span class=\"mtk7\">v</span><span class=\"mtk1\">(</span><span class=\"mtk6\">10</span><span class=\"mtk1\">, </span><span class=\"mtk6\">0</span><span class=\"mtk1\">);</span><span class=\"mtk4\"> // size of 10, all values 0</span></span></code></pre>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">// 2차원 배열</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">vector</span><span class=\"mtk5\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk3\">v</span><span class=\"mtk1\">[</span><span class=\"mtk6\">10</span><span class=\"mtk1\">];</span><span class=\"mtk4\">                  // 10 vectors (= vector of vectors) </span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">vector</span><span class=\"mtk5\">&lt;</span><span class=\"mtk1\">vector</span><span class=\"mtk5\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk7\">v</span><span class=\"mtk1\">(</span><span class=\"mtk6\">10</span><span class=\"mtk1\">, </span><span class=\"mtk6\">0</span><span class=\"mtk1\">)</span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk3\">v</span><span class=\"mtk1\">[</span><span class=\"mtk6\">10</span><span class=\"mtk1\">];</span><span class=\"mtk4\"> // 10 rows &amp; 10 columns of 0</span></span></code></pre>\n<h4>백터 메소드</h4>\n<table>\n<thead>\n<tr>\n<th align=\"center\">연산</th>\n<th align=\"left\">사용방법</th>\n<th align=\"left\">설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\"><strong>삽입</strong></td>\n<td align=\"left\">v.insert(<code>it</code>, <code>값</code>)</td>\n<td align=\"left\">이터레이터 자리에 삽입</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"left\">v.insert(<code>it</code>, <code>개수</code>, <code>값</code>)</td>\n<td align=\"left\">이터레이터 자리에 값 개수만큼 삽입</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"left\">v.insert(<code>it</code>, <code>other.begin()</code>, <code>other.end()</code></td>\n<td align=\"left\">이터레이터 자리에 <code>other</code> 백터 삽입</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>삭제</strong></td>\n<td align=\"left\">v.erase(<code>it</code>)</td>\n<td align=\"left\">이터레이터 자리 값 삭제</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"left\">v.erase(<code>v.begin() + index</code>)</td>\n<td align=\"left\">index 값 삭제</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"left\">v.erase(<code>v.begin() + index</code>, <code>v.begin() + endNext</code>)</td>\n<td align=\"left\">index 부터 endNext 전까지 삭제</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"left\">v.clear()</td>\n<td align=\"left\">전체 비우기</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>푸시</strong></td>\n<td align=\"left\">v.push_back(<code>n</code>)</td>\n<td align=\"left\">맨뒤에 n 삽입</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>팝</strong></td>\n<td align=\"left\">v.pop()</td>\n<td align=\"left\">맨 뒤 값 삭제</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>크기</strong></td>\n<td align=\"left\">v.size()</td>\n<td align=\"left\">크기 리턴</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>비었나?</strong></td>\n<td align=\"left\">v.empty()</td>\n<td align=\"left\">비었는지 안 비었는지 확인</td>\n</tr>\n</tbody>\n</table>\n<h4>레퍼런스로 전달하기 (Pass by Reference)</h4>\n<p>함수 내에서 백터의 값들을 변화시켜야 할 경우</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">// 1차원 배열을 레퍼런스로 전달</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">void</span><span class=\"mtk1\"> </span><span class=\"mtk7\">function</span><span class=\"mtk1\">(</span><span class=\"mtk7\">vector</span><span class=\"mtk1\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk1\">&gt; </span><span class=\"mtk9\">&amp;</span><span class=\"mtk3\">v</span><span class=\"mtk1\">)</span><span class=\"mtk4\"> // &amp; 포함하여 정의</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">function</span><span class=\"mtk1\">(v)</span><span class=\"mtk4\"> // 실제 호출 시에는 v만 전달하면 알아서 &amp;v가 전달됨</span></span></code></pre>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk1\">vector</span><span class=\"mtk5\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk3\">va</span><span class=\"mtk1\">[</span><span class=\"mtk6\">10</span><span class=\"mtk1\">];</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">// 2차원 배열을 레퍼런스로 전달</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">void</span><span class=\"mtk1\"> </span><span class=\"mtk7\">function</span><span class=\"mtk1\">(</span><span class=\"mtk7\">vector</span><span class=\"mtk1\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk1\">&gt; </span><span class=\"mtk3\">va</span><span class=\"mtk1\">[])</span><span class=\"mtk4\"> // [] 포함하여 정의</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">function</span><span class=\"mtk1\">(va)</span><span class=\"mtk4\">    // 실제 호출 시에는 va만 전달하면 알아서 전체가 레퍼런스로 전달됨</span></span></code></pre>\n<style class=\"vscode-highlight-styles\">\n  :root {\n  --vscode-highlight-padding-v: 1rem;\n  --vscode-highlight-padding-h: 1.5rem;\n  --vscode-highlight-padding-top: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-right: var(--vscode-highlight-padding-h);\n  --vscode-highlight-padding-bottom: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-left: var(--vscode-highlight-padding-h);\n  --vscode-highlight-border-radius: 8px;\n\n  --vscode-highlight-line-highlighted-background-color: transparent;\n  --vscode-highlight-line-highlighted-border-width: 4px;\n  --vscode-highlight-line-highlighted-border-color: transparent;\n}\n\n.vscode-highlight {\n  overflow: auto;\n  -webkit-overflow-scrolling: touch;\n  padding-top: 1rem;\n  padding-top: var(--vscode-highlight-padding-top);\n  padding-bottom: 1rem;\n  padding-bottom: var(--vscode-highlight-padding-bottom);\n  border-radius: 8px;\n  border-radius: var(--vscode-highlight-border-radius);\n  font-feature-settings: normal;\n}\n\n.vscode-highlight-code {\n  display: inline-block;\n  min-width: 100%;\n}\n\n.vscode-highlight-line {\n  display: inline-block;\n  box-sizing: border-box;\n  width: 100%;\n  padding-left: 1.5rem;\n  padding-left: var(--vscode-highlight-padding-left);\n  padding-right: 1.5rem;\n  padding-right: var(--vscode-highlight-padding-right);\n}\n\n.vscode-highlight-line-highlighted {\n  background-color: var(--vscode-highlight-line-highlighted-background-color);\n  box-shadow: inset var(--vscode-highlight-line-highlighted-border-width) 0 0 0 var(--vscode-highlight-line-highlighted-border-color);\n}\n\n  .andromeda {\nbackground-color: #23262E;\ncolor: #D5CED9;\n}\n\n.andromeda .mtk1 { color: #D5CED9; }\n.andromeda .mtk2 { color: #23262E; }\n.andromeda .mtk3 { color: #00E8C6; }\n.andromeda .mtk4 { color: #5F6167; }\n.andromeda .mtk5 { color: #EE5D43; }\n.andromeda .mtk6 { color: #F39C12; }\n.andromeda .mtk7 { color: #FFE66D; }\n.andromeda .mtk8 { color: #F92672; }\n.andromeda .mtk9 { color: #C74DED; }\n.andromeda .mtk10 { color: #7CB7FF; }\n.andromeda .mtk11 { color: #FF00AA; }\n.andromeda .mtk12 { color: #96E072; }\n.andromeda .mtki { font-style: italic; }\n.andromeda .mtkb { font-weight: bold; }\n.andromeda .mtku { text-decoration: underline; text-underline-position: under; }\n</style>","frontmatter":{"title":"[자료구조] 01. 배열","date":"2019-08-14","tags":["자료구조","Cpp"]}}},"pageContext":{"slug":"/CS_Core/Data_Structures/1_arrays/"}}}