{"componentChunkName":"component---src-components-templates-blog-post-js","path":"/Javascript/paradigms/","result":{"data":{"markdownRemark":{"html":"<h3>패러다임</h3>\n<ul>\n<li>\n<p>imperative</p>\n<ul>\n<li>procedural</li>\n<li>object-oriented</li>\n</ul>\n</li>\n<li>\n<p>declarative</p>\n<ul>\n<li>functional </li>\n</ul>\n</li>\n</ul>\n<h3>함수형 패러다임 (Functional Paradigm)</h3>\n<p>모든 것을 함수로! (everything in functions)\n함수 = input -> output</p>\n<ol>\n<li>\n<p>avoid side-effects; use pure functions</p>\n<ul>\n<li>ex. printing (X), using or changing global variables (X)</li>\n</ul>\n</li>\n<li>\n<p>higher-order functions</p>\n<ul>\n<li>use functions as input or outputs; nested functions possible</li>\n<li>ex. iteration like for-loop (X) -> instead, use <code>map</code>, <code>reduce</code>, <code>filter</code></li>\n</ul>\n</li>\n<li>\n<p>avoid mutability; can't change values of data</p>\n<ul>\n<li>\n<p>all data = immutable</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"js\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">// use this way instead of changing initial[0] = 0;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">let</span><span class=\"mtk1\"> </span><span class=\"mtk3\">initial</span><span class=\"mtk1\"> </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> [</span><span class=\"mtk6\">1</span><span class=\"mtk1\">, </span><span class=\"mtk6\">2</span><span class=\"mtk1\">, </span><span class=\"mtk6\">3</span><span class=\"mtk1\">];</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">let</span><span class=\"mtk1\"> </span><span class=\"mtk3\">changed</span><span class=\"mtk1\"> </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">initial</span><span class=\"mtk1\">.</span><span class=\"mtk7\">map</span><span class=\"mtk1\">( (</span><span class=\"mtk3\">val</span><span class=\"mtk1\">) </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk5\">...</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">})</span></span></code></pre>\n</li>\n<li>problem: unnecesaary duplicates just to change small part of data</li>\n<li>\n<p>solution: use persistent data structures (structural sharing)</p>\n<ul>\n<li>ex. Mori, immutable.js</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"https://codewords.recurse.com/issues/one/an-introduction-to-functional-programming\">참고자료</a></li>\n</ol>\n<style class=\"vscode-highlight-styles\">\n  :root {\n  --vscode-highlight-padding-v: 1rem;\n  --vscode-highlight-padding-h: 1.5rem;\n  --vscode-highlight-padding-top: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-right: var(--vscode-highlight-padding-h);\n  --vscode-highlight-padding-bottom: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-left: var(--vscode-highlight-padding-h);\n  --vscode-highlight-border-radius: 8px;\n\n  --vscode-highlight-line-highlighted-background-color: transparent;\n  --vscode-highlight-line-highlighted-border-width: 4px;\n  --vscode-highlight-line-highlighted-border-color: transparent;\n}\n\n.vscode-highlight {\n  overflow: auto;\n  -webkit-overflow-scrolling: touch;\n  padding-top: 1rem;\n  padding-top: var(--vscode-highlight-padding-top);\n  padding-bottom: 1rem;\n  padding-bottom: var(--vscode-highlight-padding-bottom);\n  border-radius: 8px;\n  border-radius: var(--vscode-highlight-border-radius);\n  font-feature-settings: normal;\n}\n\n.vscode-highlight-code {\n  display: inline-block;\n  min-width: 100%;\n}\n\n.vscode-highlight-line {\n  display: inline-block;\n  box-sizing: border-box;\n  width: 100%;\n  padding-left: 1.5rem;\n  padding-left: var(--vscode-highlight-padding-left);\n  padding-right: 1.5rem;\n  padding-right: var(--vscode-highlight-padding-right);\n}\n\n.vscode-highlight-line-highlighted {\n  background-color: var(--vscode-highlight-line-highlighted-background-color);\n  box-shadow: inset var(--vscode-highlight-line-highlighted-border-width) 0 0 0 var(--vscode-highlight-line-highlighted-border-color);\n}\n\n  .andromeda {\nbackground-color: #23262E;\ncolor: #D5CED9;\n}\n\n.andromeda .mtk1 { color: #D5CED9; }\n.andromeda .mtk2 { color: #23262E; }\n.andromeda .mtk3 { color: #00E8C6; }\n.andromeda .mtk4 { color: #5F6167; }\n.andromeda .mtk5 { color: #EE5D43; }\n.andromeda .mtk6 { color: #F39C12; }\n.andromeda .mtk7 { color: #FFE66D; }\n.andromeda .mtk8 { color: #F92672; }\n.andromeda .mtk9 { color: #C74DED; }\n.andromeda .mtk10 { color: #7CB7FF; }\n.andromeda .mtk11 { color: #FF00AA; }\n.andromeda .mtk12 { color: #96E072; }\n.andromeda .mtki { font-style: italic; }\n.andromeda .mtkb { font-weight: bold; }\n.andromeda .mtku { text-decoration: underline; text-underline-position: under; }\n</style>","frontmatter":{"title":"자바스크립트로 패러다임 살펴보기","date":"2019-07-12","tags":["웹개발","프론트엔드","JavaScript","패러다임"]}}},"pageContext":{"slug":"/Javascript/paradigms/"}}}