{"componentChunkName":"component---src-components-templates-blog-post-js","path":"/Javascript/js_1/","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<p>Understanding JavaScript</p>\n<ul>\n<li>variables, data types, functions, browser functions</li>\n<li>based on <a href=\"http://javascript.info/\">tutorial</a></li>\n</ul>\n</blockquote>\n<h3>Variables</h3>\n<ul>\n<li><code>let</code>: <strong>mutable values</strong></li>\n<li>\n<p><code>const</code>: <strong>immutable values</strong></p>\n<ul>\n<li>use capital letter and underscores for hard-coded values</li>\n</ul>\n</li>\n</ul>\n<h3>Data Types</h3>\n<p>JavaScript = <strong>dynamically typed language</strong></p>\n<ol>\n<li>\n<p><strong>Number</strong>: integer and floating point numbers</p>\n<ul>\n<li><em>special numeric values</em>: <code>Infinity</code>, <code>-Infinity</code>, <code>NaN</code> (computational error)</li>\n<li><em>mathematical operations are safe</em> in JS: <strong>no fatal error</strong> (instead, returns NaN)</li>\n</ul>\n</li>\n<li>\n<p><strong>String</strong>: used w/ <em>quotes</em> (single or double)</p>\n<ul>\n<li><strong>backticks</strong> to embed variables w/ <code>${}</code></li>\n</ul>\n</li>\n<li><strong>Boolean</strong>: <code>true</code> or <code>false</code></li>\n<li>\n<p><strong>Null</strong>: <code>null</code> (<em>nothing, empty, value unknown</em> )</p>\n<ul>\n<li>used to assign an empty or unkown value to variable</li>\n</ul>\n</li>\n<li>\n<p><strong>Undefined</strong>: <code>undefined</code> (<em>value is not assigned</em>)</p>\n<ul>\n<li>used to check if variable has been assigned a value</li>\n</ul>\n</li>\n<li><strong>Objects</strong>: collections of data</li>\n<li><strong>Symbols</strong>: unique identifiers for objects</li>\n</ol>\n<h4>Check Type</h4>\n<ul>\n<li>use <code>typeof x</code> or <code>typeof(x)</code>: <strong>returns a string</strong> w/ the <strong>type name</strong></li>\n</ul>\n<h4>Type Conversion</h4>\n<p>converting values to the appropriate data type</p>\n<ul>\n<li><strong>implicit conversion</strong>: <em>operators and functions</em> <strong>automatically convert</strong> the values given to them to the right type</li>\n<li>\n<p><strong>explicit conversion</strong>: <code>String()</code>, <code>Number()</code>, <code>Boolean()</code></p>\n<ul>\n<li><code>+</code> in front of non-number: converts to <em>numeric value</em></li>\n</ul>\n</li>\n</ul>\n<h3>Functions</h3>\n<ul>\n<li>\n<p><strong>one function, one action</strong>: a function should do exactly what is suggested by its name, no more</p>\n<ul>\n<li><em>separating functions are as good as comments!</em></li>\n</ul>\n</li>\n<li>\n<p><strong>arguments</strong>:</p>\n<ul>\n<li>if a parameter(value) is <strong>not provided in use</strong>, it is <code>undefined</code></li>\n<li>can set <strong>default values for arguments</strong></li>\n</ul>\n</li>\n<li>\n<p><strong>a function can also be a value</strong></p>\n<ul>\n<li>can be assigned, copied, or declared</li>\n</ul>\n</li>\n</ul>\n<h4>Creating Functions</h4>\n<ol>\n<li>\n<p><strong>Function Declaration</strong></p>\n<ul>\n<li>use <code>function</code> keyword for declaration and <strong>name by action</strong></li>\n<li>\n<p>JavaScript engine reads and creates function before code is actually executed</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"js\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk9\">function</span><span class=\"mtk1\"> </span><span class=\"mtk7\">f</span><span class=\"mtk1\"> { </span><span class=\"mtk5\">...</span><span class=\"mtk1\"> }</span></span></code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Function Expression</strong></p>\n<ul>\n<li>function created and <strong>assigned to variable</strong> w/o name (anonymous)</li>\n<li>function is created as a part of an expression</li>\n<li>\n<p>JavaScript engine creates function when assigned</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"js\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk9\">let</span><span class=\"mtk1\"> </span><span class=\"mtk7\">f</span><span class=\"mtk1\"> </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk9\">function</span><span class=\"mtk1\">() { </span><span class=\"mtk5\">...</span><span class=\"mtk1\"> };</span></span></code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Arrow Functions</strong>: <code>=></code></p>\n<ul>\n<li>function created and <strong>assigned to variable</strong> w/o name (anonymous) and <strong>simpler than function expressions</strong></li>\n<li><em>used in the same way as function expressions</em></li>\n<li>\n<p>usually takes the form as <code>() => {}</code></p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"js\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk9\">let</span><span class=\"mtk1\"> </span><span class=\"mtk7\">f</span><span class=\"mtk1\"> </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">x</span><span class=\"mtk1\"> </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk3\">x</span><span class=\"mtk1\"> </span><span class=\"mtk5\">+</span><span class=\"mtk1\"> </span><span class=\"mtk6\">1</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">let</span><span class=\"mtk1\"> </span><span class=\"mtk7\">f</span><span class=\"mtk1\"> </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> (</span><span class=\"mtk3\">a</span><span class=\"mtk1\">, </span><span class=\"mtk3\">b</span><span class=\"mtk1\">) </span><span class=\"mtk9\">=&gt;</span><span class=\"mtk1\"> {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk7\">alert</span><span class=\"mtk1\">(</span><span class=\"mtk12\">&#96;chose </span><span class=\"mtk8\">${</span><span class=\"mtk3\">a</span><span class=\"mtk8\">}</span><span class=\"mtk12\"> and </span><span class=\"mtk8\">${</span><span class=\"mtk3\">b</span><span class=\"mtk8\">}</span><span class=\"mtk12\">&#96;</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span></code></pre>\n</li>\n</ul>\n</li>\n</ol>\n<h4>Callback Functions</h4>\n<ul>\n<li>\n<p><strong>functions passed as arguments</strong> to higher-order functions</p>\n<ul>\n<li>passed the <strong>function's name (w/o () )</strong></li>\n<li>passed entire <strong>function expressions</strong> or <strong>arrow functions</strong></li>\n</ul>\n</li>\n<li>\n<p>they are expected to be <strong>called back later if necessary</strong></p>\n<ul>\n<li>w/ (), the result of the function is stored into variable</li>\n<li>\n<p>w/o (), <strong>the function itself is stored</strong></p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"js\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk9\">function</span><span class=\"mtk1\"> </span><span class=\"mtk7\">sayHi</span><span class=\"mtk1\">() {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk7\">alert</span><span class=\"mtk1\">( </span><span class=\"mtk12\">&quot;hi&quot;</span><span class=\"mtk1\"> );</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">alert</span><span class=\"mtk1\">( </span><span class=\"mtk3\">sayHi</span><span class=\"mtk1\"> ); </span><span class=\"mtk4\">// shows function&#39;s code</span></span></code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<h3>Browser Functions</h3>\n<ul>\n<li><code>alert()</code>: opens modal window w/ text message</li>\n<li><code>prompt()</code>: opens modal window w/ text message and input field, returns the inputted value</li>\n<li><code>confirm()</code>: opens a modal window w/ a text message (question) and two buttons for true and false to be returned</li>\n</ul>\n<style class=\"vscode-highlight-styles\">\n  :root {\n  --vscode-highlight-padding-v: 1rem;\n  --vscode-highlight-padding-h: 1.5rem;\n  --vscode-highlight-padding-top: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-right: var(--vscode-highlight-padding-h);\n  --vscode-highlight-padding-bottom: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-left: var(--vscode-highlight-padding-h);\n  --vscode-highlight-border-radius: 8px;\n\n  --vscode-highlight-line-highlighted-background-color: transparent;\n  --vscode-highlight-line-highlighted-border-width: 4px;\n  --vscode-highlight-line-highlighted-border-color: transparent;\n}\n\n.vscode-highlight {\n  overflow: auto;\n  -webkit-overflow-scrolling: touch;\n  padding-top: 1rem;\n  padding-top: var(--vscode-highlight-padding-top);\n  padding-bottom: 1rem;\n  padding-bottom: var(--vscode-highlight-padding-bottom);\n  border-radius: 8px;\n  border-radius: var(--vscode-highlight-border-radius);\n  font-feature-settings: normal;\n}\n\n.vscode-highlight-code {\n  display: inline-block;\n  min-width: 100%;\n}\n\n.vscode-highlight-line {\n  display: inline-block;\n  box-sizing: border-box;\n  width: 100%;\n  padding-left: 1.5rem;\n  padding-left: var(--vscode-highlight-padding-left);\n  padding-right: 1.5rem;\n  padding-right: var(--vscode-highlight-padding-right);\n}\n\n.vscode-highlight-line-highlighted {\n  background-color: var(--vscode-highlight-line-highlighted-background-color);\n  box-shadow: inset var(--vscode-highlight-line-highlighted-border-width) 0 0 0 var(--vscode-highlight-line-highlighted-border-color);\n}\n\n  .andromeda {\nbackground-color: #23262E;\ncolor: #D5CED9;\n}\n\n.andromeda .mtk1 { color: #D5CED9; }\n.andromeda .mtk2 { color: #23262E; }\n.andromeda .mtk3 { color: #00E8C6; }\n.andromeda .mtk4 { color: #5F6167; }\n.andromeda .mtk5 { color: #EE5D43; }\n.andromeda .mtk6 { color: #F39C12; }\n.andromeda .mtk7 { color: #FFE66D; }\n.andromeda .mtk8 { color: #F92672; }\n.andromeda .mtk9 { color: #C74DED; }\n.andromeda .mtk10 { color: #7CB7FF; }\n.andromeda .mtk11 { color: #FF00AA; }\n.andromeda .mtk12 { color: #96E072; }\n.andromeda .mtki { font-style: italic; }\n.andromeda .mtkb { font-weight: bold; }\n.andromeda .mtku { text-decoration: underline; text-underline-position: under; }\n</style>","frontmatter":{"title":"JavaScript 1 - Fundamentals","date":"2019-03-19","tags":["웹개발","프론트엔드","JavaScript"]}}},"pageContext":{"slug":"/Javascript/js_1/"}}}