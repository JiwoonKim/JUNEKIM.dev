{"componentChunkName":"component---src-components-templates-blog-post-js","path":"/Baekjoon/1_BASICS/2_data_structures/","result":{"data":{"markdownRemark":{"html":"<h3>스택 (Stack)</h3>\n<ul>\n<li>Last-in-First-Out (<strong>LIFO</strong>)</li>\n<li>C++의 STL의 stack을 사용하여 <code>push</code>, <code>pop</code>, <code>top</code>, <code>empty</code>, <code>size</code> 연산을 사용.</li>\n<li>직접 구현할 경우, <strong>stack을 표현할 배열</strong> 과 <strong>크기를 기록할 size 변수</strong> 사용.</li>\n<li>\n<p><strong>가장 가까운 원소</strong> 를 <strong>O(1)</strong> 만에 <strong>찾을 수 있는 장점</strong> (push &#x26; pop)을 적극적으로 활용해서 문제를 풀 것!</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk3\">stack</span><span class=\"mtk1\">[size] </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> x; size</span><span class=\"mtk5\">++</span><span class=\"mtk1\">;</span><span class=\"mtk4\">     // push 연산</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk3\">stack</span><span class=\"mtk1\">[size </span><span class=\"mtk5\">-</span><span class=\"mtk1\"> </span><span class=\"mtk6\">1</span><span class=\"mtk1\">] </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">0</span><span class=\"mtk1\">; size</span><span class=\"mtk5\">--</span><span class=\"mtk1\">;</span><span class=\"mtk4\"> // pop 연산</span></span></code></pre>\n</li>\n</ul>\n<h4>괄호 문제</h4>\n<ul>\n<li>empty check를 바탕으로 풀기 때문에 따로 스택을 만들 필요 없이, 그냥 size만 사용해도 풀 수 있다.</li>\n</ul>\n<h4>에디터 문제</h4>\n<ul>\n<li>입력 크기를 고려하여 문자열 하나로 푸는 것이 아니라, 스택 두 개를 활용하여 풀어야 한다.</li>\n</ul>\n<h3>큐 (Queue)</h3>\n<ul>\n<li>First-in-First-Out (<strong>FIFO</strong>)</li>\n<li>C++의 STL의 queue을 사용하여 <code>push</code>, <code>pop</code>, <code>front</code>, <code>back</code>, <code>empty</code>, <code>size</code> 연산을 사용.</li>\n<li>한 쪽에서 자료를 넣고 다른 쪽에서 자료를 뺄 수 있는 구조.</li>\n<li>back보다 <strong>front가 더 중요</strong>.</li>\n<li><strong>양쪽에서 넣을 수 있다</strong></li>\n<li>\n<p>직접 구현할 경우, <strong>queue을 표현할 배열과 시작 인덱스를 기록할 begin 변수와 마지막 인덱스를 기록할 end를 사용</strong>.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk3\">queue</span><span class=\"mtk1\">[end] </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> x; end</span><span class=\"mtk5\">++</span><span class=\"mtk1\">;</span><span class=\"mtk4\">          // push 연산</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk3\">queue</span><span class=\"mtk1\">[begin] </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">0</span><span class=\"mtk1\">; begin </span><span class=\"mtk5\">+=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">1</span><span class=\"mtk1\">;</span><span class=\"mtk4\">   // pop 연산</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">size </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> end </span><span class=\"mtk5\">-</span><span class=\"mtk1\"> begin;</span><span class=\"mtk4\">             // size 연산 </span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">empty </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> (begin </span><span class=\"mtk5\">==</span><span class=\"mtk1\"> end)</span><span class=\"mtk5\">?</span><span class=\"mtk1\"> </span><span class=\"mtk6\">1</span><span class=\"mtk1\"> </span><span class=\"mtk5\">:</span><span class=\"mtk1\"> </span><span class=\"mtk6\">0</span><span class=\"mtk1\">;</span><span class=\"mtk4\">  // empty 연산</span></span></code></pre>\n</li>\n</ul>\n<h4>조세퍼스 문제</h4>\n<ul>\n<li>큐를 이용하여 풀기</li>\n</ul>\n<h3>덱 (Deque)</h3>\n<ul>\n<li><strong>double-ended queue</strong>: 양 끝에서 자료를 넣고 뺄 수 자료구조.</li>\n<li>C++의 STL의 queue을 사용하여 <code>push_front</code>, <code>push_back</code>, <code>pop_front</code>, <code>pop_back</code>, <code>front</code>, <code>back</code> 연산을 사용.</li>\n</ul>\n<h3>문자열 (String)</h3>\n<ul>\n<li><strong>ASCII 코드를 사용하여 저장함</strong>.</li>\n<li>\n<p>단어 길이가 필요 시, 아래와 같이 <code>len</code> 값을 따로 저장하여 사용해야 O(n) 실행 가능 (매번 루프에서 조건체크 시 strlen 호출하면 O(n^2)가 걸린다)</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk9\">int</span><span class=\"mtk1\"> len </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">strlen</span><span class=\"mtk1\">(s);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk9\">int</span><span class=\"mtk1\"> i </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">0</span><span class=\"mtk1\">; i </span><span class=\"mtk5\">&lt;</span><span class=\"mtk1\"> len; i </span><span class=\"mtk5\">++</span><span class=\"mtk1\">)</span></span></code></pre>\n</li>\n<li><strong>문자열 -> 정수 변환</strong>: <code>stoi()</code>, <code>stol()</code>, <code>stoll()</code> 사용</li>\n<li><strong>정수 -> 문자열 변한</strong>: <code>to_string()</code></li>\n</ul>\n<style class=\"vscode-highlight-styles\">\n  :root {\n  --vscode-highlight-padding-v: 1rem;\n  --vscode-highlight-padding-h: 1.5rem;\n  --vscode-highlight-padding-top: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-right: var(--vscode-highlight-padding-h);\n  --vscode-highlight-padding-bottom: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-left: var(--vscode-highlight-padding-h);\n  --vscode-highlight-border-radius: 8px;\n\n  --vscode-highlight-line-highlighted-background-color: transparent;\n  --vscode-highlight-line-highlighted-border-width: 4px;\n  --vscode-highlight-line-highlighted-border-color: transparent;\n}\n\n.vscode-highlight {\n  overflow: auto;\n  -webkit-overflow-scrolling: touch;\n  padding-top: 1rem;\n  padding-top: var(--vscode-highlight-padding-top);\n  padding-bottom: 1rem;\n  padding-bottom: var(--vscode-highlight-padding-bottom);\n  border-radius: 8px;\n  border-radius: var(--vscode-highlight-border-radius);\n  font-feature-settings: normal;\n}\n\n.vscode-highlight-code {\n  display: inline-block;\n  min-width: 100%;\n}\n\n.vscode-highlight-line {\n  display: inline-block;\n  box-sizing: border-box;\n  width: 100%;\n  padding-left: 1.5rem;\n  padding-left: var(--vscode-highlight-padding-left);\n  padding-right: 1.5rem;\n  padding-right: var(--vscode-highlight-padding-right);\n}\n\n.vscode-highlight-line-highlighted {\n  background-color: var(--vscode-highlight-line-highlighted-background-color);\n  box-shadow: inset var(--vscode-highlight-line-highlighted-border-width) 0 0 0 var(--vscode-highlight-line-highlighted-border-color);\n}\n\n  .andromeda {\nbackground-color: #23262E;\ncolor: #D5CED9;\n}\n\n.andromeda .mtk1 { color: #D5CED9; }\n.andromeda .mtk2 { color: #23262E; }\n.andromeda .mtk3 { color: #00E8C6; }\n.andromeda .mtk4 { color: #5F6167; }\n.andromeda .mtk5 { color: #EE5D43; }\n.andromeda .mtk6 { color: #F39C12; }\n.andromeda .mtk7 { color: #FFE66D; }\n.andromeda .mtk8 { color: #F92672; }\n.andromeda .mtk9 { color: #C74DED; }\n.andromeda .mtk10 { color: #7CB7FF; }\n.andromeda .mtk11 { color: #FF00AA; }\n.andromeda .mtk12 { color: #96E072; }\n.andromeda .mtki { font-style: italic; }\n.andromeda .mtkb { font-weight: bold; }\n.andromeda .mtku { text-decoration: underline; text-underline-position: under; }\n</style>","frontmatter":{"title":"[백준] 기초 02. 자료구조 1","date":"2019-01-25","tags":["백준","백준 기초","알고리즘","Cpp","자료구조"]}}},"pageContext":{"slug":"/Baekjoon/1_BASICS/2_data_structures/"}}}