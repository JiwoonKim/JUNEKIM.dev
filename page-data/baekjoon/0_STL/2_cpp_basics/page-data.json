{"componentChunkName":"component---src-components-templates-blog-post-js","path":"/Baekjoon/0_STL/2_cpp_basics/","result":{"data":{"markdownRemark":{"html":"<h3>입출력</h3>\n<ul>\n<li><code>cin</code> 와 <code>cout</code> 사용</li>\n<li><code>getline(cin, s)</code>: 한 줄 읽기</li>\n</ul>\n<h4>실수 출력</h4>\n<ul>\n<li><code>setprecision(숫자)</code>: 숫자 자리에서 반올림</li>\n<li>\n<p><code>fixed</code>: 숫자 자리까지 모두 출력 (no 반올림)</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk9\">#include</span><span class=\"mtk1\"> </span><span class=\"mtk12\">&lt;iomanip&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">#include</span><span class=\"mtk1\"> </span><span class=\"mtk12\">&lt;iostream&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">using</span><span class=\"mtk1\"> </span><span class=\"mtk9\">namespace</span><span class=\"mtk1\"> std;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">// 소수점 출력하기</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">double</span><span class=\"mtk1\"> f </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">3.14159</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">// 5번째 자리에서 반올림하여 출력: 3.1416</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">cout </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk7\">setprecision</span><span class=\"mtk1\">(</span><span class=\"mtk6\">5</span><span class=\"mtk1\">) </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> f ; </span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">// 소수점 5자리까지 출력: 3.14159</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">cout </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> fixed </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk7\">setprecision</span><span class=\"mtk1\">(</span><span class=\"mtk6\">5</span><span class=\"mtk1\">) </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> f;</span></span></code></pre>\n</li>\n</ul>\n<h4>출력 속도</h4>\n<ul>\n<li>endl는 flush까지 포함하기 때문에 <code>\\n</code>을 사용하는 것이 빠르다.</li>\n<li><code>printf</code>가 cout보다 빠르다.</li>\n<li>\n<p>cin/cout 사용 전에 <code>ios_base::sync_with_stdio(false);</code>를 명시</p>\n<ul>\n<li>cin/cout을 printf의 속도로 사용가능 </li>\n<li>단, cin/cout을 scanf/printf와 같이 사용할 수 없음</li>\n</ul>\n</li>\n</ul>\n<h3>auto 자료형</h3>\n<ul>\n<li>컴파일러가 자료형 타입을 추론해서 타입을 결정한다.</li>\n<li>\n<p>변수의 타입을 명확하게 알 수 있게 value를 assign해야 함.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk9\">auto</span><span class=\"mtk1\"> a;</span><span class=\"mtk4\">     // 자료형을 추론할 수 없기에 컴파일 에러가 뜸</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">auto</span><span class=\"mtk1\"> b </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">0</span><span class=\"mtk1\">;</span><span class=\"mtk4\"> // 자료형이 추론 가능</span></span></code></pre>\n</li>\n<li>\n<p>iterator로 사용할 때 매우 편리하다.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk9\">#include</span><span class=\"mtk1\"> </span><span class=\"mtk12\">&lt;vector&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">#include</span><span class=\"mtk1\"> </span><span class=\"mtk12\">&lt;map&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">map</span><span class=\"mtk5\">&lt;</span><span class=\"mtk1\">pair</span><span class=\"mtk5\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk1\">, </span><span class=\"mtk9\">int</span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\">, vector</span><span class=\"mtk5\">&lt;</span><span class=\"mtk1\">pair</span><span class=\"mtk5\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk1\">,string</span><span class=\"mtk5\">&gt;&gt;&gt;</span><span class=\"mtk1\"> d;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">//길게 자료형을 선언해야 하는 대신 auto 편리하게 사용</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk9\">auto</span><span class=\"mtk1\"> it </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">d</span><span class=\"mtk1\">.</span><span class=\"mtk7\">begin</span><span class=\"mtk1\">(); ...)</span></span></code></pre>\n</li>\n</ul>\n<h3>range-based FOR</h3>\n<ul>\n<li>\n<p>foreach에 해당하는 문법: <code>:</code> 사용</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk9\">#include</span><span class=\"mtk1\"> </span><span class=\"mtk12\">&lt;vector&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">vector</span><span class=\"mtk5\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> a </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> {</span><span class=\"mtk6\">1</span><span class=\"mtk1\">, </span><span class=\"mtk6\">2</span><span class=\"mtk1\">, </span><span class=\"mtk6\">3</span><span class=\"mtk1\">, </span><span class=\"mtk6\">4</span><span class=\"mtk1\">, </span><span class=\"mtk6\">5</span><span class=\"mtk1\">};</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk9\">auto</span><span class=\"mtk1\"> x : a) {...}</span></span></code></pre>\n</li>\n</ul>\n<h3>람다 함수 (Lamda Function)</h3>\n<ul>\n<li>\n<p>이름이 없는 <strong>익명 함수</strong>: [캡쳐] (함수인자) {함수내용}으로 정의한다.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk1\">cout </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> [](</span><span class=\"mtk9\">int</span><span class=\"mtk1\"> </span><span class=\"mtk3\">x</span><span class=\"mtk1\">, </span><span class=\"mtk9\">int</span><span class=\"mtk1\"> </span><span class=\"mtk3\">y</span><span class=\"mtk1\">) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> x </span><span class=\"mtk5\">+</span><span class=\"mtk1\"> y; </span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}(</span><span class=\"mtk6\">1</span><span class=\"mtk1\">, </span><span class=\"mtk6\">2</span><span class=\"mtk1\">);</span></span></code></pre>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk9\">auto</span><span class=\"mtk1\"> sum </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> [](</span><span class=\"mtk9\">int</span><span class=\"mtk1\"> </span><span class=\"mtk3\">x</span><span class=\"mtk1\">, </span><span class=\"mtk9\">int</span><span class=\"mtk1\"> </span><span class=\"mtk3\">y</span><span class=\"mtk1\">) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> x </span><span class=\"mtk5\">+</span><span class=\"mtk1\"> y;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">};</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">cout </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk7\">sum</span><span class=\"mtk1\">(</span><span class=\"mtk6\">1</span><span class=\"mtk1\">, </span><span class=\"mtk6\">2</span><span class=\"mtk1\">);</span></span></code></pre>\n</li>\n</ul>\n<h4>캡쳐</h4>\n<ul>\n<li><strong>람다 함수의 scope를 어떻게 결정할 것인지</strong> 를 정하는 부분이다.</li>\n<li>\n<p><code>[&#x26;]</code>를 통해 람다 함수 <strong>밖의 모든 변수를 참조 가능</strong> 하다.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk9\">int</span><span class=\"mtk1\"> x;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">auto</span><span class=\"mtk1\"> is_less </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> [</span><span class=\"mtk5\">&amp;</span><span class=\"mtk1\">] (</span><span class=\"mtk9\">int</span><span class=\"mtk1\"> </span><span class=\"mtk3\">number</span><span class=\"mtk1\">) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> number </span><span class=\"mtk5\">&lt;</span><span class=\"mtk1\"> x;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">};</span></span></code></pre>\n</li>\n</ul>\n<h4>리턴 타입</h4>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk1\">function</span><span class=\"mtk5\">&lt;</span><span class=\"mtk9\">void</span><span class=\"mtk1\">()</span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> print </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> [] {};</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">function</span><span class=\"mtk5\">&lt;</span><span class=\"mtk9\">void</span><span class=\"mtk1\">(</span><span class=\"mtk9\">int</span><span class=\"mtk1\">)</span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> print2 </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> [](</span><span class=\"mtk9\">int</span><span class=\"mtk1\"> </span><span class=\"mtk3\">x</span><span class=\"mtk1\">) {};</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">function</span><span class=\"mtk5\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk1\">(</span><span class=\"mtk9\">int</span><span class=\"mtk1\">,</span><span class=\"mtk9\">int</span><span class=\"mtk1\">)</span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> sum </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> [](</span><span class=\"mtk9\">int</span><span class=\"mtk1\"> </span><span class=\"mtk3\">x</span><span class=\"mtk1\">, </span><span class=\"mtk9\">int</span><span class=\"mtk1\"> </span><span class=\"mtk3\">y</span><span class=\"mtk1\">) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> x </span><span class=\"mtk5\">+</span><span class=\"mtk1\"> y;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">};</span></span></code></pre>\n<style class=\"vscode-highlight-styles\">\n  :root {\n  --vscode-highlight-padding-v: 1rem;\n  --vscode-highlight-padding-h: 1.5rem;\n  --vscode-highlight-padding-top: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-right: var(--vscode-highlight-padding-h);\n  --vscode-highlight-padding-bottom: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-left: var(--vscode-highlight-padding-h);\n  --vscode-highlight-border-radius: 8px;\n\n  --vscode-highlight-line-highlighted-background-color: transparent;\n  --vscode-highlight-line-highlighted-border-width: 4px;\n  --vscode-highlight-line-highlighted-border-color: transparent;\n}\n\n.vscode-highlight {\n  overflow: auto;\n  -webkit-overflow-scrolling: touch;\n  padding-top: 1rem;\n  padding-top: var(--vscode-highlight-padding-top);\n  padding-bottom: 1rem;\n  padding-bottom: var(--vscode-highlight-padding-bottom);\n  border-radius: 8px;\n  border-radius: var(--vscode-highlight-border-radius);\n  font-feature-settings: normal;\n}\n\n.vscode-highlight-code {\n  display: inline-block;\n  min-width: 100%;\n}\n\n.vscode-highlight-line {\n  display: inline-block;\n  box-sizing: border-box;\n  width: 100%;\n  padding-left: 1.5rem;\n  padding-left: var(--vscode-highlight-padding-left);\n  padding-right: 1.5rem;\n  padding-right: var(--vscode-highlight-padding-right);\n}\n\n.vscode-highlight-line-highlighted {\n  background-color: var(--vscode-highlight-line-highlighted-background-color);\n  box-shadow: inset var(--vscode-highlight-line-highlighted-border-width) 0 0 0 var(--vscode-highlight-line-highlighted-border-color);\n}\n\n  .andromeda {\nbackground-color: #23262E;\ncolor: #D5CED9;\n}\n\n.andromeda .mtk1 { color: #D5CED9; }\n.andromeda .mtk2 { color: #23262E; }\n.andromeda .mtk3 { color: #00E8C6; }\n.andromeda .mtk4 { color: #5F6167; }\n.andromeda .mtk5 { color: #EE5D43; }\n.andromeda .mtk6 { color: #F39C12; }\n.andromeda .mtk7 { color: #FFE66D; }\n.andromeda .mtk8 { color: #F92672; }\n.andromeda .mtk9 { color: #C74DED; }\n.andromeda .mtk10 { color: #7CB7FF; }\n.andromeda .mtk11 { color: #FF00AA; }\n.andromeda .mtk12 { color: #96E072; }\n.andromeda .mtki { font-style: italic; }\n.andromeda .mtkb { font-weight: bold; }\n.andromeda .mtku { text-decoration: underline; text-underline-position: under; }\n</style>","frontmatter":{"title":"[백준] STL 02. C++ 언어","date":"2019-01-24","tags":["백준","Cpp","STL"]}}},"pageContext":{"slug":"/Baekjoon/0_STL/2_cpp_basics/"}}}