{"componentChunkName":"component---src-components-templates-blog-post-js","path":"/Baekjoon/0_STL/3_stl_containers/","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<p>Standard Template Library (STL)는 알고리즘, 컨테이너, 함수, 이터레이터로 이루어져 있으며 그 중 컨테이너를 정리</p>\n</blockquote>\n<h3>컨테이너 (Container)</h3>\n<p>Pair, Tuple, Vector, Deque, List, Set, Map, Stack, Queue, Priority Queue, Bitset 등</p>\n<ul>\n<li><a href=\"#%EC%88%9C%EC%B0%A8-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-sequential-container\">순차 컨테이너</a>: vector, list, deque</li>\n<li><a href=\"#%EC%97%B0%EA%B4%80-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-associative-containers\">연관 컨테이너</a>: set, map</li>\n<li><a href=\"#%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-%EC%96%B4%EB%8C%91%ED%84%B0-container-adaptors\">컨테이너 어댑터</a>: stack, queue, priority_queue</li>\n<li>그외: pair, tuple, bitset</li>\n</ul>\n<h4># Pair</h4>\n<ul>\n<li>두 자료 T1과 T2를 묶어서 사용한다.</li>\n<li>Pair는 <utility> 헤더파일에 정의되지만, <algorithm>이나 <vector> 헤더파일에도 포함되어 있기 때문에 일반적으로 이 둘을 사용한다.</li>\n<li>\n<p><strong>선언</strong>: <code>make_pair</code> 또는 생성자를 이용한다.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk9\">#include</span><span class=\"mtk1\"> </span><span class=\"mtk12\">&lt;vector&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">pair</span><span class=\"mtk5\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk1\">,</span><span class=\"mtk9\">int</span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> p;</span><span class=\"mtk4\">         // 선언이 따로 없으면 0과 0으로 초기화</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">p </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">make_pair</span><span class=\"mtk1\">(</span><span class=\"mtk6\">1</span><span class=\"mtk1\">, </span><span class=\"mtk6\">2</span><span class=\"mtk1\">);</span><span class=\"mtk4\">     // make_pair를 통해 선언과 값 설정</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">p </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">pair</span><span class=\"mtk1\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk1\">,</span><span class=\"mtk9\">int</span><span class=\"mtk1\">&gt;(</span><span class=\"mtk6\">1</span><span class=\"mtk1\">, </span><span class=\"mtk6\">2</span><span class=\"mtk1\">);</span><span class=\"mtk4\"> // 생성자를 통해 선언과 값 설정</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">pair</span><span class=\"mtk1\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk1\">,</span><span class=\"mtk9\">int</span><span class=\"mtk1\">&gt; </span><span class=\"mtk7\">p</span><span class=\"mtk1\">(</span><span class=\"mtk6\">1</span><span class=\"mtk1\">, </span><span class=\"mtk6\">2</span><span class=\"mtk1\">);</span><span class=\"mtk4\">   // 생성자를 이용한 또 다른 방법</span></span></code></pre>\n</li>\n<li>\n<p><strong>접근</strong>: <code>pair.first</code>와 <code>pair.second</code> 또는 <code>tie</code>를 이용한다.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk3\">p</span><span class=\"mtk1\">.</span><span class=\"mtk3\">first</span><span class=\"mtk1\"> </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">0</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk3\">p</span><span class=\"mtk1\">.</span><span class=\"mtk3\">second</span><span class=\"mtk1\"> </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">0</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">tie</span><span class=\"mtk1\">(x, y) </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> p;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">tie</span><span class=\"mtk1\">(a, b) </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">make_pair</span><span class=\"mtk1\">(b, a)</span><span class=\"mtk4\"> // 순서 바꿈</span></span></code></pre>\n</li>\n</ul>\n<h4># Tuple</h4>\n<ul>\n<li>둘 이상의 여러 개의 자료를 묶어 사용할 수 있다.</li>\n<li>\n<p><strong>선언</strong>: <code>make_tuple</code>을 이용한다.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk9\">#include</span><span class=\"mtk1\"> </span><span class=\"mtk12\">&lt;tuple&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">tuple</span><span class=\"mtk5\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk1\">, </span><span class=\"mtk9\">int</span><span class=\"mtk1\">, </span><span class=\"mtk9\">int</span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> t1 </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">make_tuple</span><span class=\"mtk1\">(</span><span class=\"mtk6\">1</span><span class=\"mtk1\">, </span><span class=\"mtk6\">2</span><span class=\"mtk1\">, </span><span class=\"mtk6\">3</span><span class=\"mtk1\">);</span></span></code></pre>\n</li>\n<li>\n<p><strong>접근</strong>: <code>get&#x3C;></code> 또는 <code>tie</code>를 이용한다.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk1\">cout </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk7\">get</span><span class=\"mtk1\">&lt;</span><span class=\"mtk6\">0</span><span class=\"mtk1\">&gt;(t1);</span><span class=\"mtk4\">     // get을 이용하여 접근</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">tie</span><span class=\"mtk1\">(x, y, z) </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> t1;</span><span class=\"mtk4\">      // tie를 통해 각 index에 접근</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">tie</span><span class=\"mtk1\">(x, y, ignore) </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> t1</span><span class=\"mtk4\">  // tie에 ignore를 함께 사용하여 특정 index에 접근</span></span></code></pre>\n</li>\n</ul>\n<h3>순차 컨테이너 (Sequential Container)</h3>\n<p>순서가 있는 컨테이너로 vector, list, deque, array, forward_list가 존재한다. </p>\n<h4># Vector</h4>\n<ul>\n<li>길이를 변경할 수 있는 배열이다.</li>\n<li>\n<p><strong>선언</strong>: 길이를 직접 지정하거나, 특정 값으로 초기화하는 옵션도 가능하다.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk9\">#include</span><span class=\"mtk1\"> </span><span class=\"mtk12\">&lt;vector&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">vector</span><span class=\"mtk5\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> v;</span><span class=\"mtk4\">         // 길이가 0인 벡터 선언</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">vector</span><span class=\"mtk1\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk1\">&gt; </span><span class=\"mtk7\">v</span><span class=\"mtk1\">(</span><span class=\"mtk6\">10</span><span class=\"mtk1\">);</span><span class=\"mtk4\">     // 길이가 10인 벡터 선언</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">vector</span><span class=\"mtk1\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk1\">&gt; </span><span class=\"mtk7\">v</span><span class=\"mtk1\">(</span><span class=\"mtk6\">15</span><span class=\"mtk1\">, </span><span class=\"mtk6\">1</span><span class=\"mtk1\">);</span><span class=\"mtk4\">  // 길이가 15이고 1로 모두 초기화된 벡터 선언</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">vector</span><span class=\"mtk5\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> v </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> {</span><span class=\"mtk6\">1</span><span class=\"mtk1\">, </span><span class=\"mtk6\">2</span><span class=\"mtk1\">}</span><span class=\"mtk4\"> // list를 이용한 벡터 선언</span></span></code></pre>\n</li>\n<li><strong>접근</strong>: <code>front()</code>와 <code>back()</code>, 그리고 <code>[]</code> 또는 iterator (<code>*v.begin()</code>, <code>*v.end()</code>)를 이용한다.</li>\n<li>\n<p><strong>삽입</strong>: <code>push_back()</code>을 통해 가장 뒤쪽에 삽입, <code>insert()</code>를 통해 원하는 자리에 원소를 삽입한다.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">insert</span><span class=\"mtk1\">(</span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">begin</span><span class=\"mtk1\">() </span><span class=\"mtk5\">+</span><span class=\"mtk1\"> 인덱스, 값)</span><span class=\"mtk4\">  // 인덱스에 값 추가 (이터레이터 사용)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">insert</span><span class=\"mtk1\">(it, 개수, 값)</span><span class=\"mtk4\">            // 이터레이터 자리에 값 개수만큼 추가</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">insert</span><span class=\"mtk1\">(it, </span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">begin</span><span class=\"mtk1\">(), </span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">end</span><span class=\"mtk1\">())</span><span class=\"mtk4\"> // 이터레이터에 v 벡터의 값들을 모두 삽입</span></span></code></pre>\n</li>\n<li>\n<p><strong>삭제</strong>: <code>pop_back()</code>을 통해 가장 뒤쪽을 삭제, <code>erase()</code>를 통해 원하는 자리의 원소를 제거, <code>clear()</code>로 모든 원소 삭제한다.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">erase</span><span class=\"mtk1\">(</span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">begin</span><span class=\"mtk1\">() </span><span class=\"mtk5\">+</span><span class=\"mtk1\"> 인덱스)</span><span class=\"mtk4\">                    // 인덱스 + 1 자리 제거</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">erase</span><span class=\"mtk1\">(</span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">begin</span><span class=\"mtk1\">() </span><span class=\"mtk5\">+</span><span class=\"mtk1\"> 인덱스, </span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">begin</span><span class=\"mtk1\">() </span><span class=\"mtk5\">+</span><span class=\"mtk1\"> 끝자리)</span><span class=\"mtk4\"> // 인덱스 + 1부터 끝 바로 전까지 제거</span></span></code></pre>\n</li>\n<li><strong>크기</strong>: <code>size()</code>를 통해 벡터의 크기를 알아보고, <code>empty()</code>를 통해 벡터가 비었는지 안 비었는지를 알아본다.</li>\n<li>\n<p><strong>순회</strong>: 인덱스 (size와 <code>[]</code>의 조합) 또는 iterator (<code>begin</code> &#x26; <code>end</code>의 조합)을 이용한 다양한 방식이 있다.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">// 순회접근</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk9\">int</span><span class=\"mtk1\"> i </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">0</span><span class=\"mtk1\">; i </span><span class=\"mtk5\">&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">size</span><span class=\"mtk1\">(); i</span><span class=\"mtk5\">++</span><span class=\"mtk1\">) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk3\">v</span><span class=\"mtk1\">[i];</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk9\">int</span><span class=\"mtk1\"> </span><span class=\"mtk5\">&amp;</span><span class=\"mtk1\">x : v) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    x;</span><span class=\"mtk4\">  // 인덱스 접근</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk5\">*</span><span class=\"mtk1\">x;</span><span class=\"mtk4\"> // 값 접근</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">// 이터레이터 사용하여 순회 접근</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">for</span><span class=\"mtk1\">(vector&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk1\">&gt;::iterator it </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">begin</span><span class=\"mtk1\">(); it </span><span class=\"mtk5\">!=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">end</span><span class=\"mtk1\">(); it</span><span class=\"mtk5\">++</span><span class=\"mtk1\">) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    cout </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk5\">*</span><span class=\"mtk1\">it;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk9\">auto</span><span class=\"mtk1\"> it </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">begin</span><span class=\"mtk1\">(); it </span><span class=\"mtk5\">!=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">end</span><span class=\"mtk1\">(); it</span><span class=\"mtk5\">++</span><span class=\"mtk1\">) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    it </span><span class=\"mtk5\">-</span><span class=\"mtk1\"> </span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">begin</span><span class=\"mtk1\">();</span><span class=\"mtk4\"> // 인덱스 번호 접근</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk5\">*</span><span class=\"mtk1\">it;</span><span class=\"mtk4\">            // 원소 자체의 값에 접근</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span></code></pre>\n</li>\n<li>\n<p>cf) vector가 pair 자료로 이루어지는 경우, <code>emplace_back</code>을 <code>push_back</code>과 동일하게 사용할 수 있다.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk1\">vector</span><span class=\"mtk5\">&lt;</span><span class=\"mtk1\">pair</span><span class=\"mtk5\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk1\">,</span><span class=\"mtk9\">int</span><span class=\"mtk5\">&gt;&gt;</span><span class=\"mtk1\"> a;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk3\">a</span><span class=\"mtk1\">.</span><span class=\"mtk7\">emplace_back</span><span class=\"mtk1\">(</span><span class=\"mtk6\">1</span><span class=\"mtk1\">, </span><span class=\"mtk6\">2</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk3\">a</span><span class=\"mtk1\">.</span><span class=\"mtk7\">push_back</span><span class=\"mtk1\">( {</span><span class=\"mtk6\">3</span><span class=\"mtk1\">, </span><span class=\"mtk6\">4</span><span class=\"mtk1\">} );</span></span></code></pre>\n</li>\n</ul>\n<h4># Deque</h4>\n<ul>\n<li>double-ended queue의 약자로 양쪽으로 삽입과 제거가 가능한 큐이다.</li>\n<li><strong>선언</strong>: <deque> 헤더파일을 포함시킨 후에 deque&#x3C;자료> d를 통해 선언한다.</li>\n<li><strong>삽입</strong>: <code>push_front</code>와 <code>push_back</code>을 이용한다.</li>\n<li><strong>삭제</strong>: <code>pop_front</code>와 <code>pop_back</code>을 이용한다.</li>\n</ul>\n<h4># List</h4>\n<ul>\n<li>이중 연결 리스트(Doubly-linked list)를 의미한다.</li>\n<li>\n<p>사실 프로그래밍 대회에서는 잘 사용하지 않는 컨테이너에 해당된다.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">// 리스트 선언과 초기화</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">list</span><span class=\"mtk5\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> l </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> {</span><span class=\"mtk6\">2</span><span class=\"mtk1\">, </span><span class=\"mtk6\">1</span><span class=\"mtk1\">, </span><span class=\"mtk5\">-</span><span class=\"mtk6\">1</span><span class=\"mtk1\">, </span><span class=\"mtk6\">0</span><span class=\"mtk1\">, </span><span class=\"mtk5\">-</span><span class=\"mtk6\">2</span><span class=\"mtk1\">};</span></span></code></pre>\n</li>\n<li><strong>삽입</strong>: <code>push_back</code>과 <code>insert</code>을 이용한다: O(1)</li>\n<li><strong>삭제</strong>: <code>erase</code>를  이용한다: O(1)</li>\n<li>\n<p><strong>정렬</strong>: list 자체에 내장된 <code>sort</code>함수를 사용해야 한다 (&#x3C; algorithm>에 포함된 sort 함수를 사용하지 못함)</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk3\">l</span><span class=\"mtk1\">.</span><span class=\"mtk7\">sort</span><span class=\"mtk1\">();</span><span class=\"mtk4\">                      // 오름차순으로 정렬 {-2, -1, 0, 1, 2}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk3\">l</span><span class=\"mtk1\">.</span><span class=\"mtk7\">sort</span><span class=\"mtk1\">(</span><span class=\"mtk7\">greater</span><span class=\"mtk1\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk1\">&gt;());</span><span class=\"mtk4\">        // 알고리즘 greater를 사용하여 내림차순으로 정렬</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk3\">l</span><span class=\"mtk1\">.</span><span class=\"mtk7\">sort</span><span class=\"mtk1\">([](</span><span class=\"mtk9\">int</span><span class=\"mtk1\"> </span><span class=\"mtk9\">&amp;</span><span class=\"mtk3\">u</span><span class=\"mtk1\">, </span><span class=\"mtk9\">int</span><span class=\"mtk1\"> </span><span class=\"mtk9\">&amp;</span><span class=\"mtk3\">v</span><span class=\"mtk1\">) {</span><span class=\"mtk4\">    // compare 함수를 사용하여 절대값 기준으로 정렬</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">abs</span><span class=\"mtk1\">(u) </span><span class=\"mtk5\">&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk7\">abs</span><span class=\"mtk1\">(v);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">});</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk3\">l</span><span class=\"mtk1\">.</span><span class=\"mtk7\">reverse</span><span class=\"mtk1\">();</span><span class=\"mtk4\">            // 현재 상태를 거꾸로 뒤집는다</span></span></code></pre>\n</li>\n</ul>\n<h3>연관 컨테이너 (Associative Containers)</h3>\n<p><strong>순서가 없는 자료구조</strong> 들로 set, multiset, map, multimap이 존재한다.</p>\n<ul>\n<li>Binary Search Tree로 구현이 되어 있어 <strong>삽입, 삭제, 탐색이 모두 O(logN)</strong> 이 걸린다.</li>\n</ul>\n<h4># Set</h4>\n<ul>\n<li>집합을 나타낼 때 효과적인 자료구조이다. </li>\n<li>\n<p><strong>선언</strong>: <set> 헤더파일을 포함시킨 후에 set&#x3C;자료> s를 통해 선언한다.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk9\">#include</span><span class=\"mtk1\"> </span><span class=\"mtk12\">&lt;set&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">set</span><span class=\"mtk5\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> s;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">set</span><span class=\"mtk5\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> s </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> {</span><span class=\"mtk6\">1</span><span class=\"mtk1\">, </span><span class=\"mtk6\">1</span><span class=\"mtk1\">, </span><span class=\"mtk6\">2</span><span class=\"mtk1\">, </span><span class=\"mtk6\">3</span><span class=\"mtk1\">}</span><span class=\"mtk4\"> // 중복된 값을 인정하지 않기에 {1, 2, 3}으로만 구성</span></span></code></pre>\n</li>\n<li><strong>접근</strong>: 순서가 없기 때문에 []나 begin() + i와 같은 표현이 불가능하며, 대신 iterator를 이용한다.</li>\n<li>\n<p><strong>삽입</strong>: <code>insert</code>를 이용하여 내부가 정렬된 상태로 유지된다 (중복된 값은 허용되지 않기에 삽입 성공 실패 여부와 더불어 삽입 위치를 return한다)</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">// 삽입 (정렬된 상태를 유지한다)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">pair</span><span class=\"mtk5\">&lt;</span><span class=\"mtk1\">set&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk1\">&gt;::iterator, </span><span class=\"mtk9\">bool</span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> result </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">s</span><span class=\"mtk1\">.</span><span class=\"mtk7\">insert</span><span class=\"mtk1\">(</span><span class=\"mtk6\">4</span><span class=\"mtk1\">);</span><span class=\"mtk4\"> // 삽입위치와 성공여부를 return</span></span></code></pre>\n</li>\n<li>\n<p><strong>삭제</strong>: <code>erase</code>를 이용한다.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">// 삭제 (이터레이터로 접근하여 삭제)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk3\">s</span><span class=\"mtk1\">.</span><span class=\"mtk7\">erase</span><span class=\"mtk1\">(</span><span class=\"mtk3\">s</span><span class=\"mtk1\">.</span><span class=\"mtk7\">begin</span><span class=\"mtk1\">());</span><span class=\"mtk4\"> // 첫 번째 인덱스 삭제</span></span></code></pre>\n</li>\n<li><strong>크기</strong>: <code>size</code>를 이용한다.</li>\n<li>\n<p><strong>탐색</strong>: <code>find</code>를 사용하여 set에 어떤 값이 들어가있는지 없는지, 있다면 위치가 어디인지를 알 수 있고, <code>count</code>를 이용하는 방법도 있다.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk9\">auto</span><span class=\"mtk1\"> it </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">s</span><span class=\"mtk1\">.</span><span class=\"mtk7\">find</span><span class=\"mtk1\">(</span><span class=\"mtk6\">5</span><span class=\"mtk1\">);</span><span class=\"mtk4\"> // 없기 때문에 end()를 호출</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">// 일일히 find()를 하기보다는 수가 있는지 없는지 (1 or 0) 확인이 효율적</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk9\">int</span><span class=\"mtk1\"> i </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">1</span><span class=\"mtk1\">; i </span><span class=\"mtk5\">&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk6\">9</span><span class=\"mtk1\">; i</span><span class=\"mtk5\">++</span><span class=\"mtk1\">) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk3\">s</span><span class=\"mtk1\">.</span><span class=\"mtk7\">count</span><span class=\"mtk1\">(i);      </span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span></code></pre>\n</li>\n<li>\n<p><strong>순회</strong>: iterator와 begin &#x26; end 조합을 사용한다 (순서가 없기 때문에 begin() + i와 같은 표현은 불가능)</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">// 순회접근 (it++ 연산이 O(logN)으로 총 O(NlogN)이 걸림)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk9\">auto</span><span class=\"mtk1\"> it </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">s</span><span class=\"mtk1\">.</span><span class=\"mtk7\">begin</span><span class=\"mtk1\">(); it </span><span class=\"mtk5\">!=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">s</span><span class=\"mtk1\">.</span><span class=\"mtk7\">end</span><span class=\"mtk1\">(); it</span><span class=\"mtk5\">++</span><span class=\"mtk1\">) { </span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk5\">*</span><span class=\"mtk1\">it;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk9\">auto</span><span class=\"mtk1\"> x : s) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    x;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span></code></pre>\n</li>\n</ul>\n<h4># Multiset</h4>\n<ul>\n<li>set과 완벽하게 동일하나 같은 수 여러 개를 저장할 수 있는 점이 추가된 자료구조이다.</li>\n</ul>\n<h4># Map</h4>\n<ul>\n<li>key와 value로 이루어진 자료구조이다.</li>\n<li>\n<p><strong>선언</strong>: <map> 헤더파일을 포함시킨 후에 map&#x3C;자료> m를 통해 선언한다.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk9\">#include</span><span class=\"mtk1\"> </span><span class=\"mtk12\">&lt;map&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">map</span><span class=\"mtk5\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk1\">, </span><span class=\"mtk9\">int</span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> m;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">map</span><span class=\"mtk5\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk1\">, string</span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> m </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> { {</span><span class=\"mtk6\">1</span><span class=\"mtk1\">, </span><span class=\"mtk12\">&quot;슬라임&quot;</span><span class=\"mtk1\">}, {</span><span class=\"mtk6\">2</span><span class=\"mtk1\">, </span><span class=\"mtk12\">&quot;드래곤&quot;</span><span class=\"mtk1\">}};</span></span></code></pre>\n</li>\n<li><strong>삽입</strong>: <code>[key값]</code>을 이용하여 value를 쌍으로 삽입한다.</li>\n<li><strong>삭제</strong>: <code>erase(key값)</code>을 이용한다</li>\n<li><strong>크기</strong>: <code>size</code>를 이용한다.</li>\n<li><strong>접근</strong>: <code>[key값]</code>을 이용하여 접근할 수 있다 (단, 없는 경우에는 key값을 생성하는 문제 조심!) pair형태처럼 first와 second로도 접근 가능하다.</li>\n<li>\n<p><strong>탐색</strong>: 자료가 있는지 없는지 확인하는 경우에는 [key값]보다는 <code>count</code>를 사용하는 방법이 더 알맞다.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">// 접근</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">cout </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk3\">m</span><span class=\"mtk1\">[</span><span class=\"mtk6\">1</span><span class=\"mtk1\">];</span><span class=\"mtk4\"> // &quot;슬라임&quot;이 출력</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">              // 존재하지 않는 경우 0을 반환한다 (트리구조이기에 O(logN)이 걸림)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">// 순회 접근</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk9\">int</span><span class=\"mtk1\"> i </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">1</span><span class=\"mtk1\">; i </span><span class=\"mtk5\">&lt;=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">10</span><span class=\"mtk1\">; i</span><span class=\"mtk5\">++</span><span class=\"mtk1\">) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk3\">m</span><span class=\"mtk1\">[i]) {...}</span><span class=\"mtk4\"> // 없는 경우에는 key값을 생성하는 문제가 생김 </span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk9\">int</span><span class=\"mtk1\"> i </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">1</span><span class=\"mtk1\">; i </span><span class=\"mtk5\">&lt;=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">10</span><span class=\"mtk1\">; i</span><span class=\"mtk5\">++</span><span class=\"mtk1\">) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk3\">m</span><span class=\"mtk1\">.</span><span class=\"mtk7\">count</span><span class=\"mtk1\">(i)) {...}</span><span class=\"mtk4\"> // 자료가 있는지 없는지 체크는 이 방법이 더 효율적</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span></code></pre>\n</li>\n</ul>\n<h3>컨테이너 어댑터 (Container Adaptors)</h3>\n<p><strong>순차 컨테이너를 변형한 자료구조</strong> 로 stack, queue, priority_queue가 존재한다.</p>\n<h4># Stack</h4>\n<ul>\n<li>한쪽으로만 삽입과 삭제가 가능한 자료구조이다. </li>\n<li>기본적으로, deque를 형태로 구현되었으나, list 형태를 명시하여 구현도 가능하다.</li>\n<li><strong>선언</strong>: <stack> 헤더파일을 포함시킨 후에 stack&#x3C;자료> s를 통해 선언한다.</li>\n<li><strong>접근</strong>: <code>top</code>을 사용하여 O(1)로 연산이 가능하다.</li>\n<li><strong>삽입</strong> &#x26; <strong>삭제</strong>: <code>push</code>와 <code>pop</code>를 사용하여 O(1)로 연산이 가능하다.</li>\n<li>\n<p><strong>크기</strong>: <code>size</code>를 통해 크기를 알아보고, <code>empty</code>를 통해 스택이 비었는지 안 비었는지를 알아본다.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk9\">#include</span><span class=\"mtk1\"> </span><span class=\"mtk12\">&lt;stack&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">stack</span><span class=\"mtk5\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> s;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk3\">s</span><span class=\"mtk1\">.</span><span class=\"mtk7\">push</span><span class=\"mtk1\">(</span><span class=\"mtk6\">1</span><span class=\"mtk1\">); </span><span class=\"mtk3\">s</span><span class=\"mtk1\">.</span><span class=\"mtk7\">push</span><span class=\"mtk1\">(</span><span class=\"mtk6\">2</span><span class=\"mtk1\">); </span><span class=\"mtk3\">s</span><span class=\"mtk1\">.</span><span class=\"mtk7\">push</span><span class=\"mtk1\">(</span><span class=\"mtk6\">3</span><span class=\"mtk1\">);</span><span class=\"mtk4\"> // 차례대로 쌓이게끔 삽입</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">cout </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk3\">s</span><span class=\"mtk1\">.</span><span class=\"mtk7\">top</span><span class=\"mtk1\">();</span><span class=\"mtk4\">                 // 제일 위의 데이터를 출력</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk3\">s</span><span class=\"mtk1\">.</span><span class=\"mtk7\">pop</span><span class=\"mtk1\">();</span><span class=\"mtk4\">                         // 제일 위의 데이터를 삭제 </span></span></code></pre>\n</li>\n<li>pair 자료형을 사용시 emplace를 사용할 수도 있다.</li>\n</ul>\n<h4># Queue</h4>\n<ul>\n<li>한쪽으로 삽입하고 반대쪽으로 삭제가 가능한 자료구조이다. </li>\n<li>기본적으로, deque를 형태로 구현되었으나, list 형태를 명시하여 구현도 가능하다.</li>\n<li><strong>선언</strong>: <queue> 헤더파일을 포함시킨 후에 queue&#x3C;자료> q를 통해 선언한다.</li>\n<li><strong>접근</strong>: <code>front</code>와 <code>back</code>을 사용하여 O(1)로 연산이 가능하다.</li>\n<li><strong>삽입</strong> &#x26; <strong>삭제</strong>: <code>push</code>와 <code>pop</code>를 사용하여 O(1)로 연산이 가능하다.</li>\n<li>\n<p><strong>크기</strong>: <code>size</code>를 통해 크기를 알아보고, <code>empty</code>를 통해 스택이 비었는지 안 비었는지를 알아본다.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk9\">#include</span><span class=\"mtk1\"> </span><span class=\"mtk12\">&lt;queue&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">queue</span><span class=\"mtk5\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> q;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk3\">q</span><span class=\"mtk1\">.</span><span class=\"mtk7\">push</span><span class=\"mtk1\">(</span><span class=\"mtk6\">1</span><span class=\"mtk1\">); </span><span class=\"mtk3\">q</span><span class=\"mtk1\">.</span><span class=\"mtk7\">push</span><span class=\"mtk1\">(</span><span class=\"mtk6\">2</span><span class=\"mtk1\">); </span><span class=\"mtk3\">q</span><span class=\"mtk1\">.</span><span class=\"mtk7\">push</span><span class=\"mtk1\">(</span><span class=\"mtk6\">3</span><span class=\"mtk1\">);</span><span class=\"mtk4\">        // 차례대로 쌓이게끔 삽입</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">cout </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk3\">s</span><span class=\"mtk1\">.</span><span class=\"mtk7\">front</span><span class=\"mtk1\">() </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">&quot; : &quot;</span><span class=\"mtk1\"> </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk3\">s</span><span class=\"mtk1\">.</span><span class=\"mtk7\">back</span><span class=\"mtk1\">();</span><span class=\"mtk4\"> // 제일 앞과 뒤의 데이터를 출력</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk3\">s</span><span class=\"mtk1\">.</span><span class=\"mtk7\">pop</span><span class=\"mtk1\">();</span><span class=\"mtk4\">                                // 제일 앞의 데이터를 삭제 </span></span></code></pre>\n</li>\n<li>pair 자료형을 사용시 emplace를 사용할 수도 있다.</li>\n</ul>\n<h4># Priority Queue</h4>\n<ul>\n<li>큐와 똑같지만 가장 우선순위가 제일 높은 것(ex.숫자가 가장 큰 정수)이 먼저 나오는 자료구조이다.</li>\n<li>대표적으로 <strong>priority heap (최대힙)의 형태로 구현</strong> 된다.</li>\n<li>삽입 &#x26; 삭제: <code>push</code>와 <code>pop</code>을 이용한다.</li>\n<li>접근: 큐이지만 <code>top</code>을 사용하여 가장 큰 수가 위로 올라온다.</li>\n<li>\n<p><strong>최대힙</strong>: 내림차순으로 정렬되어 삽입이 되고, 큰 순서대로 나온다.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk1\">vector</span><span class=\"mtk5\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> v </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> {</span><span class=\"mtk6\">1</span><span class=\"mtk1\">, </span><span class=\"mtk6\">3</span><span class=\"mtk1\">, </span><span class=\"mtk6\">2</span><span class=\"mtk1\">};</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">// 벡터에 있는 원소 우선순위 큐에도 삽입 (최대힙)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">priority_queue</span><span class=\"mtk5\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> q1;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk9\">int</span><span class=\"mtk1\"> x : v) { </span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk3\">q1</span><span class=\"mtk1\">.</span><span class=\"mtk7\">push</span><span class=\"mtk1\">(x);</span><span class=\"mtk4\"> // {3, 2, 1} 큰 순서대로 정렬이 됨</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">} </span></span></code></pre>\n</li>\n<li>\n<p><strong>최소힙</strong>: <code>priority_queue&#x3C;자료형, vector&#x3C;자료형>, greater&#x3C;자료형>></code>으로 선언하면 된다.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">// 작은 순서대로 정렬이 됨 (최소힙)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">priority_queue</span><span class=\"mtk5\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk1\">, vector</span><span class=\"mtk5\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\">, greater</span><span class=\"mtk5\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk5\">&gt;&gt;</span><span class=\"mtk1\"> q2; </span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk9\">int</span><span class=\"mtk1\"> x : v) { </span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk3\">q2</span><span class=\"mtk1\">.</span><span class=\"mtk7\">push</span><span class=\"mtk1\">(x); </span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span></code></pre>\n</li>\n</ul>\n<h4># Bitset</h4>\n<ul>\n<li>\n<p>vector<bool>와 같은 형태의 자료구조이다.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk1\">bitset</span><span class=\"mtk5\">&lt;</span><span class=\"mtk6\">8</span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> b1 ;</span><span class=\"mtk4\"> // 0, 0, 0, 0, 0, 0, 0, 0</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">bitset</span><span class=\"mtk1\">&lt;</span><span class=\"mtk6\">10</span><span class=\"mtk1\">&gt; </span><span class=\"mtk7\">b2</span><span class=\"mtk1\">(</span><span class=\"mtk6\">88</span><span class=\"mtk1\">);</span><span class=\"mtk4\"> // 0, 0, 0, 1, 0, 1, 1, 0, 0, 0</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">bitset</span><span class=\"mtk1\">&lt;</span><span class=\"mtk6\">8</span><span class=\"mtk1\">&gt; </span><span class=\"mtk7\">b3</span><span class=\"mtk1\">(</span><span class=\"mtk12\">&quot;10110&quot;</span><span class=\"mtk1\">);</span><span class=\"mtk4\"> // 0, 0, 0, 1, 0, 1, 1, 0</span></span></code></pre>\n</li>\n<li><strong>접근</strong>: <code>[]</code> 또는 <code>test</code>를 이용한다.</li>\n<li>\n<p><strong>값 바꾸기</strong>: </p>\n<ul>\n<li><code>set</code>으로 1로 바꾸기</li>\n<li><code>reset</code>으로 0으로 바꾸기</li>\n<li><code>flip</code>으로 현재 인덱스의 값을 뒤집기</li>\n</ul>\n</li>\n<li><strong>값 확인</strong>: <code>all</code>로 모든 bit가 1인지를 확인하고, <code>any</code>로 1인 bit가 하나라도 존재하는지를 확인하고, <code>none</code>으로 모든 bit가 0인지를 확인할 수 있다.</li>\n<li><strong>개수 세기</strong>: <code>count</code>로 1인 bit의 개수를 센다.</li>\n<li>\n<p><strong>bit 연산</strong>: <code>&#x26;</code>, <code>|</code>, <code>^</code>, <code>~</code>, <code>&#x3C;&#x3C;</code>, <code>>></code>의 연산이 가능하다.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk1\">cout </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> (b1 </span><span class=\"mtk5\">&amp;</span><span class=\"mtk1\"> b2);</span><span class=\"mtk4\"> // AND 연산</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">cout </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> (b1 </span><span class=\"mtk5\">|</span><span class=\"mtk1\"> b2);</span><span class=\"mtk4\"> // OR 연산</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">cout </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> (b1 </span><span class=\"mtk5\">^</span><span class=\"mtk1\"> b2);</span><span class=\"mtk4\"> // XOR 연산</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">cout </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk5\">~</span><span class=\"mtk1\">(b1);</span><span class=\"mtk4\">     // NOT 연산</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">cout </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> (b1 </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk6\">2</span><span class=\"mtk1\">);</span><span class=\"mtk4\"> // SHIFT LEFT 연산</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">cout </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> (b1 </span><span class=\"mtk5\">&gt;&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk6\">2</span><span class=\"mtk1\">);</span><span class=\"mtk4\"> // SHIFT RIGHT 연산</span></span></code></pre>\n</li>\n</ul>\n<style class=\"vscode-highlight-styles\">\n  :root {\n  --vscode-highlight-padding-v: 1rem;\n  --vscode-highlight-padding-h: 1.5rem;\n  --vscode-highlight-padding-top: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-right: var(--vscode-highlight-padding-h);\n  --vscode-highlight-padding-bottom: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-left: var(--vscode-highlight-padding-h);\n  --vscode-highlight-border-radius: 8px;\n\n  --vscode-highlight-line-highlighted-background-color: transparent;\n  --vscode-highlight-line-highlighted-border-width: 4px;\n  --vscode-highlight-line-highlighted-border-color: transparent;\n}\n\n.vscode-highlight {\n  overflow: auto;\n  -webkit-overflow-scrolling: touch;\n  padding-top: 1rem;\n  padding-top: var(--vscode-highlight-padding-top);\n  padding-bottom: 1rem;\n  padding-bottom: var(--vscode-highlight-padding-bottom);\n  border-radius: 8px;\n  border-radius: var(--vscode-highlight-border-radius);\n  font-feature-settings: normal;\n}\n\n.vscode-highlight-code {\n  display: inline-block;\n  min-width: 100%;\n}\n\n.vscode-highlight-line {\n  display: inline-block;\n  box-sizing: border-box;\n  width: 100%;\n  padding-left: 1.5rem;\n  padding-left: var(--vscode-highlight-padding-left);\n  padding-right: 1.5rem;\n  padding-right: var(--vscode-highlight-padding-right);\n}\n\n.vscode-highlight-line-highlighted {\n  background-color: var(--vscode-highlight-line-highlighted-background-color);\n  box-shadow: inset var(--vscode-highlight-line-highlighted-border-width) 0 0 0 var(--vscode-highlight-line-highlighted-border-color);\n}\n\n  .andromeda {\nbackground-color: #23262E;\ncolor: #D5CED9;\n}\n\n.andromeda .mtk1 { color: #D5CED9; }\n.andromeda .mtk2 { color: #23262E; }\n.andromeda .mtk3 { color: #00E8C6; }\n.andromeda .mtk4 { color: #5F6167; }\n.andromeda .mtk5 { color: #EE5D43; }\n.andromeda .mtk6 { color: #F39C12; }\n.andromeda .mtk7 { color: #FFE66D; }\n.andromeda .mtk8 { color: #F92672; }\n.andromeda .mtk9 { color: #C74DED; }\n.andromeda .mtk10 { color: #7CB7FF; }\n.andromeda .mtk11 { color: #FF00AA; }\n.andromeda .mtk12 { color: #96E072; }\n.andromeda .mtki { font-style: italic; }\n.andromeda .mtkb { font-weight: bold; }\n.andromeda .mtku { text-decoration: underline; text-underline-position: under; }\n</style>","frontmatter":{"title":"[백준] STL 03. 컨테이너","date":"2019-01-27","tags":["백준","Cpp","STL"]}}},"pageContext":{"slug":"/Baekjoon/0_STL/3_stl_containers/"}}}