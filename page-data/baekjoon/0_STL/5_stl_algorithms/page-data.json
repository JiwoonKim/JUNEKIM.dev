{"componentChunkName":"component---src-components-templates-blog-post-js","path":"/Baekjoon/0_STL/5_stl_algorithms/","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<p>Standard Template Library (STL)는 알고리즘, 컨테이너, 함수, 이터레이터로 이루어져 있으며 그 중 알고리즘을 정리.</p>\n</blockquote>\n<h3>알고리즘 (Algorithm)</h3>\n<p><a href=\"#count\">count</a>, <a href=\"#find\">find</a>, <a href=\"#fill\">fill</a>, <a href=\"#reverse\">reverse</a>, <a href=\"#rotate\">rotate</a>, <a href=\"#swap\">swap</a>, <a href=\"#unique\">unique</a>, <a href=\"#sort\">sort</a>, <a href=\"#stable_sort\">stable_sort</a>, <a href=\"#binary_search\">binary_search</a>, <a href=\"#lower_bound___upper_bound\">lower_ bound, upper_ bound</a>, <a href=\"#min___max\">min, max</a>, <a href=\"#min_element___max_element\">min_ element, max_ element</a>, <a href=\"#next_permutation\">next_ permutation</a></p>\n<ul>\n<li><code>#include &#x3C;algorithm></code></li>\n</ul>\n<h4>Count</h4>\n<p>시간복잡도: O(N)</p>\n<ul>\n<li>\n<p><code>count(begin, end, value)</code>: [begin, end)에 포함되어 있는 원소 중에서 value의 개수를 찾는다.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk1\">vector</span><span class=\"mtk5\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> v </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> {</span><span class=\"mtk6\">1</span><span class=\"mtk1\">, </span><span class=\"mtk6\">2</span><span class=\"mtk1\">, </span><span class=\"mtk6\">2</span><span class=\"mtk1\">, </span><span class=\"mtk6\">3</span><span class=\"mtk1\">, </span><span class=\"mtk6\">4</span><span class=\"mtk1\">, </span><span class=\"mtk6\">5</span><span class=\"mtk1\">};</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk9\">int</span><span class=\"mtk1\"> i </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">1</span><span class=\"mtk1\">; i </span><span class=\"mtk5\">&lt;=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">5</span><span class=\"mtk1\">; i</span><span class=\"mtk5\">++</span><span class=\"mtk1\">) { </span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    cout </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> i </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">&quot;의 개수: &quot;</span><span class=\"mtk1\"> </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk7\">count</span><span class=\"mtk1\">(</span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">begin</span><span class=\"mtk1\">(), </span><span class=\"mtk3\">b</span><span class=\"mtk1\">.</span><span class=\"mtk7\">end</span><span class=\"mtk1\">(), i);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span></code></pre>\n</li>\n<li>\n<p><code>count_if(begin, end, p)</code>: [begin, end)에 포함되어 있는 원소 중에서 조건 p에 해당하는 것에 개수를 찾는다.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk9\">int</span><span class=\"mtk1\"> even </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">count_if</span><span class=\"mtk1\">(</span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">begin</span><span class=\"mtk1\">(), </span><span class=\"mtk3\">b</span><span class=\"mtk1\">.</span><span class=\"mtk7\">end</span><span class=\"mtk1\">(), [](</span><span class=\"mtk9\">int</span><span class=\"mtk1\"> </span><span class=\"mtk3\">x</span><span class=\"mtk1\">) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> x </span><span class=\"mtk5\">%</span><span class=\"mtk1\"> </span><span class=\"mtk6\">2</span><span class=\"mtk1\"> </span><span class=\"mtk5\">==</span><span class=\"mtk1\"> </span><span class=\"mtk6\">0</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">});</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">cout </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">&quot;짝수의 개수: &quot;</span><span class=\"mtk1\"> </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> even;</span></span></code></pre>\n</li>\n</ul>\n<h4>Find</h4>\n<p>시간복잡도: O(N)</p>\n<ul>\n<li>\n<p><code>find(begin, end, value)</code>: [begin, end)에 포함되어 있는 원소 중에서 첫번째 value의 이터레이터를 반환한다 (찾는 것이 없는 경우에는 end를 반환한다)</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk1\">vector</span><span class=\"mtk5\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> v </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> {</span><span class=\"mtk6\">1</span><span class=\"mtk1\">, </span><span class=\"mtk6\">2</span><span class=\"mtk1\">, </span><span class=\"mtk6\">2</span><span class=\"mtk1\">, </span><span class=\"mtk6\">3</span><span class=\"mtk1\">, </span><span class=\"mtk6\">4</span><span class=\"mtk1\">, </span><span class=\"mtk6\">5</span><span class=\"mtk1\">};</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">auto</span><span class=\"mtk1\"> it </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">find</span><span class=\"mtk1\">(</span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">begin</span><span class=\"mtk1\">(), </span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">end</span><span class=\"mtk1\">(), </span><span class=\"mtk6\">2</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">// end()값과 같으면 벡터에 원소가 없음</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk9\">auto</span><span class=\"mtk1\"> </span><span class=\"mtk5\">==</span><span class=\"mtk1\"> </span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">end</span><span class=\"mtk1\">()) { cout </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">&quot;찾을 수 없음</span><span class=\"mtk5\">\\n</span><span class=\"mtk12\">&quot;</span><span class=\"mtk1\">; }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">else</span><span class=\"mtk1\"> {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">    // 인덱스는 begin()값을 빼야지 계산 가능</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    cout </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> (it </span><span class=\"mtk5\">-</span><span class=\"mtk1\"> </span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">begin</span><span class=\"mtk1\">());</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span></code></pre>\n</li>\n<li>\n<p><code>find_if(begin, end, value)</code>: [begin, end)에 포함되어 있는 원소 중에서 조건 p에 해당하는 것의 첫번째 이터레이터를 반환한다.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk9\">auto</span><span class=\"mtk1\"> even </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">find_if</span><span class=\"mtk1\">(</span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">begin</span><span class=\"mtk1\">(), </span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">end</span><span class=\"mtk1\">() [](</span><span class=\"mtk9\">int</span><span class=\"mtk1\"> x ) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> x </span><span class=\"mtk5\">%</span><span class=\"mtk1\"> </span><span class=\"mtk6\">2</span><span class=\"mtk1\"> </span><span class=\"mtk5\">==</span><span class=\"mtk1\"> </span><span class=\"mtk6\">0</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">});</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">cout </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">&quot;첫 번째 짝수: &quot;</span><span class=\"mtk1\"> </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> (even </span><span class=\"mtk5\">-</span><span class=\"mtk1\"> </span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">begin</span><span class=\"mtk1\">()) </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">&quot;</span><span class=\"mtk5\">\\n</span><span class=\"mtk12\">&quot;</span><span class=\"mtk1\">;</span></span></code></pre>\n</li>\n</ul>\n<h4>Fill</h4>\n<p>시간복잡도: O(N)</p>\n<ul>\n<li>\n<p><code>fill(begin, end, value)</code>: [begin, end)를 value의 값으로 채운다.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk1\">vector</span><span class=\"mtk5\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> v </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> {</span><span class=\"mtk6\">1</span><span class=\"mtk1\">, </span><span class=\"mtk6\">2</span><span class=\"mtk1\">, </span><span class=\"mtk6\">3</span><span class=\"mtk1\">, </span><span class=\"mtk6\">4</span><span class=\"mtk1\">, </span><span class=\"mtk6\">5</span><span class=\"mtk1\">};</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">fill</span><span class=\"mtk1\">(</span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">begin</span><span class=\"mtk1\">(), </span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">end</span><span class=\"mtk1\">(), </span><span class=\"mtk6\">0</span><span class=\"mtk1\">);</span><span class=\"mtk4\"> // {0, 0, 0, 0, 0}으로 설정</span></span></code></pre>\n</li>\n</ul>\n<h4>Reverse</h4>\n<p>시간복잡도: O(N)</p>\n<ul>\n<li>\n<p><code>reverse(begin, end)</code>: [begin, end)의 순서를 역순으로 만든다.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk1\">vector</span><span class=\"mtk5\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> v </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> {</span><span class=\"mtk6\">1</span><span class=\"mtk1\">, </span><span class=\"mtk6\">2</span><span class=\"mtk1\">, </span><span class=\"mtk6\">3</span><span class=\"mtk1\">, </span><span class=\"mtk6\">4</span><span class=\"mtk1\">, </span><span class=\"mtk6\">5</span><span class=\"mtk1\">};</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">reverse</span><span class=\"mtk1\">(</span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">begin</span><span class=\"mtk1\">(), </span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">end</span><span class=\"mtk1\">());</span><span class=\"mtk4\"> // {5, 4, 3, 2, 1}으로 바뀜</span></span></code></pre>\n</li>\n</ul>\n<h4>Rotate</h4>\n<p>시간복잡도: O(N)</p>\n<ul>\n<li>\n<p><code>rotate(begin, mid, end)</code>: [begin, end)를 mid를 기준으로 왼쪽으로 회전시킨다 (a.k.a shift: <strong>mid 값이 begin에 들어가고</strong>, 순서대로 end-1 값까지 들어간다)</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk1\">vector</span><span class=\"mtk5\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> v </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> {</span><span class=\"mtk6\">1</span><span class=\"mtk1\">, </span><span class=\"mtk6\">2</span><span class=\"mtk1\">, </span><span class=\"mtk6\">3</span><span class=\"mtk1\">, </span><span class=\"mtk6\">4</span><span class=\"mtk1\">, </span><span class=\"mtk6\">5</span><span class=\"mtk1\">};</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">int</span><span class=\"mtk1\"> n </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">size</span><span class=\"mtk1\">();</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk9\">int</span><span class=\"mtk1\"> i </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">0</span><span class=\"mtk1\">; i </span><span class=\"mtk5\">&lt;</span><span class=\"mtk1\"> n; i</span><span class=\"mtk5\">++</span><span class=\"mtk1\">) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">    // 차례대로 {2, 3, 4, 5, 1}부터 다시 {1, 2, 3, 4, 5}까지 회전</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk7\">rotate</span><span class=\"mtk1\">(</span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">begin</span><span class=\"mtk1\">(), </span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">begin</span><span class=\"mtk1\">()</span><span class=\"mtk5\">+</span><span class=\"mtk6\">1</span><span class=\"mtk1\">, </span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">end</span><span class=\"mtk1\">());</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span></code></pre>\n</li>\n</ul>\n<h4>Swap</h4>\n<ul>\n<li>\n<p><code>swap(a, b)</code>: a와 b에 들어있던 값을 바꾼다.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk9\">int</span><span class=\"mtk1\"> a </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">10</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">int</span><span class=\"mtk1\"> b </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">20</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">swap</span><span class=\"mtk1\">(a, b);</span><span class=\"mtk4\"> // a = 20, b = 10으로 바뀜</span></span></code></pre>\n</li>\n</ul>\n<h4>Unique</h4>\n<ul>\n<li><code>unique(begin, end)</code>: [begin, end) 구간에서 연속되는 중복 값들은 하나만 남기고 삭제한다.</li>\n<li>\n<p>좌표압축(범위 내에서 값들이 중구난방일 때 1부터 n까지 정렬할 때) 유용하게 쓰인다.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk1\">vector</span><span class=\"mtk5\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> v </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> {</span><span class=\"mtk6\">1</span><span class=\"mtk1\">, </span><span class=\"mtk6\">1</span><span class=\"mtk1\">, </span><span class=\"mtk6\">1</span><span class=\"mtk1\">, </span><span class=\"mtk6\">2</span><span class=\"mtk1\">, </span><span class=\"mtk6\">3</span><span class=\"mtk1\">, </span><span class=\"mtk6\">1</span><span class=\"mtk1\">, </span><span class=\"mtk6\">1</span><span class=\"mtk1\">, </span><span class=\"mtk6\">2</span><span class=\"mtk1\">};</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">auto</span><span class=\"mtk1\"> last </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">unique</span><span class=\"mtk1\">(</span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">begin</span><span class=\"mtk1\">(), </span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">end</span><span class=\"mtk1\">());</span><span class=\"mtk4\"> // {1, 2, 3, 1, 2, 1, 1, 2}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">cout </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> last;</span><span class=\"mtk4\"> // last는 {1, 2, 3, 1, 2} 다음의 이터레이터 반환</span></span></code></pre>\n</li>\n<li>실제로는 연속된 값들이 삭제되는 것이 아니라 중복된 값들을 덮어씌우거나 시프트하는 방식으로 값들을 하나씩만 정렬하고 나머지는 뒤에 그대로 갖다 붙이기 때문에 <strong>사용 후 erase를 통해 뒤에 값들을 삭제하는 추가적인 과정을 거쳐야 한다</strong>.</li>\n<li>범위에서 각 값들을 하나씩만 남기고 싶다면 <strong>정렬된 상태로 사용</strong> 하는 것이 좋다. </li>\n<li>\n<p>이 때, unique의 return 값 (= 중복이 끝나는 부분의 이터레이터)를 사용한다.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">// 중복이 끝나는 시점부터 끝까지 삭제</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">erase</span><span class=\"mtk1\">(last, </span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">end</span><span class=\"mtk1\">());</span><span class=\"mtk4\"> // {1, 2, 3, 1, 2}만 남는다</span></span></code></pre>\n</li>\n</ul>\n<h4>Sort</h4>\n<ul>\n<li>\n<p><code>sort(begin, end)</code>: [begin, end)를 <strong>오름차순</strong>('&#x3C;' 기준)으로 정렬한다.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">// default 오름차순으로 정렬하기</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">vector</span><span class=\"mtk5\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> v </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> { </span><span class=\"mtk6\">5</span><span class=\"mtk1\">, </span><span class=\"mtk6\">3</span><span class=\"mtk1\">, </span><span class=\"mtk6\">2</span><span class=\"mtk1\">, </span><span class=\"mtk6\">1</span><span class=\"mtk1\">, </span><span class=\"mtk6\">4</span><span class=\"mtk1\">};</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">sort</span><span class=\"mtk1\">(</span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">begin</span><span class=\"mtk1\">(), </span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">end</span><span class=\"mtk1\">());</span><span class=\"mtk4\"> // {1, 2, 3, 4, 5}의 오름차순으로 정렬됨</span></span></code></pre>\n</li>\n<li>\n<p><code>sort(begin, end, cmp)</code>: [begin, end)를 <strong>cmp</strong> 비교함수를 만들어 그 기준으로 정렬한다.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk1\">vector</span><span class=\"mtk5\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> v </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> { </span><span class=\"mtk6\">5</span><span class=\"mtk1\">, </span><span class=\"mtk6\">3</span><span class=\"mtk1\">, </span><span class=\"mtk6\">2</span><span class=\"mtk1\">, </span><span class=\"mtk6\">1</span><span class=\"mtk1\">, </span><span class=\"mtk6\">4</span><span class=\"mtk1\">};</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">// 내림차순으로 정렬하는 다양한 방법: {5, 4, 3, 2, 1}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">sort</span><span class=\"mtk1\">(</span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">begin</span><span class=\"mtk1\">(), v, </span><span class=\"mtk7\">end</span><span class=\"mtk1\">(), </span><span class=\"mtk7\">greater</span><span class=\"mtk1\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk1\">&gt;()); </span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">// 비교함수를 만들어 정렬하기</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">bool</span><span class=\"mtk1\"> </span><span class=\"mtk7\">cmp</span><span class=\"mtk1\">(</span><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk9\">int</span><span class=\"mtk1\"> </span><span class=\"mtk9\">&amp;</span><span class=\"mtk3\">u</span><span class=\"mtk1\">, </span><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk9\">int</span><span class=\"mtk1\"> </span><span class=\"mtk9\">&amp;</span><span class=\"mtk3\">v</span><span class=\"mtk1\">) {</span><span class=\"mtk4\"> // u가 앞에 v 앞에 있는 것이</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> u </span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> v;</span><span class=\"mtk4\">                      // u가 v보다 클 때만 허용이 됨을 의미</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">sort</span><span class=\"mtk1\">(</span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">begin</span><span class=\"mtk1\">(), </span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">end</span><span class=\"mtk1\">(), cmp);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">// 비교함수를 람다함수로 정의하여 정렬하기</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">sort</span><span class=\"mtk1\">(</span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">begin</span><span class=\"mtk1\">(), </span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">end</span><span class=\"mtk1\">(), [](</span><span class=\"mtk9\">int</span><span class=\"mtk1\"> </span><span class=\"mtk3\">u</span><span class=\"mtk1\">, </span><span class=\"mtk9\">int</span><span class=\"mtk1\"> </span><span class=\"mtk3\">v</span><span class=\"mtk1\">) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> u </span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> v;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">});</span></span></code></pre>\n</li>\n<li>백준 문제: 단어정렬, 좌료정렬하기 ... </li>\n<li>pair 또는 tuple로 만들어서 비교하는 것도 좋은 방법 (그러면 한번에 비교하여 정렬 가능)! (위 두 문제 참고)</li>\n</ul>\n<h4>Stable_sort</h4>\n<ul>\n<li><code>stable_sort(begin, end)</code>: sort와 동일하나, 같은 것이 있는 경우에 정렬하기 전의 순서를 유지한다 (sort는 유지를 보장할 수 없음)</li>\n<li><code>stable_sort(begin, end, cmp)</code>: 마찬가지.</li>\n<li><em>버블 정렬(bubble sort)</em> 와 <em>머지 소트(merge sort)</em> 가 대표적인 stable sort에 해당한다.</li>\n</ul>\n<h4>Binary_search</h4>\n<ul>\n<li>\n<p><code>binary_search(begin, end, value)</code>: [begin, end) 범위 내에서 value의 값을 <strong>이분탐색</strong> 하여, 찾으면 true, 못 찾으면 false를 반환한다.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk1\">vector</span><span class=\"mtk5\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> v </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> {</span><span class=\"mtk6\">1</span><span class=\"mtk1\">, </span><span class=\"mtk6\">2</span><span class=\"mtk1\">, </span><span class=\"mtk6\">5</span><span class=\"mtk1\">};</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk9\">int</span><span class=\"mtk1\"> i </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">1</span><span class=\"mtk1\">; i </span><span class=\"mtk5\">&lt;=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">5</span><span class=\"mtk1\">; i</span><span class=\"mtk5\">++</span><span class=\"mtk1\">) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">    // 있으면 true, 없으면 false 반환</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    cout </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> i </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">&quot; : &quot;</span><span class=\"mtk1\"> </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk7\">binary_search</span><span class=\"mtk1\">(</span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk3\">begin</span><span class=\"mtk1\">, </span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">end</span><span class=\"mtk1\">(), i); </span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">} </span></span></code></pre>\n</li>\n<li>\n<p>주의:</p>\n<ul>\n<li><strong>정렬된 상태</strong> 로 사용했을 때 효과가 있다.</li>\n<li>찾는 value의 인덱스 값은 알 수 없으며, <strong>단순히 value가 존재하는지 안 하는지의 여부만 알 수 있다</strong>. (위치는 <code>lower_bound</code>나 <code>upper_bound</code>를 사용하면 된다)</li>\n</ul>\n</li>\n<li><code>binary_search(begin, end, value, cmp)</code>: [begin, end) 범위 내에서 value의 값을 cmp의 기준으로, 찾으면 true, 못 찾으면 false를 반환한다.</li>\n</ul>\n<h4>Lower_ bound &#x26; Upper_ bound</h4>\n<ul>\n<li><code>lower_bound(begin, end, value)</code>: [begin, end) 범위 내에서 <strong>value 보다 작지 않은 첫번째 이터레이터를 반환</strong> 한다.</li>\n<li><code>upper_bound(begin, end, value)</code>: [begin, end) 범위 내에서 <strong>value 보다 큰 첫번째 이터레이터를 반환</strong> 한다.</li>\n<li>범위 내에 찾는 값(모두 값보다 작을 경우)이 <strong>존재하지 않는다면, end 값을 반환</strong> 한다</li>\n<li><strong>정렬 된 상태에서 사용</strong>해야 효과가 있다!</li>\n<li>\n<p><strong>binary_search를 통해 구현</strong> 이 되어 있어, 어떤 값의 <strong>위치(by 이터레이터)</strong> 를 알고 싶을 때 사용한다.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk1\">vector</span><span class=\"mtk5\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> v </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> {</span><span class=\"mtk6\">1</span><span class=\"mtk1\">, </span><span class=\"mtk6\">2</span><span class=\"mtk1\">, </span><span class=\"mtk6\">3</span><span class=\"mtk1\">, </span><span class=\"mtk6\">3</span><span class=\"mtk1\">, </span><span class=\"mtk6\">4</span><span class=\"mtk1\">};</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">// value의 값이 하나만 존재하면, lower_bound는 그 자리를, upper_bound는 그 다음 인덱스를 가르킴 </span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">auto</span><span class=\"mtk1\"> l </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">lower_bound</span><span class=\"mtk1\">(</span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">begin</span><span class=\"mtk1\">(), </span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">end</span><span class=\"mtk1\">(), </span><span class=\"mtk6\">1</span><span class=\"mtk1\">);</span><span class=\"mtk4\"> // 1자리 (0 인덱스)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">auto</span><span class=\"mtk1\"> r </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">upper_bound</span><span class=\"mtk1\">(</span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">begin</span><span class=\"mtk1\">(), </span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">end</span><span class=\"mtk1\">(), </span><span class=\"mtk6\">1</span><span class=\"mtk1\">);</span><span class=\"mtk4\"> // 2 자리 (1 인덱스)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">// value의 값이 중복되면, lower_bound는 처음 자리를, upper_bound는 그 다음 큰 숫자의 인덱스를 가르킴 </span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">auto</span><span class=\"mtk1\"> l </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">lower_bound</span><span class=\"mtk1\">(</span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">begin</span><span class=\"mtk1\">(), </span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">end</span><span class=\"mtk1\">(), </span><span class=\"mtk6\">3</span><span class=\"mtk1\">);</span><span class=\"mtk4\"> // 3자리 (2 인덱스)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">auto</span><span class=\"mtk1\"> r </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">upper_bound</span><span class=\"mtk1\">(</span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">begin</span><span class=\"mtk1\">(), </span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">end</span><span class=\"mtk1\">(), </span><span class=\"mtk6\">3</span><span class=\"mtk1\">);</span><span class=\"mtk4\"> // 4 자리 (4 인덱스)</span></span></code></pre>\n</li>\n<li>\n<p>정렬된 상태에서 <strong>value의 개수</strong> 를 찾는데 사용할 수도 있다 (<code>equal_range</code>를 사용하면 더 쉽게 한 번에 구할 수 있다!)</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk1\">vector</span><span class=\"mtk5\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> v </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> {</span><span class=\"mtk6\">1</span><span class=\"mtk1\">, </span><span class=\"mtk6\">2</span><span class=\"mtk1\">, </span><span class=\"mtk6\">3</span><span class=\"mtk1\">, </span><span class=\"mtk6\">3</span><span class=\"mtk1\">, </span><span class=\"mtk6\">4</span><span class=\"mtk1\">};</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">auto</span><span class=\"mtk1\"> l </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">lower_bound</span><span class=\"mtk1\">(</span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">begin</span><span class=\"mtk1\">(), </span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">end</span><span class=\"mtk1\">(), </span><span class=\"mtk6\">3</span><span class=\"mtk1\">);</span><span class=\"mtk4\"> // 3자리 (2 인덱스)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">auto</span><span class=\"mtk1\"> r </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">upper_bound</span><span class=\"mtk1\">(</span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">begin</span><span class=\"mtk1\">(), </span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">end</span><span class=\"mtk1\">(), </span><span class=\"mtk6\">3</span><span class=\"mtk1\">);</span><span class=\"mtk4\"> // 4 자리 (4 인덱스)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">int</span><span class=\"mtk1\"> n </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> l </span><span class=\"mtk5\">-</span><span class=\"mtk1\"> r;</span><span class=\"mtk4\"> // 4 - 2 = 2개</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">// 한 번에 lower_bound와 upper_bound를 구해 pair 형태로 반환</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk7\">equal_range</span><span class=\"mtk1\">(</span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">begin</span><span class=\"mtk1\">(), </span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">end</span><span class=\"mtk1\">(), </span><span class=\"mtk6\">3</span><span class=\"mtk1\">);</span></span></code></pre>\n</li>\n</ul>\n<h4>Min &#x26; Max</h4>\n<ul>\n<li>\n<p><code>min(a, b)</code> &#x26; <code>max(a, b)</code>: 각 각 두 수 중 최소값, 최대값을 반환한다. (두 수만 비교)</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">// 최소값과 최대값 구하기 (두 수 비교)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">int</span><span class=\"mtk1\"> a </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">10</span><span class=\"mtk1\">, b </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">20</span><span class=\"mtk1\">,</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">cout </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk7\">min</span><span class=\"mtk1\">(a, b) </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk7\">max</span><span class=\"mtk1\">(a, b);</span></span></code></pre>\n</li>\n<li>\n<p><code>min(initializer_list)</code> &#x26; <code>max(initializer_list)</code>:</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk4\">// list 형태로 입력값을 주어 최소값과 최대값 구하기</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">int</span><span class=\"mtk1\"> a </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">10</span><span class=\"mtk1\">, b </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">20</span><span class=\"mtk1\">, c </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">30</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">cout </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk7\">min</span><span class=\"mtk1\">({a, b, c}) </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk7\">max</span><span class=\"mtk1\">({a, b, c});</span></span></code></pre>\n</li>\n<li>\n<p>compare 함수를 정의하여 사용할 수도 있다.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk1\">string u </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk12\">&quot;long string&quot;</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">string v </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk12\">&quot;short&quot;</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">// 문자열의 최소값은 첫번째 값의 ascii 값 (사전순)으로 찾음</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">cout </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk7\">min</span><span class=\"mtk1\">(u, v);</span><span class=\"mtk4\"> // </span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">// 비교 함수를 정의하여 사용하면, 길이 비교하여 최소값 찾을 수 있음</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">cout </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk7\">min</span><span class=\"mtk1\">(u, v [](string u, string v) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> </span><span class=\"mtk3\">u</span><span class=\"mtk1\">.</span><span class=\"mtk7\">size</span><span class=\"mtk1\">() </span><span class=\"mtk5\">&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">size</span><span class=\"mtk1\">();</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">})</span></span></code></pre>\n</li>\n<li><code>minmax(a, b)</code>, <code>minmax(a, b, cmp)</code>, <code>minmax(initializer_list)</code>, <code>minmax(initializer_list, cmp)</code> 사용을 통해 동시에 min과 max값을 구할 수 있다.</li>\n</ul>\n<h4>Min_ element &#x26; Max_ element</h4>\n<ul>\n<li><code>min_element(begin, end)</code>: [begin, end)에서 최소값의 <strong>이터레이터</strong> 를 구한다.</li>\n<li>\n<p><code>max_element(begin, end)</code>: [begin, end)에서 최대값의 <strong>이터레이터</strong> 를 구한다.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk1\">vector</span><span class=\"mtk5\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> v </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> {</span><span class=\"mtk6\">4</span><span class=\"mtk1\">, </span><span class=\"mtk6\">2</span><span class=\"mtk1\">, </span><span class=\"mtk6\">1</span><span class=\"mtk1\">, </span><span class=\"mtk6\">5</span><span class=\"mtk1\">, </span><span class=\"mtk6\">3</span><span class=\"mtk1\">};</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">// 이터레이터를 구하면 값과 인덱스 모두 사용할 수 있음</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">auto</span><span class=\"mtk1\"> it </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">min_element</span><span class=\"mtk1\">(</span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">begin</span><span class=\"mtk1\">(), </span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">end</span><span class=\"mtk1\">());</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">cout </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk5\">*</span><span class=\"mtk1\">it </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">&quot;의 위치는 &quot;</span><span class=\"mtk1\"> </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> it </span><span class=\"mtk5\">-</span><span class=\"mtk1\"> </span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">begin</span><span class=\"mtk1\">(); </span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">auto</span><span class=\"mtk1\"> it </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">max_element</span><span class=\"mtk1\">(</span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">begin</span><span class=\"mtk1\">(), </span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">end</span><span class=\"mtk1\">());</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">cout </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk5\">*</span><span class=\"mtk1\">it </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">&quot;의 위치는 &quot;</span><span class=\"mtk1\"> </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> it </span><span class=\"mtk5\">-</span><span class=\"mtk1\"> </span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">begin</span><span class=\"mtk1\">(); </span></span></code></pre>\n</li>\n<li><code>min_element(begin, end, cmp)</code> &#x26; <code>max_element(begin, end, cmp)</code> : [begin, end)에서 비교함수를 기준으로 최소값과 최대값의 <em>이터레이터</em> 를 구한다.</li>\n<li>마찬가지로 <code>minmax_element(begin, end)</code>와 <code>minmax_element(begin, end, cmp)</code>를 사용하여 최소와 최대값의 이터레이터를 구할 수 있다.</li>\n</ul>\n<h4>Next_permutation</h4>\n<ul>\n<li><code>next_permutation(begin, end)</code>: [begin, end)를 순열이라고 생각했을 때, 사전 순으로 다음에 오는 순열을 만든다.</li>\n<li><code>prev_permutation(begin, end)</code>: 사전 순으로 그 전에 오는 순열을 만든다.</li>\n<li>\n<p><code>next_permutation(begin, end, cmp)</code>와 <code>prev_permutation(begin, end, cmp)</code>를 통해 비교 함수를 정의하여 사용할 수도 있다.</p>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk1\">vector</span><span class=\"mtk5\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> v </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> {</span><span class=\"mtk6\">1</span><span class=\"mtk1\">, </span><span class=\"mtk6\">2</span><span class=\"mtk1\">, </span><span class=\"mtk6\">3</span><span class=\"mtk1\">};</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">// false를 리턴하는 마지막 순열까지 출력</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">while</span><span class=\"mtk1\"> (</span><span class=\"mtk7\">next_permutation</span><span class=\"mtk1\">(</span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">begin</span><span class=\"mtk1\">(), </span><span class=\"mtk3\">v</span><span class=\"mtk1\">.</span><span class=\"mtk7\">end</span><span class=\"mtk1\">())) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk9\">int</span><span class=\"mtk1\"> x: v) cout </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> x;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">// 차례대로 출력: 132, 213, 231, 312, 321</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">&#96;&#96;</span></span></code></pre>\n</li>\n</ul>\n<style class=\"vscode-highlight-styles\">\n  :root {\n  --vscode-highlight-padding-v: 1rem;\n  --vscode-highlight-padding-h: 1.5rem;\n  --vscode-highlight-padding-top: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-right: var(--vscode-highlight-padding-h);\n  --vscode-highlight-padding-bottom: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-left: var(--vscode-highlight-padding-h);\n  --vscode-highlight-border-radius: 8px;\n\n  --vscode-highlight-line-highlighted-background-color: transparent;\n  --vscode-highlight-line-highlighted-border-width: 4px;\n  --vscode-highlight-line-highlighted-border-color: transparent;\n}\n\n.vscode-highlight {\n  overflow: auto;\n  -webkit-overflow-scrolling: touch;\n  padding-top: 1rem;\n  padding-top: var(--vscode-highlight-padding-top);\n  padding-bottom: 1rem;\n  padding-bottom: var(--vscode-highlight-padding-bottom);\n  border-radius: 8px;\n  border-radius: var(--vscode-highlight-border-radius);\n  font-feature-settings: normal;\n}\n\n.vscode-highlight-code {\n  display: inline-block;\n  min-width: 100%;\n}\n\n.vscode-highlight-line {\n  display: inline-block;\n  box-sizing: border-box;\n  width: 100%;\n  padding-left: 1.5rem;\n  padding-left: var(--vscode-highlight-padding-left);\n  padding-right: 1.5rem;\n  padding-right: var(--vscode-highlight-padding-right);\n}\n\n.vscode-highlight-line-highlighted {\n  background-color: var(--vscode-highlight-line-highlighted-background-color);\n  box-shadow: inset var(--vscode-highlight-line-highlighted-border-width) 0 0 0 var(--vscode-highlight-line-highlighted-border-color);\n}\n\n  .andromeda {\nbackground-color: #23262E;\ncolor: #D5CED9;\n}\n\n.andromeda .mtk1 { color: #D5CED9; }\n.andromeda .mtk2 { color: #23262E; }\n.andromeda .mtk3 { color: #00E8C6; }\n.andromeda .mtk4 { color: #5F6167; }\n.andromeda .mtk5 { color: #EE5D43; }\n.andromeda .mtk6 { color: #F39C12; }\n.andromeda .mtk7 { color: #FFE66D; }\n.andromeda .mtk8 { color: #F92672; }\n.andromeda .mtk9 { color: #C74DED; }\n.andromeda .mtk10 { color: #7CB7FF; }\n.andromeda .mtk11 { color: #FF00AA; }\n.andromeda .mtk12 { color: #96E072; }\n.andromeda .mtki { font-style: italic; }\n.andromeda .mtkb { font-weight: bold; }\n.andromeda .mtku { text-decoration: underline; text-underline-position: under; }\n</style>","frontmatter":{"title":"[백준] STL 05. 알고리즘","date":"2019-01-28","tags":["백준","Cpp","STL"]}}},"pageContext":{"slug":"/Baekjoon/0_STL/5_stl_algorithms/"}}}