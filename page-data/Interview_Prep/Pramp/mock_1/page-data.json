{"componentChunkName":"component---src-components-templates-blog-post-js","path":"/Interview_Prep/Pramp/mock_1/","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<p>2019년 5월 10일 Pramp 인터뷰 Question (what I asked)</p>\n</blockquote>\n<h3>Shifted Array Search</h3>\n<p>Given a sorted array shiftArr (that is shifted to the left by an unknown offset) and a num, find the index of the number within the array. (if number doesn't exist within array, return -1)</p>\n<h3>문제 분석</h3>\n<p>1번보다 2번이 더 효율적이기 때문에 2번 방식으로 문제를 풀어야 함</p>\n<ol>\n<li>\n<p>shiftArr의 원소를 차례대로 체크하여 num의 index 반환 (shiftArr의 끝에 도달해도 없으면 -1 반환)</p>\n<ul>\n<li>O(N): Brute-force Method</li>\n</ul>\n</li>\n<li>\n<p><strong>정렬되었다는 성질을 이용하여 Binary Search를 이용하여 index 찾기</strong></p>\n<ul>\n<li>O(logN): Binary Search Method</li>\n<li>단, 단순히 sorted된 상태가 아니라, <strong>shifted to the left일 수 있다는 점에서 변형된 문제</strong></li>\n</ul>\n</li>\n</ol>\n<h3>풀이</h3>\n<h4>1. Offset 찾기</h4>\n<ul>\n<li>\n<p>Shifted된 array의 성질:</p>\n<ol>\n<li>한 부분을 제외하고는 항상 오름차순으로 정렬되어 있음</li>\n<li>한 부분에서만 (shiftArr[i - 1] > shiftArr[i])가 충족됨 (i가 array에서 가장 작은 숫자)</li>\n<li>\n<p>(shiftArr[first] > shiftArray[last])가 충족됨: offset부터 오름차순, 마지막</p>\n<ul>\n<li>그림 추가</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>\n<p><strong>이진탐색으로 offset된 pivot 값 찾기</strong> (<strong>재귀</strong>)</p>\n<ul>\n<li>if mid값이 (shiftArr[mid - 1] > shiftArr[mid]) 충족하면, mid 값 반환</li>\n<li>\n<p>아니라면, shiftArr[mid]과 shiftArray[last] 비교하여 어느쪽에 pivot 값이 있는지 찾아서 재귀적으로 탐색</p>\n<ul>\n<li>(shiftArr[mid] > shiftArray[last]): <strong>정렬에 역행 -> pivot값은 mid의 오른편에 존재</strong></li>\n<li>(shiftArr[mid] &#x3C; shiftArray[last]): <strong>오른차순 정렬된 상태 -> pivot값은 mid의 왼편에 존재</strong></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4>2. Offset을 기준으로 shiftArr에서 num 인덱스 찾기 (<strong>binary search</strong>)</h4>\n<ol>\n<li>\n<p><strong>offset을 기준으로 완벽히 정렬된 두 array로 나누기</strong>: (pivot == offset; 가장 작은 숫자의 인덱스)</p>\n<ul>\n<li>[0, pivot - 1] 배열, [pivot, last] 배열로 자르기</li>\n</ul>\n</li>\n<li>\n<p>last 값과 num를 비교하여</p>\n<ul>\n<li>(num > shiftArray[last]): num은 왼쪽 배열에 존재</li>\n<li>(num &#x3C; shiftArray[last]): num은 오른쪽 배열에 존재</li>\n</ul>\n</li>\n<li>2번에서 구한 배열을 대상으로 binary search하여 num의 인덱스 값 구하기 (없으면 -1 반환)</li>\n</ol>\n<h3>코드</h3>\n<pre class=\"andromeda vscode-highlight\" data-language=\"cpp\"><code class=\"vscode-highlight-code\"><span class=\"vscode-highlight-line\"><span class=\"mtk9\">#include</span><span class=\"mtk1\"> </span><span class=\"mtk12\">&lt;iostream&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">#include</span><span class=\"mtk1\"> </span><span class=\"mtk12\">&lt;vector&gt;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">using</span><span class=\"mtk1\"> </span><span class=\"mtk9\">namespace</span><span class=\"mtk1\"> std;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\"></span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">int</span><span class=\"mtk1\"> </span><span class=\"mtk7\">findPivot</span><span class=\"mtk1\">( </span><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk7\">vector</span><span class=\"mtk1\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk1\">&gt;</span><span class=\"mtk9\">&amp;</span><span class=\"mtk1\"> </span><span class=\"mtk3\">shiftArr</span><span class=\"mtk1\">, </span><span class=\"mtk9\">int</span><span class=\"mtk1\"> </span><span class=\"mtk3\">startIndex</span><span class=\"mtk1\">, </span><span class=\"mtk9\">int</span><span class=\"mtk1\"> </span><span class=\"mtk3\">lastIndex</span><span class=\"mtk1\"> ) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">  </span><span class=\"mtk9\">int</span><span class=\"mtk1\"> mid </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> (startIndex </span><span class=\"mtk5\">+</span><span class=\"mtk1\"> lastIndex) </span><span class=\"mtk5\">/</span><span class=\"mtk1\"> </span><span class=\"mtk6\">2</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">  </span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">  // if only one element, return as pivot</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">  </span><span class=\"mtk9\">if</span><span class=\"mtk1\"> (startIndex </span><span class=\"mtk5\">==</span><span class=\"mtk1\"> lastIndex) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> mid;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">  }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">  </span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">  // if more than one element, check if mid point is pivot</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">  </span><span class=\"mtk9\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk3\">shiftArr</span><span class=\"mtk1\">[mid] </span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk3\">shiftArr</span><span class=\"mtk1\">[mid </span><span class=\"mtk5\">+</span><span class=\"mtk1\"> </span><span class=\"mtk6\">1</span><span class=\"mtk1\">]) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> mid </span><span class=\"mtk5\">+</span><span class=\"mtk1\"> </span><span class=\"mtk6\">1</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">  }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">  // if not pivot</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">  </span><span class=\"mtk9\">else</span><span class=\"mtk1\"> {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">    // if mid&#39;s value is larger than last value,  </span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk3\">shiftArr</span><span class=\"mtk1\">[mid] </span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk3\">shiftArr</span><span class=\"mtk1\">[lastIndex]) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">      // pivot is located on the right side of mid value</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">      </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">findPivot</span><span class=\"mtk1\">(shiftArr, mid </span><span class=\"mtk5\">+</span><span class=\"mtk1\"> </span><span class=\"mtk6\">1</span><span class=\"mtk1\">, lastIndex);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">    // pivot is located on the left side of mid value</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">else</span><span class=\"mtk1\"> {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">      </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">findPivot</span><span class=\"mtk1\">(shiftArr, startIndex, mid </span><span class=\"mtk5\">-</span><span class=\"mtk1\"> </span><span class=\"mtk6\">1</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">  }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\"></span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">int</span><span class=\"mtk1\"> </span><span class=\"mtk7\">binarySearch</span><span class=\"mtk1\">( </span><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk7\">vector</span><span class=\"mtk1\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk1\">&gt;</span><span class=\"mtk9\">&amp;</span><span class=\"mtk1\"> </span><span class=\"mtk3\">shiftArr</span><span class=\"mtk1\">, </span><span class=\"mtk9\">int</span><span class=\"mtk1\"> </span><span class=\"mtk3\">startIndex</span><span class=\"mtk1\">, </span><span class=\"mtk9\">int</span><span class=\"mtk1\"> </span><span class=\"mtk3\">lastIndex</span><span class=\"mtk1\">, </span><span class=\"mtk9\">int</span><span class=\"mtk1\"> </span><span class=\"mtk3\">num</span><span class=\"mtk1\">) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">  </span><span class=\"mtk9\">int</span><span class=\"mtk1\"> mid </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> (startIndex </span><span class=\"mtk5\">+</span><span class=\"mtk1\"> lastIndex) </span><span class=\"mtk5\">/</span><span class=\"mtk1\"> </span><span class=\"mtk6\">2</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">  </span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">  // if last element, determine whether num exists in shiftArr</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">  </span><span class=\"mtk9\">if</span><span class=\"mtk1\"> (startIndex </span><span class=\"mtk5\">==</span><span class=\"mtk1\"> lastIndex) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk3\">shiftArr</span><span class=\"mtk1\">[mid] </span><span class=\"mtk5\">==</span><span class=\"mtk1\"> num) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">      </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> mid;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    } </span><span class=\"mtk9\">else</span><span class=\"mtk1\"> {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">      </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> </span><span class=\"mtk5\">-</span><span class=\"mtk6\">1</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">  }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">  </span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">  // if more than one elemnt, use binary search to find index</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">  </span><span class=\"mtk9\">if</span><span class=\"mtk1\"> (num </span><span class=\"mtk5\">==</span><span class=\"mtk1\"> </span><span class=\"mtk3\">shiftArr</span><span class=\"mtk1\">[mid]) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> mid;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">  } </span><span class=\"mtk9\">else</span><span class=\"mtk1\"> </span><span class=\"mtk9\">if</span><span class=\"mtk1\"> (num </span><span class=\"mtk5\">&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk3\">shiftArr</span><span class=\"mtk1\">[mid]) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">binarySearch</span><span class=\"mtk1\">( shiftArr, startIndex, mid </span><span class=\"mtk5\">-</span><span class=\"mtk1\"> </span><span class=\"mtk6\">1</span><span class=\"mtk1\">, num);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">  } </span><span class=\"mtk9\">else</span><span class=\"mtk1\"> {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">binarySearch</span><span class=\"mtk1\">( shiftArr, mid </span><span class=\"mtk5\">+</span><span class=\"mtk1\"> </span><span class=\"mtk6\">1</span><span class=\"mtk1\">, lastIndex, num);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">  }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\"></span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">// return index of num within shiftArr</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">int</span><span class=\"mtk1\"> </span><span class=\"mtk7\">shiftedArrSearch</span><span class=\"mtk1\">( </span><span class=\"mtk9\">const</span><span class=\"mtk1\"> </span><span class=\"mtk7\">vector</span><span class=\"mtk1\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk1\">&gt;</span><span class=\"mtk9\">&amp;</span><span class=\"mtk1\"> </span><span class=\"mtk3\">shiftArr</span><span class=\"mtk1\">, </span><span class=\"mtk9\">int</span><span class=\"mtk1\"> </span><span class=\"mtk3\">num</span><span class=\"mtk1\"> ) {  </span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">  </span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">  // find the pivot point using binary search</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">  </span><span class=\"mtk9\">int</span><span class=\"mtk1\"> pivot </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">findPivot</span><span class=\"mtk1\">(shiftArr, </span><span class=\"mtk6\">0</span><span class=\"mtk1\">, </span><span class=\"mtk3\">shiftArr</span><span class=\"mtk1\">.</span><span class=\"mtk7\">size</span><span class=\"mtk1\">() </span><span class=\"mtk5\">-</span><span class=\"mtk1\"> </span><span class=\"mtk6\">1</span><span class=\"mtk1\">);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">  </span><span class=\"mtk9\">int</span><span class=\"mtk1\"> lastIndex </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">shiftArr</span><span class=\"mtk1\">.</span><span class=\"mtk7\">size</span><span class=\"mtk1\">() </span><span class=\"mtk5\">-</span><span class=\"mtk1\"> </span><span class=\"mtk6\">1</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">  </span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">  // if num is the pivot (smallest number in shiftArr)</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">  </span><span class=\"mtk9\">if</span><span class=\"mtk1\"> (num </span><span class=\"mtk5\">==</span><span class=\"mtk1\"> </span><span class=\"mtk3\">shiftArr</span><span class=\"mtk1\">[pivot]) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> pivot;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">  } </span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">  </span><span class=\"mtk9\">else</span><span class=\"mtk1\"> {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">    // if num is larger than the last number,</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">if</span><span class=\"mtk1\"> (num </span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk3\">shiftArr</span><span class=\"mtk1\">[lastIndex]) {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">      // it is on the left side of the pivot</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">      </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">binarySearch</span><span class=\"mtk1\">(shiftArr, </span><span class=\"mtk6\">0</span><span class=\"mtk1\">, pivot </span><span class=\"mtk5\">-</span><span class=\"mtk1\"> </span><span class=\"mtk6\">1</span><span class=\"mtk1\">, num);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk4\">    // else it is on the right side of the pivot</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    </span><span class=\"mtk9\">else</span><span class=\"mtk1\"> {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">      </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> </span><span class=\"mtk7\">binarySearch</span><span class=\"mtk1\">(shiftArr, pivot, lastIndex, num);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">    }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">  }</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\"></span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk9\">int</span><span class=\"mtk1\"> </span><span class=\"mtk7\">main</span><span class=\"mtk1\">() {</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">  vector</span><span class=\"mtk5\">&lt;</span><span class=\"mtk9\">int</span><span class=\"mtk5\">&gt;</span><span class=\"mtk1\"> v </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> {</span><span class=\"mtk6\">9</span><span class=\"mtk1\">, </span><span class=\"mtk6\">12</span><span class=\"mtk1\">, </span><span class=\"mtk6\">17</span><span class=\"mtk1\">, </span><span class=\"mtk6\">2</span><span class=\"mtk1\">, </span><span class=\"mtk6\">4</span><span class=\"mtk1\">, </span><span class=\"mtk6\">5</span><span class=\"mtk1\">};</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">  </span><span class=\"mtk9\">int</span><span class=\"mtk1\"> num </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">8</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">  </span><span class=\"mtk9\">int</span><span class=\"mtk1\"> result </span><span class=\"mtk5\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">shiftedArrSearch</span><span class=\"mtk1\">(v, num);</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">  cout </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> result </span><span class=\"mtk5\">&lt;&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk12\">&quot;</span><span class=\"mtk5\">\\n</span><span class=\"mtk12\">&quot;</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">  </span><span class=\"mtk9\">return</span><span class=\"mtk1\"> </span><span class=\"mtk6\">0</span><span class=\"mtk1\">;</span></span>\n<span class=\"vscode-highlight-line\"><span class=\"mtk1\">}</span></span></code></pre>\n<style class=\"vscode-highlight-styles\">\n  :root {\n  --vscode-highlight-padding-v: 1rem;\n  --vscode-highlight-padding-h: 1.5rem;\n  --vscode-highlight-padding-top: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-right: var(--vscode-highlight-padding-h);\n  --vscode-highlight-padding-bottom: var(--vscode-highlight-padding-v);\n  --vscode-highlight-padding-left: var(--vscode-highlight-padding-h);\n  --vscode-highlight-border-radius: 8px;\n\n  --vscode-highlight-line-highlighted-background-color: transparent;\n  --vscode-highlight-line-highlighted-border-width: 4px;\n  --vscode-highlight-line-highlighted-border-color: transparent;\n}\n\n.vscode-highlight {\n  overflow: auto;\n  -webkit-overflow-scrolling: touch;\n  padding-top: 1rem;\n  padding-top: var(--vscode-highlight-padding-top);\n  padding-bottom: 1rem;\n  padding-bottom: var(--vscode-highlight-padding-bottom);\n  border-radius: 8px;\n  border-radius: var(--vscode-highlight-border-radius);\n  font-feature-settings: normal;\n}\n\n.vscode-highlight-code {\n  display: inline-block;\n  min-width: 100%;\n}\n\n.vscode-highlight-line {\n  display: inline-block;\n  box-sizing: border-box;\n  width: 100%;\n  padding-left: 1.5rem;\n  padding-left: var(--vscode-highlight-padding-left);\n  padding-right: 1.5rem;\n  padding-right: var(--vscode-highlight-padding-right);\n}\n\n.vscode-highlight-line-highlighted {\n  background-color: var(--vscode-highlight-line-highlighted-background-color);\n  box-shadow: inset var(--vscode-highlight-line-highlighted-border-width) 0 0 0 var(--vscode-highlight-line-highlighted-border-color);\n}\n\n  .andromeda {\nbackground-color: #23262E;\ncolor: #D5CED9;\n}\n\n.andromeda .mtk1 { color: #D5CED9; }\n.andromeda .mtk2 { color: #23262E; }\n.andromeda .mtk3 { color: #00E8C6; }\n.andromeda .mtk4 { color: #5F6167; }\n.andromeda .mtk5 { color: #EE5D43; }\n.andromeda .mtk6 { color: #F39C12; }\n.andromeda .mtk7 { color: #FFE66D; }\n.andromeda .mtk8 { color: #F92672; }\n.andromeda .mtk9 { color: #C74DED; }\n.andromeda .mtk10 { color: #7CB7FF; }\n.andromeda .mtk11 { color: #FF00AA; }\n.andromeda .mtk12 { color: #96E072; }\n.andromeda .mtki { font-style: italic; }\n.andromeda .mtkb { font-weight: bold; }\n.andromeda .mtku { text-decoration: underline; text-underline-position: under; }\n</style>","frontmatter":{"title":"Pramp Mock Interview - Q 01","date":"2019-05-15","tags":["인터뷰"]}}},"pageContext":{"slug":"/Interview_Prep/Pramp/mock_1/"}}}